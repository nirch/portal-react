{"version":3,"sources":["store/reducers/ActiveUser/actions.js","store/reducers/index.js","store/reducers/ActiveUser/reducer.js","store/index.js","shared/server.js","pages/login/LoginPage.js","components/navbar/PortalNavbar.js","components/ButtonSet.js","components/SearchBar.js","components/itemsTable/itemsTable.js","pages/courses/CoursesPage.js","components/inPageNavbar/inPageNavbar.js","pages/courses/CourseDetailsPage.js","pages/users/UsersPage.js","components/profileImg/profileImg.js","components/detailsHeader/detailsHeader.js","components/portalInput/portalInput.js","components/portalSelect/portalSelect.js","components/userProfile.js","components/userSubordinates.js","components/userCourses.js","pages/users/UserDetailsPage.js","components/loadingData/Loading.js","components/hoursApprove/selectMonth.js","pages/hours/HoursReportPage.js","components/hoursApprove/inputCheck.js","pages/hours/HoursApprovePage.js","components/hoursApprove/selectDate.js","pages/hours/InsertHoursReport.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["LOGIN","LOGOUT","loginAction","activeUser","type","payload","combineReducers","state","action","newState","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","data","a","store","getState","token","undefined","v","request","method","url","phpDomain","JSON","stringify","headers","axios","response","server","LoginPage","props","email","pwd","showDiv","message","handleInputChange","bind","login","closeErrorHandler","this","setState","ev","name","target","value","pass","then","res","console","log","error","localStorage","err","to","className","Container","src","alt","onChange","placeholder","onClick","Component","mapDispatchToProps","connect","Hamburger","openSidebar","React","ArrowBack","returnToPreviousPage","PortalNavbar","redirectTo","isMenuOpen","isDropDown","currentUser","logout","closeSidebar","goToCoursesPage","goToStaffPage","profileClick","goToStudentsPage","goToNewUsersPage","openDropDown","goToHoursApprovePage","goToHoursReportPage","logoutAction","removeItem","userid","image","sidebarOpen","dropDown","arrow","height","header","hamburgerOrBack","enableBack","firstname","lastname","style","transition","ButtonSet","handleClick","button","makeChoice","key","selectedKey","buttons","buttonsDisplay","map","i","title","SearchBar","handleChange","e","inputvalue","increment","currentPage","pages","newPage","updatePage","decrement","searchValue","onSubmit","handleSearch","searchLabel","ItemsTable","items","tableTitles","titles","index","tableData","id","tableRow","item","push","CoursesPage","getFilteredData","coursestatus","val","search","page","courseDetails","showCourseDetails","desc","sorting","courses","searchPages","prevProp","prevState","courseDisplay","length","courseid","subname","project","teachers","InPageNavbar","tab","tabs","curses","tabsDisplay","data-toggle","role","component","class","CourseDetailsPage","UsersPage","userIsActive","isLoading","userstatus","userDetails","showUserDetails","userSearch","userCurrentPage","users","numberOfPages","pagePath","location","href","split","userType","userRequest","navbarTitle","searchPlaceholder","prevProps","userDisplay","displayItemsTable","Spinner","animation","variant","ProfileImg","Col","xs","DetailsHeader","back","copy","save","showProfileImg","profileImg","Row","Card","Body","Title","cardTitle","Subtitle","cardSubtitle","Text","cardText","PortalInput","onChangeValue","event","PortalSelect","visibleList","selectedOption","toggleList","onOptionSelect","innerHTML","displaiedTitleOrOption","options","option","UserProfile","roleid","userId","UserSubordinates","user","UserCourses","courseSearch","courseCurrentPage","enrolled","coursename","projectname","UserDetailsPage","profile","tabsData","registerdate","Loading","Button","disabled","as","size","aria-hidden","SelectMonth","monthBack","changeMonthYear","month","year","curYear","Date","getFullYear","curMonth","getMonth","monthForward","backwardOpacity","forwardOpacity","monthText","opacity","HoursReportPage","calculateTotalHours","GetReports","totalMin","repstart","starthour","finishhour","total","minutes","hours","toString","totalHours","openDetails","isDetailsMenuVisible","selectedReport","find","report","reportid","selectedReportId","GetCourses","GetProjects","getMonthYear","alert","getDataFromServer","getCourses","start","end","startDate","diff","getTime","Math","floor","newTo","pathname","rows","bgStyle","approval","hoursDiff","proj","projectid","date","Check","checked","color","border","backgroundColor","getDetails","field","reportersArray","index1","index2","reportingPerimeter","reports","projectName","courseName","actionid","actions","subjects","reportsubjectid","subject","HoursApprovePage","changeSearch","changePage","toggleCheck","reportId","includes","splice","toggleChecked","mark","ChangeReport","reportids","status","allReporters","j","getReporters","rowsPerPage","usefulReporters","reporters","sort","b","x","y","searchedReporters","filter","el","ceil","carkm","parseFloat","cost","automatic","status2","missingreportsubject","checkdate","copyreport","addTime","time2","time1","hours2","substring","hours1","min2","min1","parseInt","calculatTime","toggleImage","reportsLength","open","blockColor","checkAproved","checkDecline","checkWaiting","approvedTime","declineTime","waitingTime","totalTime","myColapse1","myColapse2","reporterReportsRows","accordionRows","timeLeg","srcLink","outline","secondIndex","isChecked","Header","marginRight","fontSize","fontWeight","Accordion","Toggle","eventKey","Collapse","updateSearch","SelectDate","plusDate","changeDate","reportDate","dateObject","setDate","getDate","newDate","minusDate","bgColor","currentDay","currentYear","currentMonth","currentDate","hour","getHours","minute","getMinutes","InsertHoursReport","openProjectsList","visibleProjectList","selectedCourse","selectedSubject","visibleCoursesList","visibleSubjectsList","visibleStartHour","visibleStartHourList","visibleEndHourList","visibleNisInput","visibleRemark","openCoursesList","visibleKmInput","openSubjectsList","openStartHour","selectedEndHour","openEndHour","changeView","visibleRemarkInput","viewInput","currentTarget","insertDataToInput","insertedKm","errorKm","insertedNis","errorNis","insertedRemark","saveDataToServer","projectsArrayData","selectedProject","selectedStartHour","errorProject","errorSubject","errorCourse","errorStartHour","errorEndHour","day","dataToSend","isSetProject","course","crs","act","isSetSubject","starthourvalid","finishhourvalid","hoursvalid","projstart","projend","repend","visibleErrorHoursRemark","noInterstion","isNaN","comment","concat","isSavedReport","handleProjectClick","coursesOfProject","subjectsOfProject","handleCourseClick","handleSubjectClick","handleStartHourClick","timesArray","endTimesArray","indexOf","handleEndHourClick","goBack","projectsList","subjectsList","openProjectsListStyle","projectsStyle","createRef","Object","values","match","params","getTimes","insertReportDetails","totalhours","dayObject","startTime","setUTCHours","setUTCMinutes","setTime","showStartTime","styleMenuField","coursesList","crc","sbj","startHoursList","time","endHoursList","onBlur","App","parse","exact","path","render","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.735709a7.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\n\nexport function loginAction(activeUser) {\n    return {\n        type: LOGIN,\n        payload: {\n            activeUser\n        }\n    }\n}\n\nexport function logoutAction() {\n    return {\n        type: LOGOUT\n    }\n}","import activeUserReducer from \"./ActiveUser/reducer\";\nimport { combineReducers } from \"redux\";\n\nexport default combineReducers({\n    activeUser: activeUserReducer,\n});","import { LOGIN, LOGOUT } from \"./actions\";\n\nexport default function activeUserReducer(state = null, action) {\n  let newState = state;\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOGIN:\n      newState = payload.activeUser;\n      break;\n    case LOGOUT:\n      newState = null;\n      break;\n  }\n\n  return newState;\n}\n","import { createStore } from \"redux\";\nimport reducers from \"./reducers\";\n\nexport default createStore(reducers, \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);","import axios from \"axios\";\nimport store from \"../store\";\n\nasync function server(data, type) {\n\n    const version = 2.3;\n    const phpDomain = 'https://pil1.appleseeds.org.il/dcnir/server/';\n    const imgsDomain = 'https://pil1.appleseeds.org.il/dcnir/';\n\n    // Adding the user's token to the payload\n    const { activeUser } = store.getState();\n    data.token = activeUser ? activeUser.token : undefined;\n\n    // Adding the version to the payload\n    data.v = version;\n\n    // creating the request\n    const request = {\n        method: \"post\",\n        url: phpDomain + \"datagate.php?type=\" + type,\n        data: JSON.stringify(data),\n        headers : { 'Content-Type': undefined},\n    }\n\n    const response = await axios(request);\n    return response;\n    // if (json && json.error == \"user not found\") {\n    //     loginStatus\t=false;\n    //     $rootScope.userToken = \"\";\n    //     $rootScope.isAdmin = false;\n    //     $state.transitionTo('login');\n    // }\n    // else if (json && json.error==\"access permission\")\n    // {\n    //     alert(json.error);\n    // }\n}\n\nexport default server;","import React, { Component } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap'\nimport './login.css'\nimport server from '../../shared/server'\nimport { Redirect } from 'react-router-dom'\nimport { loginAction } from \"../../store/reducers/ActiveUser/actions\";\nimport { connect } from \"react-redux\";\n\n\n\nclass LoginPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            pwd: \"\",\n            showDiv:false,\n            message:\"\"\n        \n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.login = this.login.bind(this);\n        this.closeErrorHandler = this.closeErrorHandler.bind(this)\n    }\n    closeErrorHandler (){\n        this.setState({showDiv:false})\n    }\n    handleInputChange(ev) {\n        const name = ev.target.name;\n        const value = ev.target.value;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    login() {\n        const { email, pwd } = this.state;\n\n        if (!email || !pwd) {\n           this.setState({\n            message:\"נא להזין פרטי משתמש\",\n            showDiv:true\n           })\n            return;\n        }\n\n        const data = { email, pass: pwd };\n\n        server(data, \"login\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                this.setState({\n                    message:\"סיסמא שגויה\",\n                    showDiv:true\n                })\n            } else {\n                this.props.loginAction(res.data);\n                localStorage.activeUser = JSON.stringify(res.data);\n            }\n        }, err => {\n            \n            \n            console.error(err);\n        })\n    }\n\n    render() {\n        const { email, pwd } = this.state;\n        const { activeUser } = this.props;\n\n        if (activeUser) {\n            return <Redirect to='/courses' />\n        }\n        \n        return (\n            <div className=\"LogIn\">\n            <Container>\n                <img className=\"imgLOGO\"\n                src='images/Login/01.png'\n                alt=\"tapuach logo\"\n                 />\n                \n                <div className=\"loginForm\">\n                    <input className=\"loginInput emailInput\" type=\"email\" name=\"email\" onChange={this.handleInputChange} placeholder=\"אימייל\"/>\n                    <input className=\"loginInput\" type=\"password\" name=\"pwd\" onChange={this.handleInputChange} placeholder=\"סיסמה\"/>\n                    <button className=\"loginBtn\" type=\"button\" onClick={this.login}>התחברות</button>\n                    <div className={(this.state.showDiv)?\"logInpwd hidden\":\"logInpwd\"}>\n                    </div>\n                    </div>\n                    </Container>\n                    <div className={(this.state.showDiv)?\"loginWrongPWD\":\"loginWrongPWD  hidden\"}>\n                        <div className=\"loginInline\">\n                        <img  src='images/Login/danger.svg' alt=\"danger\"/>\n                        <p className=\"loginInline\" > {this.state.message}</p>\n                        </div>\n                        <div className=\"loginSpan loginInline \"><button onClick={this.closeErrorHandler} className=\"loginClose\">&times;</button></div>\n                    </div>\n                    \n                </div>\n            \n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\nconst mapDispatchToProps = {\n    loginAction\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginPage);","import React, { Component } from 'react';\nimport './navbar.css'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { logoutAction } from \"../../store/reducers/ActiveUser/actions\";\nimport server from '../../shared/server'\n\nclass Hamburger extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return <div>\n            <div className=\"hamburger-menu\" onClick={this.props.openSidebar}>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    }\n}\n\nclass ArrowBack extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return <div>\n            <div className=\"arrow-back\" onClick={this.props.returnToPreviousPage}>\n                <div className=\"arrow1\"></div>\n                <div className=\"arrow2\"></div>\n                <div className=\"arrow3\"></div>\n            </div>\n        </div>\n    }\n}\n\nclass PortalNavbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirectTo: \"\",\n            isMenuOpen: false,\n            isDropDown: false,\n            currentUser: {\n\n            }\n        }\n\n        this.logout = this.logout.bind(this);\n        this.closeSidebar = this.closeSidebar.bind(this);\n        this.openSidebar = this.openSidebar.bind(this);\n        this.goToCoursesPage = this.goToCoursesPage.bind(this);\n        this.goToStaffPage = this.goToStaffPage.bind(this);\n        this.profileClick = this.profileClick.bind(this);\n        this.goToStudentsPage = this.goToStudentsPage.bind(this);\n        this.goToNewUsersPage = this.goToNewUsersPage.bind(this);\n        this.openDropDown = this.openDropDown.bind(this);\n        this.goToHoursApprovePage = this.goToHoursApprovePage.bind(this);\n        this.goToHoursReportPage = this.goToHoursReportPage.bind(this);\n\n\n\n    }\n    logout() {\n        this.props.logoutAction();\n        localStorage.removeItem(\"activeUser\");\n    }\n\n    closeSidebar() {\n        let { isMenuOpen } = this.state;\n        isMenuOpen = false;\n        this.setState({ isMenuOpen });\n    }\n\n    openSidebar() {\n        let { isMenuOpen } = this.state;\n        isMenuOpen = true;\n        this.setState({ isMenuOpen });\n    }\n\n    goToCoursesPage() {\n        let { redirectTo } = this.state;\n        redirectTo = \"/courses\";\n        this.setState({ redirectTo })\n        this.closeSidebar();\n    }\n\n    openDropDown() {\n        let { isDropDown } = this.state;\n        if (isDropDown)\n            isDropDown = false;\n        else\n            isDropDown = true;\n        this.setState({ isDropDown })\n    }\n\n    goToStaffPage() {\n        let { redirectTo } = this.state;\n        redirectTo = \"/users?type=staff\";\n        this.setState({ redirectTo })\n        this.closeSidebar();\n    }\n\n    goToStudentsPage() {\n        let { redirectTo } = this.state;\n        redirectTo = \"/users?type=students\";\n        this.setState({ redirectTo })\n        this.closeSidebar();\n    }\n\n    goToNewUsersPage() {\n        let { redirectTo } = this.state;\n        redirectTo = \"/users?type=new\";\n        this.setState({ redirectTo })\n        this.closeSidebar();\n    }\n\n\n    goToHoursApprovePage() {\n        let { redirectTo } = this.state;\n        redirectTo = \"/hours-approve\";\n        this.setState({ redirectTo })\n        this.closeSidebar();\n    }\n\n    goToHoursReportPage() {\n        let { redirectTo } = this.state;\n        redirectTo = \"/hours-report\";\n        this.setState({ redirectTo })\n        this.closeSidebar();\n    }\n\n    profileClick() {\n        let { redirectTo } = this.state;\n        redirectTo = \"/users/\" + this.state.currentUser.userid;\n        this.setState({ redirectTo })\n        this.closeSidebar();\n    }\n\n    componentDidUpdate() {\n        let { redirectTo } = this.state;\n        if (redirectTo != \"\") {\n            redirectTo = \"\";\n            this.setState({ redirectTo });\n        }\n\n    }\n\n    componentDidMount() {\n        let { currentUser } = this.state;\n        server({}, \"GetMyProfile\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                console.error(res.data.error);\n            } else {\n                currentUser = res.data;\n                currentUser.image = \"https://pil1.appleseeds.org.il/dcnir/\" + currentUser.image;\n                this.setState({ currentUser });\n            }\n        }, err => {\n            console.error(err);\n        })\n    }\n\n    render() {\n        let { header } = this.props;\n        let { redirectTo, isMenuOpen, isDropDown, currentUser } = this.state;\n        let sidebarOpen;\n        let dropDown, arrow, height;\n        let hamburgerOrBack = this.props.enableBack ? <ArrowBack returnToPreviousPage={this.props.enableBack} /> : <Hamburger openSidebar={this.openSidebar} />;\n        if (!currentUser.image || currentUser.image == \"\")\n            currentUser.image = \"images/profile-icon.png\";\n        if (isMenuOpen) {\n            sidebarOpen = \"sidebar-open\";\n        }\n        else {\n            sidebarOpen = \"\";\n        }\n\n        if (isDropDown) {\n            arrow = \"sidebar-icons push-left revert\";\n            dropDown = \"show-dropdown\";\n            height = {\n                height: 'initial'\n            };\n        }\n        else {\n            arrow = \"sidebar-icons push-left\";\n            dropDown = \"hide-dropdown\";\n            height = {\n                height: '6vh'\n            };\n        }\n\n        if (redirectTo) {\n            return <Redirect to={redirectTo} />;\n        }\n\n        return (\n            <div>\n                <header>\n                    {hamburgerOrBack}\n                    <div className=\"header-title\">\n                        {header}\n                    </div>\n                </header>\n                <div className={sidebarOpen}>\n                    <div className=\"sidebar-background\" onClick={this.closeSidebar}></div>\n                    <div className=\"sidebar-wrap\">\n                        <div className=\"sidebar\">\n                            <div className=\"sidebar-header\">\n                                <img className=\"appleseeds-logo\" src=\"images/appleseeds-logo.png\"></img>\n                                <div className=\"x\" onClick={this.closeSidebar}>&times;</div>\n                            </div>\n                            <div className=\"profile-preview\">\n                                <img className=\"profile-image\" onClick={this.profileClick} src={currentUser.image}></img>\n                                <div className=\"name-wrap\">\n                                    <span className=\"user-name\">\n                                        {currentUser.firstname + ' ' + currentUser.lastname}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"sidebar-options\">\n                                <div className=\"menu-information dropdown\" onClick={this.openDropDown} style={height}>\n                                    <span className=\"sidebar-icons\">\n                                        <img src=\"images/users.png\"></img>\n                                    </span>\n                                    משתמשים\n                                    <span className={arrow} style={{ transition: \"all 0.5s\" }}>\n                                        <img src=\"images/arrow_down.png\"></img>\n                                    </span>\n                                    <div className={dropDown}>\n                                        <div className=\"menu-information\" onClick={this.goToStaffPage}>\n                                            עובדים\n                                        </div>\n                                        <div className=\"menu-information\" onClick={this.goToStudentsPage}>\n                                            חניכים\n                                        </div>\n                                        <div className=\"menu-information\" onClick={this.goToNewUsersPage}>\n                                            משתמשים חדשים\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"menu-information\" onClick={this.goToCoursesPage}>\n                                    <span className=\"sidebar-icons\">\n                                        <img src=\"images/courses.png\"></img>\n                                    </span>\n                                    קורסים\n                                </div>\n                                <div className=\"menu-information\" onClick={this.goToHoursReportPage}>\n                                    <span className=\"sidebar-icons\">\n                                        <img src=\"images/hours-report.png\"></img>\n                                    </span>\n                                    דיווח שעות\n                                </div>\n                                <div className=\"menu-information\" onClick={this.goToHoursApprovePage}>\n                                    <span className=\"sidebar-icons\">\n                                        <img src=\"images/hours-approval.png\"></img>\n                                    </span>\n                                    אישור שעות\n                                </div>\n                                <div className=\"menu-information disconnect\" onClick={this.logout}>\n                                    <span className=\"sidebar-icons\">\n                                        <img src=\"images/disconnect-icon.png\"></img>\n                                    </span>\n                                    התנתקות\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n\n});\n\nconst mapDispatchToProps = {\n    logoutAction\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PortalNavbar);","import React, { Component } from 'react';\nimport { } from 'react-bootstrap';\nimport '../pages/courses/courses.css';\nimport server from '../shared/server'\nimport './ButtonSet.css'\n\nclass ButtonSet extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedKey: props.buttons[0].key\n        }\n       \n    }\n    handleClick = (button) => {\n        this.props.makeChoice(button.key);\n        this.setState({selectedKey: button.key})\n    }\n\n\n\n    render() {\n\n\n        const buttonsDisplay = this.props.buttons.map((button, i) => \n            <button key = {i} className = {this.state.selectedKey == button.key ? \"selected\" : \"\"} type=\"button\" onClick = {() => this.handleClick(button)}>\n            {button.title}\n            </button>\n        )\n\n        return (\n            <div className=\"btn-set\">\n               \n                {buttonsDisplay}\n            </div>\n        )\n    }\n}\n\nexport default ButtonSet;\n","import React from 'react';\n// import { Form, Button, FormControl} from 'react-bootstrap';\nimport '../pages/courses/courses.css';\nimport './SearchBar.css'\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputvalue: '',\n            \n        }\n    }\n    handleChange = (e) => {\n        this.setState({ inputvalue: e.target.value })\n    }\n    increment = () => {\n        if (this.props.currentPage < this.props.pages) {\n           let newPage =  this.props.currentPage +1;\n            this.props.updatePage(newPage);\n    }\n}\n    decrement = () => {\n        if (this.props.currentPage > 1) {\n            let newPage =  this.props.currentPage -1;\n           this.props.updatePage(newPage);\n    }\n    }\n    render() {\n        const searchValue = this.state.inputvalue\n        return (\n            <div className=\"search-bar\">\n\n                <form onSubmit={() => { this.props.handleSearch(searchValue) }}>\n                    <input type=\"text\" placeholder={this.props.searchLabel} value={searchValue} onChange={this.handleChange} />\n                </form>\n                <div className={this.props.pages < 1 ? \"invis\" : \"\"}>\n                    <span className={this.props.currentPage == 1 ? \"disactive\" : \"active\"} onClick={this.decrement}>\n                        <img src=\"images/arrow_down.svg\" alt=\"\" />\n                    </span>\n                    <span className=\"page-num\">{this.props.currentPage}</span>\n                    <span className={this.props.currentPage == this.props.pages ? \"disactive\" : \"active\"} onClick={this.increment}>\n                        <img src=\"images/arrow_down_left.svg\" alt=\"\" />\n                    </span>\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default SearchBar;","import React, { Component } from 'react';\nimport './itemsTable.css'\n\n\nclass ItemsTable extends Component {\n    render() {\n        const { items, titles } = this.props;\n\n        const tableTitles = titles.map((title,index) =>\n            <th key={index}>{title}</th>\n        );\n\n        const tableData = [];\n             \n        for (let id in items) {\n            const tableRow = items[id].map((item, index)=>\n                <td key={index} className=\"itemsTable-data\">\n                    {item}\n                </td>\n            );\n            \n            tableData.push(\n            <tr key={id} className=\"itemsTable-row\" onClick = {() => {this.props.handleClick(id)}}>\n               {tableRow}\n            </tr>)\n        }\n\n        return (           \n                <table  className=\"itemsTable-table\">\n                    <thead className=\"itemsTable-title\">\n                        <tr>\n                            {tableTitles}\n                        </tr>\n                    </thead>\n                    <tbody >                     \n                            {tableData}                   \n                    </tbody>\n                </table>\n            \n        );\n    }\n}\n\nexport default ItemsTable;","import React, { Component } from 'react';\nimport './courses.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport ButtonSet from '../../components/ButtonSet';\nimport server from '../../shared/server';\nimport { Container } from 'react-bootstrap'\nimport SearchBar from '../../components/SearchBar'\nimport itemsTable from '../../components/itemsTable/itemsTable'\nimport ItemsTable from '../../components/itemsTable/itemsTable';\nimport { rejects } from 'assert';\n\nclass CoursesPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            \n            coursestatus: 1,\n            desc: false,\n            page: 1,\n            search: \"\",\n            sorting: \"courseid\",\n            courses: [],\n            showCourseDetails: null\n        }\n        this.titles = [\"שם קורס מקוצר\", \"פרויקט\", \"מדריך\"];\n\n    }\n    componentDidMount() {\n        const { coursestatus, desc, page, search, sorting, searchPages } = this.state;\n        const data = { coursestatus, desc, page : page - 1, search, sorting, searchPages };\n        server(data, \"SearchCourses\").then(res => {\n            if (res.data.error) {\n                console.error(res.data.error)\n            } else {\n                console.log(res.data);\n                this.setState({\n                    courses: res.data.courses,\n                    searchPages: res.data.pages\n                })\n            }\n        }, err => {\n            console.error(err)\n        }\n        )\n    }\n    componentDidUpdate(prevProp, prevState) {\n        if (prevState.coursestatus !== this.state.coursestatus  || prevState.page !== this.state.page || prevState.search !== this.state.search) {\n            const { coursestatus, desc, page, search, sorting, searchPages } = this.state;\n            const data = { coursestatus, desc, page : page - 1, search, sorting, searchPages };\n            server(data, \"SearchCourses\").then(res => {\n                if (res.data.error) {\n                    console.error(res.data.error)\n                } else {\n                    this.setState({\n                        courses: res.data.courses,\n                        searchPages: res.data.pages\n                    })\n                }\n            }, err => {\n                console.error(err)\n            }\n            )\n        }\n    }\n    getFilteredData = (key) => {\n        this.setState({ coursestatus: key })\n    }\n    handleSearch = (val) => {\n        this.setState({ search: val })\n    }\n    updatePage = (page) => {\n        this.setState({ page: page})\n    }\n    courseDetails = (id) => {\n        this.setState({ showCourseDetails: \"id\" })\n    }\n    render() {\n        const { courses, showCourseDetails } = this.state;\n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n        if (this.state.showCourseDetails !== null) {\n            return <Redirect to={'/courses/' + showCourseDetails} />\n        }\n\n        const courseDisplay = {};\n        for (let i = 0; i < courses.length; i++) {\n            courseDisplay[courses[i].courseid] = [];\n            courseDisplay[courses[i].courseid].push(courses[i].subname);\n            courseDisplay[courses[i].courseid].push(courses[i].project);\n            courseDisplay[courses[i].courseid].push(courses[i].teachers);\n        }\n\n        const buttonsData = [\n            { key: 1, title: \"קורסים פעילים\" },\n            { key: 0, title: \"לא פעילים\" }\n        ]\n        \n\n        return (\n            <div>\n                <PortalNavbar header=\"קורסים\" />\n                <SearchBar searchLabel=\"חיפוש קורס\" handleSearch={this.handleSearch} updatePage={this.updatePage} pages={this.state.searchPages} currentPage={this.state.page } />\n                <ItemsTable titles={this.titles} items={courseDisplay} handleClick={this.courseDetails} />\n                <div className=\"courses-activeFilter\">\n                    <ButtonSet makeChoice={this.getFilteredData} buttons={buttonsData} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(CoursesPage);","import React, { Component } from 'react';\nimport './inPageNavbar.css'\n\n\nclass InPageNavbar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedKey: props.tabs[0].key\n        }\n\n    }\n\n    handleClick = (tab) => {\n        // console.log(tab.key)\n        this.setState({ selectedKey: tab.key })\n    }\n\n    render() {\n\n        const tabsDisplay = this.props.tabs.map(tab =>\n            <a\n                className={\"nav-item nav-link\" + (this.state.selectedKey == tab.key ? \" active\" : \"\")}\n                id=\"nav-curses-tab\"\n                data-toggle=\"tab\"\n                // href=\"#\" \n                role=\"tab\"\n                onClick={() => this.handleClick(tab)}\n            >\n                {tab.title}\n            </a>\n        )\n\n        var curses\n\n        if (this.state.selectedKey == 1) {\n            curses = this.props.tabs[0].component\n\n        } else if (this.state.selectedKey == 2) {\n            curses = this.props.tabs[1].component\n\n        } else if (this.state.selectedKey == 3) {\n            curses = this.props.tabs[2].component\n\n        } else if (this.state.selectedKey == 4) {\n            curses = this.props.tabs[3].component\n\n        }\n\n        return (\n            <div>\n                <div class=\"nav nav-tabs nav-fill\" id=\"nav-tab\" role=\"tablist\">\n                    {tabsDisplay}\n\n                </div>\n                <div>\n                    {curses}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default InPageNavbar;","import React, { Component } from 'react';\nimport './courses.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport inPageNavbar from '../../components/inPageNavbar/inPageNavbar';\n\n\nclass CourseDetailsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchPages: 1,\n            coursestatus: 1,\n            desc: false,\n            page: 1,\n            search: \"\",\n            sorting: \"courseid\",\n            courses: [],\n            showCourseDetails: null\n        }\n    }\n    render() {\n\n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n\n        return (\n            <div>\n                <PortalNavbar header=\"קורסים\" />\n                <inPageNavbar />\n                <h1>פרטי קורס</h1>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(CourseDetailsPage);\n","import React, { Component } from 'react';\nimport './users.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport ItemsTable from '../../components/itemsTable/itemsTable';\nimport ButtonSet from '../../components/ButtonSet';\nimport server from '../../shared/server';\nimport SearchBar from '../../components/SearchBar';\nimport { Spinner } from 'react-bootstrap';\n\nclass UsersPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            desc: false,\n            page: 1,\n            search: \"\",\n            sorting: \"userid\",\n            userstatus: 1,\n\n            users: [],\n            numberOfPages: 1,\n\n            showUserDetails: null\n        }\n\n        this.titles = [\"שם\", \"שם משפחה\", \"אימייל\"];\n\n        let pagePath = window.location.href.split(\"type=\");\n        let userType = pagePath[pagePath.length - 1];\n        if (userType == \"staff\") {\n            this.userRequest = \"SearchStaffUnderMe\";\n            this.navbarTitle = \"עובדים\";\n            this.searchPlaceholder = \"חיפוש עובד\";\n        } else if (userType == \"students\") {\n            this.userRequest = \"SearchStudentsUnderMe\";\n            this.navbarTitle = \"חניכים\";\n            this.searchPlaceholder = \"חיפוש חניך\";\n        } else if (userType == \"new\") {\n            this.userRequest = \"SearchNewUsers\";\n            this.navbarTitle = \"משתמשים חדשים\";\n            this.searchPlaceholder = \"חיפוש משתמש חדש\";\n        };\n\n        this.isLoading = true;\n\n    }\n\n\n    componentDidMount() {\n        const { desc, page, search, sorting, userstatus } = this.state;\n        const data = { desc, page: page - 1, search, sorting, userstatus };\n        server(data, this.userRequest).then(res => {\n            if (res.data.error) {\n                console.error(res.data.error);\n            } else {\n                this.isLoading = false;\n                this.setState({\n                    users: res.data.users,\n                    numberOfPages: res.data.pages\n                });\n            }\n        }, err => {\n            console.error(err);\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.userstatus !== prevState.userstatus || this.state.page !== prevState.page ||\n            this.state.search !== prevState.search || this.props.key !== prevProps.key) {\n            const { desc, page, search, sorting, userstatus } = this.state;\n            const data = { desc, page: page - 1, search, sorting, userstatus };\n            this.isLoading = true;\n            server(data, this.userRequest).then(res => {\n                if (res.data.error) {\n                    console.error(res.data.error);\n                } else {\n                    this.isLoading = false;\n                    this.setState({\n                        users: res.data.users,\n                        numberOfPages: res.data.pages\n                    });\n                }\n            }, err => {\n                console.error(err);\n            })\n        }\n    }\n\n    userIsActive = (key) => {\n        this.isLoading = true;\n        this.setState({ userstatus: key, page: 1 });\n    }\n\n    userDetails = (id) => {\n        this.setState({ showUserDetails: id });\n    }\n\n    userSearch = (val) => {\n        this.isLoading = true;\n        this.setState({ search: val, page: 1 });\n    }\n\n    userCurrentPage = (page) => {\n        this.isLoading = true;\n        this.setState({ page });\n    }\n\n    render() {\n        const { users, numberOfPages, page } = this.state;\n\n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n\n        if (this.state.showUserDetails != null) {\n            return <Redirect to={'/users/' + this.state.showUserDetails} />\n        }\n\n        const userDisplay = {}\n        for (var i = 0; i < users.length; i++) {\n            userDisplay[users[i].userid] = [];\n            userDisplay[users[i].userid].push(users[i].firstname);\n            userDisplay[users[i].userid].push(users[i].lastname);\n            userDisplay[users[i].userid].push(users[i].email);\n        }\n        \n        const buttonsData = [\n            { key: 1, title: \"פעילים\" },\n            { key: 0, title: \"לא פעילים\" }\n        ]\n\n        var displayItemsTable = this.isLoading ? <div className=\"user-spinner\">טוען נתונים, אנא המתן  <Spinner animation=\"border\" variant=\"primary\" /></div> :\n            <ItemsTable items={userDisplay} titles={this.titles} handleClick={this.userDetails} />\n\n        return (\n            <div>\n                <PortalNavbar className=\"users-Navbar\" header={this.navbarTitle} />\n\n                <SearchBar searchLabel={this.searchPlaceholder} handleSearch={this.userSearch} updatePage={this.userCurrentPage}\n                    pages={numberOfPages} currentPage={page} />\n\n\n                <div className=\"users-table\">\n                    {displayItemsTable}\n                </div>\n\n                <div className=\"users-activeFilter\">\n                    <ButtonSet makeChoice={this.userIsActive} buttons={buttonsData} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(UsersPage);\n","import React, { Component } from 'react';\nimport './profileImg.css';\nimport { Row, Col, Card } from 'react-bootstrap';\n\nclass ProfileImg extends React.Component {\n    \n    render() {\n        return (\n        <Col xs=\"12\" className=\"header-icons-Col header-icons-profile\">\n            <img src=\"images\\profile_icon.svg\" alt=\"profile\" className=\"header-profile-img\" />\n            <span className=\"header-compose-outline\">\n            <img src=\"images\\compose.svg\" alt=\"compose\" className=\"header-compose-img\" />\n            </span>\n        </Col>\n        )\n    }\n}\nexport default ProfileImg;","import React, { Component } from 'react';\nimport './detailsHeader.css';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport ProfileImg from '../profileImg/profileImg';\n\nclass DetailsHeader extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    back = () => {console.log(\"back\")};\n    copy = () => {console.log(\"copy\")};\n    save = () => {console.log(\"save\")};\n\n    render() {\n\n        let showProfileImg = this.props.profileImg ? <ProfileImg/> : false;    \n\n        return (\n            <Row className=\"header-Row\">\n                <Col xs=\"6\" className=\"header-Col\">\n                    <Card className=\"header-Card\">\n                        <Card.Body>\n                            <Card.Title>{this.props.cardTitle}</Card.Title>\n                            <Card.Subtitle>{this.props.cardSubtitle}</Card.Subtitle>\n                            <Card.Text>{this.props.cardText}</Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xs=\"6\" className=\"header-Col\">\n                    <Row className=\"header-icons-Row\">\n                        <Col xs=\"12\" className=\"header-icons-Col header-icons-actions\">\n                            <div className=\"header-iconGroup\">\n                                <img className=\"header-iconGroupItem\" src=\"images\\CourseControls\\Back\\drawable-mdpi\\noun_back_arrow_2690272.png\" alt=\"back\" onClick={this.back}/>\n                                <img className=\"header-iconGroupItem\" src=\"images\\CourseControls\\Copy\\drawable-mdpi\\noun_copy_573715.png\" alt=\"copy\" onClick={this.copy}/>\n                                <img className=\"header-iconGroupItem\" src=\"images\\CourseControls\\Save\\drawable-mdpi\\noun_save_2429243.png\" alt=\"save\" onClick={this.save}/>\n                            </div>\n                        </Col>\n                        {showProfileImg}\n                    </Row>\n                </Col>\n            </Row>\n\n        );\n    }\n}\n\nexport default DetailsHeader;","import React, { Component } from 'react';\nimport './portalInput.css'\n\n\nclass PortalInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n        this.onChangeValue = this.onChangeValue.bind(this);\n\n    }\n\n    onChangeValue(event) {\n        this.props.onChange(event.target.value)\n    }\n\n\n    render() {\n\n        const title = this.props.title\n        const type = this.props.type\n\n        return (\n            \n            <div className=\"inputDetails\" >\n                <h6 className=\"hederField\" >{title}</h6>\n                <input className=\"inputField\" type={type} placeholder={title} onChange={this.onChangeValue}></input>\n            </div>\n        );\n    }\n}\n\nexport default PortalInput;","import React, { Component } from 'react';\nimport './portalSelect.css'\n\n\nclass PortalSelect extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            visibleList: \"d-none\",\n            selectedOption: false\n        }\n        this.toggleList = this.toggleList.bind(this);\n        this.onOptionSelect = this.onOptionSelect.bind(this)\n\n    }\n\n    toggleList() {\n        if (this.state.visibleList === \"d-none\") {\n            this.setState({ visibleList: \"d-inline\" })\n        }\n        else { this.setState({ visibleList: \"d-none\" }) }\n    }\n\n    onOptionSelect(event) {\n        this.props.onChange(event.target.innerHTML)\n\n        this.setState({ selectedOption: event.target.innerHTML })\n    }\n\n\n\n    render() {\n\n        const title = this.props.title;\n        const selectedOption = this.state.selectedOption;\n        const options = this.props.options.map(option => <div onClick={this.onOptionSelect} className=\"report-dropdown-content \" >{option.value}</div>);\n        var displaiedTitleOrOption;\n\n        if (selectedOption) {\n            displaiedTitleOrOption = selectedOption\n        } else {\n            displaiedTitleOrOption = title\n        }\n\n\n        return (\n            <div className=\"report-menu-field ml-5 mr-3 \" id=\"hiddenList\" onClick={this.toggleList}>\n                <div className=\"report-menu-text\">\n                    {displaiedTitleOrOption}\n                    <span className=\"pr-3\"></span>\n                    <img src=\"images\\ArrowDown\\drawable-mdpi\\arrow_down.png\" alt=\"down arrow\"></img>\n                </div>\n                <div className={\"report-dropdown \"}> </div>\n                <div className={\"report-dropdown show-times \" + this.state.visibleList}>\n                    {options}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default PortalSelect;","import React, { Component } from 'react';\nimport ItemsTable from './../components/itemsTable/itemsTable';\nimport { Col, Row, Spinner } from 'react-bootstrap';\nimport server from './../shared/server';\nimport './../pages/users/users.css'\nimport PortalInput from '../components/portalInput/portalInput'\nimport PortalSelect from '../components/portalSelect/portalSelect'\n\nclass UserProfile extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // page: 1,\n            roleid: \"2\",\n            // search: \"\",\n            userId: \"\",\n\n            courses: [],\n            // numberOfPages: 1,\n\n        };\n        // this.titles = [\"קורס\", \"פרויקט\"];\n        this.isLoading = false;\n    }\n\n    // componentDidMount() {\n    //     const pagePath = window.location.href.split(\"/\");\n    //     const userId = pagePath[pagePath.length - 1];\n\n    //     // const { page, roleid, search, } = this.state;\n    //     const data = { userId };\n\n    //     server(data, \"GetUserProfileById\").then(res => {\n    //         console.log(\"temp\")\n        //     if (res.data.error) {\n        //         console.error(res.data.error);\n        //     } else {\n        //         this.isLoading = false;\n        //         this.setState({ courses: res.data.enrolled, numberOfPages: res.data.pages });\n        //     }\n        // }, err => {\n        //     console.error(err);\n    //     })\n    // }\n    // courseSearch = (val) => {\n    //     this.isLoading = true;\n    //     this.setState({ search: val, page: 1 });\n    // }\n    // courseCurrentPage = (page) => {\n    //     this.isLoading = true;\n    //     this.setState({ page });\n    // }\n\n    render() {\n        const { courses } = this.state;\n\n        const cityList = [\n            { key: 1, value: \"תל-אביב\" },\n            { key: 2, value: \"יהוד\" },\n\n        ]\n\n        const sector = [\n            { key: 1, value: \"יהודי\" },\n            { key: 2, value: \"נוצרי\" },\n            { key: 3, value: \"מוסלמי\" },\n            { key: 4, value: \"אתאיסט\" },\n        ]\n\n        const gender = [\n            { key: 1, value: \"זכר\" },\n            { key: 2, value: \"נקבה\" },\n\n        ]\n// ADD component the handle change should be there\n// city\n// \n\n        const tabsData = [\n            { key: 1, title: \"פרופיל\", component: <UserProfile/>},\n            { key: 2, title: \"קורסים\", component: <div></div> },\n            { key: 3, title: \"עובדים\", component: <div></div> },\n            { key: 4, title: \"דיווח\", component: <div></div> }\n        ]\n        const optionsData = [\n            { key: 1, value: \"פרופיל\" },\n            { key: 2, value: \"קורסים\" },\n            { key: 3, value: \"עובדים\" },\n            { key: 4, value: \"דיווח\" }\n        ]\n\n\n        // const courseDisplay = {}\n        // for (var i = 0; i < courses.length; i++) {\n        //     courseDisplay[courses[i].courseid] = [];\n        //     courseDisplay[courses[i].courseid].push(courses[i].coursename);\n        //     courseDisplay[courses[i].courseid].push(courses[i].projectname);\n        // }\n\n        var displayItemsTable = this.isLoading ? <div className=\"user-spinner\">טוען נתונים, אנא המתן  <Spinner animation=\"border\" variant=\"primary\" /></div> :\n\n            <div>\n                <Row >\n                    <Col >\n                        <PortalInput title=\"שם פרטי בעברית\" type=\"text\" onChange={this.handleChange} />\n                    </Col>\n                    <Col >\n                        <PortalInput title=\"שם משפחה בעברית\" type=\"text\" onChange={this.handleChange} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col >\n                        <PortalInput title=\"שם פרטי בערבית\" type=\"text\" onChange={this.handleChange} />\n                    </Col >\n                    <Col >\n                        <PortalInput title=\"שם משפחה בערבית\" type=\"text\" onChange={this.handleChange} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <PortalInput title=\"מספר טלפון\" type=\"text\" onChange={this.handleChange} />\n                    </Col>       <Col>\n                        <PortalInput title=\" מספר טלפון נוסף\" type=\"text\" onChange={this.handleChange} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <PortalInput title=\" שייך ל\" type=\"text\" onChange={this.handleChange} />\n                    </Col>       <Col>\n                        <PortalInput title=\"   תאריך לידה\" type=\"text\" onChange={this.handleChange} />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <PortalInput title=\"מספר תעודת זהות\" type=\"text\" onChange={this.handleChange} />\n                    </Col>       <Col>\n                        <PortalInput title=\"כתובת\" type=\"text\" onChange={this.handleChange} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <PortalSelect title=\"  עיר\" options={cityList} onChange={this.handleChange} />\n                    </Col>       <Col>\n                        <PortalSelect title=\"מגזר\" options={sector} onChange={this.handleChange} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <PortalSelect title=\"מגדר\" options={gender} onChange={this.handleChange} />\n                    </Col>       <Col>\n                        <PortalInput title=\"אימייל\" type=\"email\" onChange={this.handleChange} />\n                    </Col>\n                </Row>\n\n                <PortalInput title=\"מנהל ישיר\" type=\"text\" onChange={this.handleChange} />\n\n\n\n            </div>\n        return (\n            <div>\n\n                    {displayItemsTable}\n            </div>\n        );\n    }\n}\nexport default UserProfile;\n\n","import React, { Component } from 'react';\nimport ItemsTable from './../components/itemsTable/itemsTable';\nimport { Spinner } from 'react-bootstrap';\nimport server from './../shared/server';\nimport './../pages/users/users.css'\n\nclass UserSubordinates extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {},\n        };\n        this.titles = [\"שם העובד\"];\n        this.isLoading = true;\n    }\n\n    componentDidMount() {\n        const pagePath = window.location.href.split(\"/\");\n        const userId = pagePath[pagePath.length - 1];\n\n        const data = { userId };\n\n        server(data, \"GetManagedUsersByUserId\").then(res => {\n            if (res.data.error) {\n                console.error(res.data.error);\n            } else {\n                this.isLoading = false;\n                let user = res.data;\n                this.setState({ user: user });\n                console.log(user);\n            }\n        }, err => {\n            console.error(err);\n        })\n    }\n\n\n    render() {\n        const { user } = this.state;\n\n        const userDisplay = {}\n        for (var i = 0; i < user.length; i++) {\n            userDisplay[user[i].userid] = [];\n            userDisplay[user[i].userid].push(user[i].name);\n        }\n\n        var displayItemsTable = this.isLoading ? <div className=\"user-spinner\">טוען נתונים, אנא המתן  <Spinner animation=\"border\" variant=\"primary\" /></div> :\n            <ItemsTable items={userDisplay} titles={this.titles} handleClick={this.userDetails} />\n\n        return(\n            <div id=\"user-subordinate-table\">\n                {displayItemsTable}\n            </div>\n        );\n    }\n}\nexport default UserSubordinates;","import React, { Component } from 'react';\nimport ItemsTable from './../components/itemsTable/itemsTable';\nimport { Spinner } from 'react-bootstrap';\nimport server from './../shared/server';\nimport './../pages/users/users.css'\nimport SearchBar from './../components/SearchBar';\n\nclass UserCourses extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: 1,\n            roleid: \"2\",\n            search: \"\",\n            userId: \"\",\n\n            courses: [],\n            numberOfPages: 1,\n\n        };\n        this.titles = [\"קורס\", \"פרויקט\"];\n        this.isLoading = true;\n    }\n\n    componentDidMount() {\n        const pagePath = window.location.href.split(\"/\");\n        const userId = pagePath[pagePath.length - 1];\n\n        const { page, roleid, search, } = this.state;\n        const data = { page: page - 1, roleid, search, userId };\n\n        server(data, \"GetCoursesWithUserEnrolledAsRole\").then(res => {\n            if (res.data.error) {\n                console.error(res.data.error);\n            } else {\n                this.isLoading = false;\n                this.setState({ courses: res.data.enrolled, numberOfPages: res.data.pages });\n            }\n        }, err => {\n            console.error(err);\n        })\n    }\n    courseSearch = (val) => {\n        this.isLoading = true;\n        this.setState({ search: val, page: 1 });\n    }\n    courseCurrentPage = (page) => {\n        this.isLoading = true;\n        this.setState({ page });\n    }\n\n    render() {\n        const { courses, numberOfPages, page } = this.state;\n\n        const courseDisplay = {}\n        for (var i = 0; i < courses.length; i++) {\n            courseDisplay[courses[i].courseid] = [];\n            courseDisplay[courses[i].courseid].push(courses[i].coursename);\n            courseDisplay[courses[i].courseid].push(courses[i].projectname);\n        }\n\n        var displayItemsTable = this.isLoading ? <div className=\"user-spinner\">טוען נתונים, אנא המתן  <Spinner animation=\"border\" variant=\"primary\" /></div> :\n            <ItemsTable items={courseDisplay} titles={this.titles} handleClick={this.courseDetails} />\n\n        return (\n            <div>\n                <SearchBar searchLabel=\"חיפוש קורס\" handleSearch={this.courseSearch} updatePage={this.courseCurrentPage}\n                    pages={numberOfPages} currentPage={page} />\n\n                <div className=\"users-table\">\n                    {displayItemsTable}\n                </div>\n            </div>\n        );\n    }\n}\nexport default UserCourses;","import React, { Component } from 'react';\nimport './users.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport server from '../../shared/server';\nimport DetailsHeader from '../../components/detailsHeader/detailsHeader';\nimport InPageNavbar from '../../components/inPageNavbar/inPageNavbar';\nimport UserProfile from '../../components/userProfile'\nimport UserSubordinates from '../../components/userSubordinates';\nimport UserCourses from '../../components/userCourses';\n\nclass UserDetailsPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {},\n        };\n    }\n\n    componentDidMount() {\n        const pagePath = window.location.href.split(\"/\");\n        const userId = pagePath[pagePath.length - 1];\n\n        const data = { userId };\n\n        server(data, \"GetUserProfileById\").then(res => {\n            if (res.data.error) {\n                console.error(res.data.error);\n            } else {\n                let user = res.data.profile;\n                this.setState({ user: user });\n            }\n        }, err => {\n            console.error(err);\n        })\n    }\n\n    // enableBack = () => {\n    //     window.history.back()\n    // };\n\n    render() {\n\n        const { user } = this.state;\n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n        const tabsData = [\n            { key: 1, title: \"פרופיל\", component: <UserProfile/>},\n            { key: 2, title: \"קורסים\", component: <UserCourses/>},\n            { key: 3, title: \"עובדים\", component: <UserSubordinates/> },\n            { key: 4, title: \"דיווח\", component: <div></div> }\n        ]\n\n        const cardTitle =\n            <div>\n                <div className=\"user-cardTitle\">{user.firstname}</div>\n                <div className=\"user-cardTitle\">{user.lastname}</div>\n            </div>\n\n        const cardSubtitle =\n            <div>\n                <div className=\"user-cardSubtitle\">\n                    <label className=\"checkboxLabel\">\n                        <input type=\"checkbox\" />\n                        <span className=\"checkboxCustom\"></span>\n                    </label>\n                    <p className=\"checkboxText\">שינוי סיסמה</p>\n                </div>\n            </div>\n\n        const cardText =\n            <span className=\"user-cardText\">{`נרשם ב: ${user.registerdate}`}</span>\n\n        if (!this.state.user) {\n            return false;\n        } else {\n            return (\n                <div>\n                    <PortalNavbar className=\"users-Navbar\"\n                        header=\"עובדים\"\n                    // enableBack={this.enableBack} \n                    />\n\n                    <div className=\"detaislHeader\">\n                        <DetailsHeader cardTitle={cardTitle} cardSubtitle={cardSubtitle} cardText={cardText}\n                            profileImg={true} />\n                    </div>\n\n                    <InPageNavbar tabs={tabsData} />\n\n                </div>\n\n\n            );\n        }\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(UserDetailsPage);\n","import React from 'react'\nimport { Container, Button , Row, Spinner} from 'react-bootstrap';\n\n\nexport default class Loading extends React.Component { \n    constructor(props) {\n         super(props);\n    }\nrender(){\n    return(\n        <Container> \n        <Row className=\"justify-content-md-center p-3\">\n        <Button variant=\"danger\" className={this.props.isLoading} disabled >\n            <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n             />\n             טוען נתונים, נא להמתין\n           </Button>\n         </Row>  \n       </Container>      \n    )\n}\n}","import React, { Component } from 'react';\nimport '../../pages/hours/hoursApprove.css'\n// import { connect } from \"react-redux\";\n\n\n\n\nexport default class SelectMonth extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            year:new Date().getFullYear(),\n            month:new Date().getMonth()+1\n        }\n    }\n    monthBack=()=>{\n        const {changeMonthYear}=this.props;\n        let {month,year}=this.state;\n        const curYear=new Date().getFullYear();\n        const curMonth=new Date().getMonth()+1;\n        if (month===1) \n                    {month=12;year--;}\n        else \n                    {month--}\n        if ((year===curYear&& month<=curMonth) || (year<curYear && month>curMonth)) \n                                {\n                                    this.setState({month,year});\n                                    changeMonthYear(month,year)\n                                }\n    }\n    monthForward=()=>{\n        const {changeMonthYear}=this.props;\n        let {month,year}=this.state;\n        const curYear=new Date().getFullYear();\n        const curMonth=new Date().getMonth()+1;\n        if (month===12) \n                    {month=1;year++;}\n        else \n                    {month++}\n        if ((year===curYear&& month<=curMonth) || (year<curYear && month>curMonth)) \n                    {\n                        this.setState({month,year});\n                        changeMonthYear(month,year)\n                    }\n    }\n    render() {\n        \n        const {month,year} = this.state;\n        const curYear=new Date().getFullYear();\n        const curMonth=new Date().getMonth()+1;\n        let backwardOpacity,forwardOpacity;\n        if ((year===curYear&& month<curMonth) || (year<curYear)) {forwardOpacity=1} else {forwardOpacity=0.3};\n        if ((year===curYear&& curMonth-month<11) || (year<curYear && month-curMonth>1))  {backwardOpacity=1} else {backwardOpacity=0.3};\n        let monthText = \"\";\n        switch (month) {\n            case 1: monthText = \"ינואר\"\n                // code block\n                break;\n            case 2: monthText = \"פברואר\"\n                // code block\n                break;\n            case 3: monthText = \"מרץ\"\n                // code block\n                break;\n            case 4: monthText = \"אפריל\"\n                // code block\n                break;\n            case 5: monthText = \"מאי\"\n                // code block\n                break;\n            case 6: monthText = \"יוני\"\n                // code block\n                break;\n            case 7: monthText = \"יולי\"\n                // code block\n                break;\n            case 8: monthText = \"אוגוסט\"\n                // code block\n                break;\n            case 9: monthText = \"ספטמבר\"\n                // code block\n                break;\n            case 10: monthText = \"אוקטובר\"\n                // code block\n                break;\n            case 11: monthText = \"נובמבר\"\n                // code block\n                break;\n            case 12: monthText = \"דצמבר\"\n            // code block\n        }\n        return (\n            <div className=\"chooseMonth\">\n                <img style={{opacity:backwardOpacity}} className=\"arrowleftright\" src=\"/images/ArrowRight/drawable-xxhdpi/arrow_down.png\" onClick={this.monthBack}/>\n                <span className=\"monthTag\">   {monthText}  </span>\n                <img style={{opacity:forwardOpacity}}  className=\"arrowleftright\" src=\"/images/ArrowLeft/drawable-xxhdpi/arrow_down.png\"  onClick={this.monthForward}/>\n            </div>\n        );\n    }\n}\n\n\n\n// const mapStateToProps = state => ({\n//     activeUser: state.activeUser\n// });\n\n\n// export default connect(\n//     mapStateToProps\n// )(HoursApprovePage);\n","import React, { Component } from 'react';\nimport './hours.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport Loading from '../../components/loadingData/Loading';\nimport { connect } from \"react-redux\";\nimport { Redirect,Link } from 'react-router-dom'\nimport { Container, Button , Table, Row, Col} from 'react-bootstrap';\nimport server from '../../shared/server'\nimport  SelectMonth from '../../components/hoursApprove/selectMonth'\n\nclass HoursReportPage extends Component {\n  \n    constructor(props) {\n        super(props);\n        this.state = {\n            GetReports: [],\n            GetCourses:[],\n            GetProjects:[],\n            totalHours: \"\",\n            isLoading: \"\",\n            isDetailsMenuVisible: false,\n            selectedReport: {},\n            selectedReportId: null,\n            year:new Date().getFullYear(),\n            month:new Date().getMonth()+1\n        }\n        this.getMonthYear = this.getMonthYear.bind(this);\n        }\n    \n    componentDidMount(){\n        let data = {};\n        server(data, \"GetProjects\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                alert(\"error in login\");\n            } else {\n                data = res.data;\n                this.setState({GetProjects:data,isLoading:\"d-none\"})\n                this.getDataFromServer(this.state.month,this.state.year);\n                this.getCourses();\n            }\n        }, err => {\n            console.error(err);\n        }) \n      \n        \n        \n    }\n    getDataFromServer(month,year){\n        var data = {\n            month : month,\n            year : year\n        };\n        server(data, \"GetReports\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                alert(\"error in login\");\n            } else {\n                data = res.data;\n                this.setState({GetReports:data})\n                this.calculateTotalHours(data)\n            }\n        }, err => {\n            console.error(err);\n        })\n    }\n    getMonthYear(month,year){\n        this.setState({month:month,year:year}) // set state with data from component \n        this.getDataFromServer(month,year); //call to server when change the month \n        console.log(month,year)\n    }\n    \n    diff(start, end) {\n        start = start.split(\":\");\n        end = end.split(\":\");\n        var startDate = new Date(0, 0, 0, start[0], start[1], 0);\n        var endDate = new Date(0, 0, 0, end[0], end[1], 0);\n        var diff = endDate.getTime() - startDate.getTime();\n        var hours = Math.floor(diff / 1000 / 60 / 60);\n        diff -= hours * 1000 * 60 * 60;\n        var minutes = Math.floor(diff / 1000 / 60);\n    \n        // If using time pickers with 24 hours format, add the below line get exact hours\n        if (hours < 0)\n           hours = hours + 24;\n        //console.log((hours <= 9 ? \"0\" : \"\") + hours + \":\" + (minutes <= 9 ? \"0\" : \"\") + minutes)\n        return (hours <= 9 ? \"0\" : \"\") + hours + \":\" + (minutes <= 9 ? \"0\" : \"\") + minutes;\n    }\n    \n    getCourses(){\n        var data = {\n            coursestatus: 1,\n            desc: false,\n            page: 0,\n            search: \"\",\n            sorting: \"courseid\"\n        };\n        server(data, \"SearchCourses\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                alert(\"error in login\");\n            } else {\n                data = res.data.courses;\n                this.setState({GetCourses:data})\n            }\n        }, err => {\n            console.error(err);\n        }) \n    }\n    calculateTotalHours = (data) => {\n        //const{GetReports} = this.state\n        let GetReports = data\n        var totalMin = 0\n        for(let i=0;i<GetReports.length;i++){\n            let repstart = (+GetReports[i].starthour.split(\":\")[0]) * 60  + (+GetReports[i].starthour.split(\":\")[1])  ; \n            let repend = (+GetReports[i].finishhour.split(\":\")[0]) * 60  + (+GetReports[i].finishhour.split(\":\")[1])  ; \n            totalMin+=repend-repstart\n        }\n      \n       let minutes = totalMin%60\n       let hours = (totalMin-minutes)/60\n       let total \n       if (minutes == 0)\n           total = hours.toString() \n           else \n              total = hours.toString() + \":\" + minutes.toString()\n       this.setState({totalHours:total})\n       //return result \n    }\n\n    openDetails =(e)=>{\n        console.log(e.target.id)\n        const{isDetailsMenuVisible, GetReports} = this.state\n        let res = (isDetailsMenuVisible)? false : true\n        let selectedReport = GetReports.find((report)=>{if(report.reportid == e.target.id)return report})\n        this.setState({isDetailsMenuVisible:res, selectedReport:selectedReport, selectedReportId:e.target.id})\n        console.log(selectedReport.reportid)\n    }\n    render() {\n\n        const { GetReports, totalHours, GetProjects, GetCourses , isLoading, isDetailsMenuVisible, selectedReport, selectedReportId} = this.state;\n        const newTo = { \n            pathname: '/add-hours-report/' + selectedReportId, \n            action: \"Add\" ,\n            selectedReport: selectedReport\n          };\n     //   const test = \"81700\"\n\n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n        if(selectedReportId!==null){\n            return <Redirect to={newTo}/>\n        }\n       // console.log(GetCourses)  \n        console.log(GetReports)  \n        if(isLoading == \"\"){\n            var rows = <Loading isLoading={isLoading} />\n         }\n        else{\n            rows =  GetReports.map((item) => {  // generate table with customers\n                let bgStyle; \n                switch (item.approval) {\n                     case \"-1\": \n                        bgStyle =  \" bg-red \"  \n                        break;\n                        case \"1\":    \n                        bgStyle = \" bg-green \" \n                        break;\n                     default:  \n                         bgStyle = \" bg-yellow \"   \n                 }\n                 let style = \"report-row py-2 \" + bgStyle\n                 let hoursDiff = this.diff(item.starthour,item.finishhour)\n                 let project = GetProjects.find((proj) => {if(proj.projectid===item.projectid) return proj})\n                //  let course ={}\n                //  if (item.courseid == null)\n                //      course.name = \"\"\n                //  else\n                //      course = GetCourses.find((crs)=>{if (crs.courseid == item.courseid) return crs})\n                // console.log(course)\n                 return  <Row className={style + \"details-menu\"}>\n                      <Col className=\"px-1 text-center\">\n                       {item.date}\n                      </Col >\n                      <Col className=\"px-1 text-center\">\n                      {project.projectname}\n                      </Col>\n                      <Col className=\"px-1 text-center\">\n                      {/* {course.name} */}\n                      {item.courseid}\n                      </Col>\n                      <Col className=\"px-1 text-center \"> \n                      {hoursDiff}  <img src=\"images\\threedots.png\" id={item.reportid} className=\" threedots \" alt=\"details\" onClick={this.openDetails}></img>\n                      </Col>\n                      {/* <div className={(isDetailsMenuVisible)? \" details-menu-dropdown \" + \"d-block\": \" details-menu-content \" + \"d-none\"}>\n                          <div className= \" details-menu-dropdown-content \">פירוט</div>\n                          <div className= \" details-menu-dropdown-content \">שיכפול</div>\n                          <div className= \" details-menu-dropdown-content \">מחיקה</div>\n                          <div className= \" details-menu-dropdown-content \">הוספה</div>\n                      </div>                  */}\n                   </Row>\n         }\n        )\n        }\n        return (\n           <div>\n        \n           <Container  >\n           \n           <Row className=\"sticky-top bg-white shadow\">\n             <Col>\n             \n              <PortalNavbar header=\"דיווח שעות\" />\n                 <SelectMonth changeMonthYear={this.getMonthYear}/>\n                 <Row>\n               <Col className=\" text-center hours-header-text pb-2\">\n                <span>סהייכ שעות:</span><span className=\"mr-3 \">{totalHours}</span>\n                </Col>\n              </Row>  \n             </Col>\n             \n           </Row>\n          \n              <Row className=\"report-row justify-content-md-center report-font-bold pt-2 pb-1\"> \n              <Col xs  className=\" px-1 text-center \" >\n                    <span>תאריך</span>\n                  </Col>\n                  <Col xs  className=\" px-1 text-center \">\n                    <span>פרויקט</span>\n                  </Col>\n                   <Col xs className=\" px-1 text-center \">\n                    <span>נושא פעילות</span>\n                  </Col>\n                  <Col xs  className=\" px-1 text-center \" >\n                    <span>סהייכ שעות</span>\n                  </Col>\n                </Row>\n              <Row  >\n                  <Col >\n                  {rows}\n                  </Col>\n              </Row>\n          <Row>\n              <Col className=\"space-bottom d-block\">\n              </Col>\n          </Row>\n              <Row className=\"  fixed-bottom bg-white align-items-center justify-content-md-center px-3\" >\n          <Col className=\" px-1 text-center \"> \n              <img src=\"images\\CourseControls\\Save\\drawable-mdpi\\noun_save_2429243.png\" alt=\"save\"></img>\n              </Col>\n              <Col className=\" px-1 text-center report-opacity\">\n              <img src=\"images\\CourseControls\\Copy\\drawable-mdpi\\noun_copy_573715.png\" alt=\"copy\"></img>\n              </Col>\n             \n              <Col className=\" plus text-center mx-auto \">\n             \n              <Link to={newTo}><img src=\"images\\CourseControls\\Plus\\plus.png\" alt=\"add new report\" ></img></Link>\n              </Col>\n              \n              <Col className=\" px-1 text-center report-opacity\">\n              <img src=\"images\\CourseControls\\Delete\\drawable-mdpi\\noun_delete_1610851.png\" alt=\"delete\"></img>\n              </Col>\n              <Col className=\" px-1 text-center report-opacity\">\n               <img src=\"images\\CourseControls\\Back\\drawable-mdpi\\noun_back_arrow_2690272.png\" alt=\"back\"></img>\n              </Col>\n          </Row>\n          </Container>\n         \n         \n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(HoursReportPage);\n","import React, { Component} from 'react';\nimport '../../pages/hours/hoursApprove.css'\n\nexport default class Check extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n                opacity:0,\n                checked:this.props.checked,\n                color:this.props.color\n        }\n        \n    }\n    componentDidMount() {\n     let   {opacity}=this.state;     \n     if (this.props.checked) {opacity=1} else {opacity=0}\n     this.setState({opacity})\n    }\n    componentDidUpdate(prevProps, prevState ) {\n    if (prevProps.checked!==this.props.checked){\n        let   {opacity,checked}=this.state;\n        checked=this.props.checked;\n        if (this.props.checked) {opacity=1} else {opacity=0};\n        this.setState({checked,opacity})\n       }\n    }       \n    \n    render() {\n             return     ( <div className=\"newRadionDiv\">\n                            <input onChange={this.props.onChange}\n                                className=\"Radio\" type=\"radio\"\n                                name={this.props.name}\n                                value={this.props.value}\n                                checked={this.state.checked}\n                                style={{ opacity: \"0\" }}\n                            />\n                            <div className=\"newRadio\" style={{ border: \"1px solid \"+this.state.color }}>\n                                <div className=\"newRadioCenter\" style={{\n                                    backgroundColor: this.state.color,\n                                    opacity: this.state.opacity\n                                }}\n                                >\n\n                                </div>\n                            </div>\n\n                        </div>);\n    }\n\n}","import React, { Component } from 'react';\nimport '../hours/hoursApprove.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom'\nimport SelectMonth from '../../components/hoursApprove/selectMonth'\nimport { Accordion, Card, Button, Row, Col, Spinner } from 'react-bootstrap'\nimport server from '../../shared/server'\nimport SearchBar from '../../components/SearchBar'\nimport Check from '../../components/hoursApprove/inputCheck'\n\nfunction getDetails(field, reportersArray, index1, index2) {\n    switch (field) {\n        case \"projectName\":\n            {\n                if (!reportersArray[index1].reportingPerimeter[reportersArray[index1].reports[index2].projectid])\n                    return \"\";\n                return reportersArray[index1].reportingPerimeter[reportersArray[index1].reports[index2].projectid].projectName;\n            }\n        case \"courseName\":\n            {\n                if (!reportersArray[index1].reportingPerimeter[reportersArray[index1].reports[index2].projectid])\n                    return \"\";\n                let courses = reportersArray[index1].reportingPerimeter[reportersArray[index1].reports[index2].projectid].courses;\n                for (var i = 0; i < courses.length; i++) {\n                    if (courses[i].courseid === reportersArray[index1].reports[index2].courseid) return courses[i].courseName;\n                }\n                return \"\";\n            }\n        case \"actionName\":\n            {\n                if (!reportersArray[index1].reports[index2].actionid)\n                    return \"\";\n                let actions = reportersArray[index1].reportingPerimeter[reportersArray[index1].reports[index2].projectid].subjects;\n                for (var i = 0; i < actions.length; i++) {\n                    if (actions[i].reportsubjectid === reportersArray[index1].reports[index2].actionid) return actions[i].subject;\n                }\n                return \"\";\n            }\n            return \"\"\n    }\n}\n\nclass HoursApprovePage extends Component {\n\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            year: new Date().getFullYear(),\n            month: new Date().getMonth() + 1,\n            isLoading: true,\n            allReporters: [],\n            search: \"\",\n            pages: 0,\n            page: 0,\n            rowsPerPage: 10,\n            checked: [],\n            mark: \"סמן הכל\",\n            open: null\n        }\n\n    }\n    componentDidMount() {\n        // const year=new Date().getFullYear();\n        // const month=new Date().getMonth()+1;\n        // this.setState({month,year});\n        this.getReporters();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        // only update chart if the data has changed\n        if (prevState.month !== this.state.month) {\n            this.getReporters();\n        };\n    }\n    changeSearch = (value) => {\n        let { search } = this.state;\n        search = value;\n        this.setState({ search });\n    }\n    changePage = (value) => {\n        let { page } = this.state;\n        page = value - 1;\n        this.setState({ page });\n    }\n    toggleCheck = (reportId) => {\n        let { checked } = this.state;\n        if (checked.includes(reportId)) {\n            for (var i = 0; i < checked.length; i++) {\n                if (checked[i] === reportId) {\n                    checked.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        else {\n            checked.push(reportId);\n        }\n        console.log(\"checked\");\n        console.log(checked);\n        this.setState({ checked });\n    }\n    toggleChecked = (reports) => {\n        let { mark, checked } = this.state;\n        if (mark === \"סמן הכל\") {\n            mark = \"מחק הכל\";\n            checked = [];\n            for (var i = 0; i < reports.length; i++) {\n                checked.push(reports[i].reportid)\n            }\n        }\n        else {\n            mark = \"סמן הכל\";\n            checked = [];\n        }\n        this.setState({ mark, checked });\n    }\n    ChangeReport = (reportids, status) => {\n        console.log(reportids);\n\n        let { allReporters } = this.state;\n        var data = { 'reportids': reportids, 'status': status, 'checkdate2': true };\n        console.log(data);\n        //var data = {'reportids' : reportids, 'status' : reportStatus};\n        server(data, 'SetReportApproval').then(() => {\n            //    this.getReporters();\n            for (var i = 0; i < allReporters.length; i++) {\n                for (var j = 0; j < allReporters[i].reports.length; j++) {\n                    if (reportids.includes(allReporters[i].reports[j].reportid)) {\n                        allReporters[i].reports[j].approval = status;\n                    }\n                }\n            }\n\n            this.setState({ allReporters });\n        })\n    }\n\n    getReporters = () => {\n        let { isLoading, month, year, allReporters, search, pages, rowsPerPage } = this.state;\n        this.setState({ isLoading: true });\n        let usefulReporters = [];\n        var data = { month, year };\n        server(data, 'GetAllReporters').then((res) => {\n            let reporters = res.data\n            for (var i = 0; i < reporters.length; i++) {\n                if (reporters[i].reports.length > 0 || reporters[i].status == 1) {\n                    usefulReporters.push(reporters[i]);\n                }\n            }\n\n            usefulReporters.sort(function (a, b) {\n                var x = a.firstname;\n                var y = b.firstname;\n                if (x < y) { return -1; }\n                if (x > y) { return 1; }\n                return 0;\n            });\n\n            var searchedReporters = usefulReporters;\n\n            //filter by the search\n            var searchedReporters = usefulReporters.filter(function (el) {\n                return el.firstname.includes(search) || el.lastname.includes(search)\n            });\n\n\n            //calculate number of pages\n            pages = Math.ceil((searchedReporters.length) / rowsPerPage);\n            allReporters = usefulReporters;\n            // for (var i=0; i<rowsPerPage; i++)\n            // {\n            //     if(searchedReporters[i])\n            //     {\n            //         allReporters.push(searchedReporters[i]);\n            //     }\n            // }\n\n            for (var i = 0; i < allReporters.length; i++) {\n                for (var j = 0; j < allReporters[i].reports.length; j++) {\n                    var report = allReporters[i].reports[j];\n                    report.carkm = parseFloat(report.carkm);\n                    report.cost = parseFloat(report.cost);\n                    report.automatic = parseFloat(report.automatic);\n                    report.approval = parseFloat(report.approval);\n                    report.status2 = true;\n                    report.missingreportsubject = parseFloat(report.missingreportsubject);\n                    if (!report.checkdate) {\n                        report.checkdate = \"לא התרחש שינוי עדיין\";\n                        // console.log(report.checkdate);\n                    }\n\n                    if (report.copyreport) {\n                        report.copyreport.carkm = parseFloat(report.copyreport.carkm);\n                        report.copyreport.cost = parseFloat(report.copyreport.cost);\n                    }\n                    // $scope.calculateHours($scope.allReporters[i].reports[j]);\n\n                }\n                // $scope.calculateHoursSummary($scope.allReporters[i]);\n            }\n            isLoading = false;\n            this.setState({ isLoading, allReporters, pages })\n        });\n    }\n    addTime = (time2, time1) => {\n\n        var hours2 = time2.substring(0, 2);\n        var hours1 = time1.substring(0, 2);\n\n        var min2 = time2.substring(3, 5);\n        var min1 = time1.substring(3, 5);\n\n\n        var hours = parseInt(hours2) + parseInt(hours1);\n        var minutes = parseInt(min2) + parseInt(min1);\n\n        if (minutes >= 60) { minutes -= 60; hours++; }\n\n        if (hours.toString().length === 1) { hours = \"0\" + hours };\n        if (minutes.toString().length === 1) { minutes = \"0\" + minutes };\n\n        return ({ hours, minutes })\n    }\n    calculatTime = (time2, time1) => {\n        if (!time1 || !time2) return ({ hours: \"00\", minutes: \"00\" });\n        var hours2 = time2.substring(0, 2);\n        var hours1 = time1.substring(0, 2);\n\n        var min2 = time2.substring(3, 5);\n        var min1 = time1.substring(3, 5);\n\n\n        var hours = parseInt(hours2) - parseInt(hours1);\n        var minutes = parseInt(min2) - parseInt(min1);\n\n        if (minutes < 0) { minutes += 60; hours--; }\n\n        if (hours.toString().length === 1) { hours = \"0\" + hours };\n        if (minutes.toString().length === 1) { minutes = \"0\" + minutes };\n\n        return ({ hours, minutes })\n    }\n    changeMonthYear = (month, year) => {\n        // console.log('changing month:');\n        // console.log(month+\" \"+year);\n        const isLoading = true;\n        this.setState({ month, year, isLoading });\n\n\n    }\n    toggleImage = (index, reportsLength) => {\n\n        if (reportsLength) {\n            if (this.state.open === index) { this.setState({ open: null }) }\n            else { this.setState({ open: index }) };\n        }\n    }\n\n    render() {\n\n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n        //extracting from state\n        const { year, month, search, allReporters, pages, rowsPerPage, isLoading } = this.state;\n        var reporterReportsRows = [];\n        var searchedReporters = allReporters.filter(function (el) {\n            return el.firstname.includes(search) ||\n                el.lastname.includes(search) ||\n                (el.firstname + \" \" + el.lastname).includes(search) ||\n                (el.lastname + \" \" + el.firstname).includes(search)\n        });\n        var accordionRows = [];\n        let { page } = this.state;\n        let blockColor;\n        let checkAproved, checkDecline, checkWaiting;\n        let timeLeg = 0;\n        let approvedTime, declineTime, waitingTime, totalTime;\n        let myColapse1, myColapse2;\n\n        console.log(\"searchedreporters\");\n        console.log(searchedReporters);\n        console.log(\"pages\");\n        console.log(pages);\n        console.log(\"page\");\n        console.log(page);\n        console.log(\"search\");\n        console.log(search);\n        console.log(\"rowsperpage\");\n        console.log(rowsPerPage);\n\n        if (page === \"\") page = \"0\";\n\n\n        if (isLoading) {\n\n            accordionRows.push(\n                <div>\n                    <div className=\"spinner\">טוען נתונים, אנא המתן  <Spinner animation=\"border\" variant=\"primary\" /></div>;\n\n            </div>)\n        }\n        else {\n            for (var index = page * rowsPerPage; (index < searchedReporters.length && index < (parseInt(page) + 1) * rowsPerPage); index++) {\n                let srcLink;\n                var reports = searchedReporters[index].reports;\n                if (this.state.open === index) { srcLink = \"images/ArrowUp/drawable-xxhdpi/arrow_down.png\" } else { srcLink = \"images/ArrowDown/drawable-xxhdpi/arrow_down.png\" }\n                if (searchedReporters[index].reports.length) {\n                    myColapse2 =\n                        <Row>\n                            <Col xs=\"4\">\n                                <button onClick={this.toggleChecked.bind(this, reports)} className=\"roundButton whiteButton\" style={{ outline: \"none\" }}></button>\n\n                                <p className=\"buttonTag\">{this.state.mark}</p>\n                            </Col>\n                            <Col xs=\"4\">\n                                <button onClick={() => { this.ChangeReport(this.state.checked, 1) }} className=\"roundButton greenButton\" style={{ outline: \"none\" }}></button>\n\n                                <p className=\"buttonTag\">אישור מסומנים</p>\n                            </Col>\n                            <Col xs=\"4\">\n                                <button onClick={() => { this.ChangeReport(this.state.checked, -1) }} className=\"roundButton redButton\" style={{ outline: \"none\" }}></button>\n\n                                <p className=\"buttonTag\">דחיית מסומנים</p>\n                            </Col>\n                        </Row>;\n                    myColapse1 = <img onClick={this.toggleImage.bind(this, index, searchedReporters[index].reports.length)} className=\"arrowleftright\" src={srcLink} />\n                }\n                else { myColapse1 = <img style={{ opacity: \"0.2\" }} onClick={this.toggleImage.bind(this, index, searchedReporters[index].reports.length)} className=\"arrowleftright\" src={srcLink} />; myColapse2 = \"\" }\n                reporterReportsRows = [];\n                approvedTime = \"00:00\"; declineTime = \"00:00\"; waitingTime = \"00:00\"; totalTime = \"00:00\"\n                for (var secondIndex = 0; secondIndex < searchedReporters[index].reports.length; secondIndex++) {\n                    timeLeg = this.calculatTime(searchedReporters[index].reports[secondIndex].finishhour, searchedReporters[index].reports[secondIndex].starthour)\n                    var reportid = searchedReporters[index].reports[secondIndex].reportid;\n\n\n                    var isChecked = false;\n                    if (this.state.checked.includes(reportid)) { isChecked = true } else { isChecked = false };\n\n                    let opacityOfRadio = [];\n                    switch (searchedReporters[index].reports[secondIndex].approval) {\n\n                        case -1: blockColor = \"#ffa1a1\";\n                            declineTime = this.addTime(declineTime, timeLeg.hours + \":\" + timeLeg.minutes);\n                            declineTime = declineTime.hours + \":\" + declineTime.minutes;\n                            totalTime = this.addTime(totalTime, timeLeg.hours + \":\" + timeLeg.minutes);\n                            totalTime = totalTime.hours + \":\" + totalTime.minutes;\n                            opacityOfRadio = [1, 0, 0];\n                            // Decline\n                            break;\n                        case 1: blockColor = \"#a1d47f\";\n                            approvedTime = this.addTime(approvedTime, timeLeg.hours + \":\" + timeLeg.minutes);\n                            approvedTime = approvedTime.hours + \":\" + approvedTime.minutes;\n                            totalTime = this.addTime(totalTime, timeLeg.hours + \":\" + timeLeg.minutes);\n                            totalTime = totalTime.hours + \":\" + totalTime.minutes;\n                            opacityOfRadio = [0, 1, 0];\n                            // aproved\n                            break;\n                        default: blockColor = \"#ffd300\";\n                            waitingTime = this.addTime(waitingTime, timeLeg.hours + \":\" + timeLeg.minutes);\n                            waitingTime = waitingTime.hours + \":\" + waitingTime.minutes;\n                            totalTime = this.addTime(totalTime, timeLeg.hours + \":\" + timeLeg.minutes);\n                            totalTime = totalTime.hours + \":\" + totalTime.minutes;\n                            opacityOfRadio = [0, 0, 1];\n                        // waiting\n                    }\n                    checkAproved=<Check \n                                        onChange={this.ChangeReport.bind(this, [reportid], 1)} \n                                        name={index + \" \" + secondIndex} \n                                        value=\"aproved\" \n                                        checked={searchedReporters[index].reports[secondIndex].approval === 1} \n                                        color=\"#a1d47f\"/>\n                    checkDecline =<Check \n                                        onChange={this.ChangeReport.bind(this, [reportid], -1)} \n                                        name={index + \" \" + secondIndex} \n                                        value=\"decline\" \n                                        checked={searchedReporters[index].reports[secondIndex].approval === -1} \n                                        color=\"#ffa1a1\"/>                    \n \n                    checkWaiting =<Check \n                                        onChange={this.ChangeReport.bind(this, [reportid], 0)} \n                                        name={index + \" \" + secondIndex} \n                                        value=\"wait\" \n                                        checked={searchedReporters[index].reports[secondIndex].approval === 0} \n                                        color=\"#ffd300\"/>   \n                    reporterReportsRows.push(\n                        <div key={searchedReporters[index].reports[secondIndex].reportid} className=\"hoursLeg\">\n                            <Row>\n                                <Col xs=\"6\"></Col>\n                                <Col xs=\"2\">\n                                    <p className=\"radioTag redTag\">דחה</p>\n                                    <div className=\"radiocontainer\">\n                                        {checkDecline}\n\n                                    </div>\n                                </Col>\n                                <Col xs=\"2\">\n                                    <p className=\"radioTag yellowTag\">ממתין</p>\n                                    <div className=\"radiocontainer\">\n                                        {checkWaiting}\n\n                                    </div>\n                                </Col>\n                                <Col xs=\"2\">\n                                    <p className=\"radioTag greenTag\">אשר</p>\n                                    <div className=\"radiocontainer\">\n                                        {checkAproved}\n                                    </div>\n                                </Col>\n                            </Row>\n                            <div className=\"hoursContainer\" style={{ backgroundColor: blockColor }}>\n                                <div className=\"threeDots\">\n                                    <div className=\"smallBlackRound\"></div>\n                                    <div className=\"smallBlackRound\"></div>\n                                    <div className=\"smallBlackRound\"></div>\n                                </div>\n                                <div className=\"hoursNavBar\">\n\n                                </div>\n                                <Row>\n                                    <Col xs=\"2\">\n                                        <input onChange={this.toggleCheck.bind(this, reportid)} className=\"chekBoxHours\" type=\"checkbox\" name=\"hoursCheck\" checked={isChecked} />\n                                    </Col>\n                                    <Col xs=\"4\">\n                                        <p className=\"textInHoursLegBold\"> תאריך: {searchedReporters[index].reports[secondIndex].date}</p>\n                                    </Col>\n                                    <Col xs=\"4\">\n                                        <p className=\"textInHoursLegBold\"> סה\"כ שעות: {timeLeg.hours + \":\" + timeLeg.minutes}</p>\n                                    </Col>\n                                    <Col xs=\"2\">\n\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs=\"4\">\n                                        <p className=\"textInHoursHead\"> פרויקט</p>\n                                        <p className=\"textInHours\">{getDetails(\"projectName\", searchedReporters, index, secondIndex)}</p>\n                                    </Col>\n                                    <Col xs=\"4\">\n                                        <p className=\"textInHoursHead\"> מס/שם קורס</p>\n                                        <p className=\"textInHours\">{getDetails(\"courseName\", searchedReporters, index, secondIndex)}</p>\n                                    </Col>\n                                    <Col xs=\"4\">\n                                        <p className=\"textInHoursHead\"> נושא פעילות</p>\n                                        <p className=\"textInHours\">{getDetails(\"actionName\", searchedReporters, index, secondIndex)}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n\n                                </Row>\n                            </div>\n                        </div>)\n                }\n\n                accordionRows.push(\n                    <Card key={index}>\n                        <Card.Header style={{ border: \"none\" }}>\n                            <Row>\n                                <Col xs=\"4\">\n                                    <h5>{searchedReporters[index].lastname} {searchedReporters[index].firstname}</h5>\n                                </Col>\n                                <Col xs=\"6\">\n                                    <p><span style={{ color: \"#f5cc0c\", marginRight: \"2px\", fontSize: \"12px\" }}>{waitingTime}  </span><span style={{ color: \"#338d12\", marginRight: \"2px\", fontSize: \"12px\" }}>{approvedTime}  </span><span style={{ color: \"#ff0000\", marginRight: \"2px\", fontSize: \"12px\" }}>{declineTime}  </span><span style={{ color: \"#5d5d5d\", marginRight: \"7px\", fontSize: \"14px\", fontWeight: \"bold\" }}>{totalTime}</span></p>\n                                </Col>\n                                <Col xs=\"2\">\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={index}>\n                                        {myColapse1}\n                                    </Accordion.Toggle>\n                                </Col>\n                            </Row>\n\n                        </Card.Header>\n                        <Accordion.Collapse eventKey={index}>\n                            <Card.Body>\n                                {myColapse2}\n                                {reporterReportsRows}\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>)\n            }\n        }\n\n        return (\n            <div>\n                {/* enableBack */}\n                <PortalNavbar header=\"אישור שעות\" />\n                <SelectMonth changeMonthYear={this.changeMonthYear} />\n                <SearchBar handleSearch={this.changeSearch} updateSearch={this.changePage} currentPage={this.state.page + 1} pages={this.state.pages} searchLabel=\"חיפוש עובד\" />\n                <Accordion>\n                    {accordionRows}\n                </Accordion>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(HoursApprovePage);\n","import React, { Component} from 'react';\nimport { Container, Row, Col} from 'react-bootstrap';\nimport '../../pages/hours/hoursApprove.css'\n// import { connect } from \"react-redux\";\n\n\n\n\nexport default class SelectDate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            // year: new Date().getFullYear(),\n            // month: new Date().getMonth()+1,\n            // date: new Date().getDate(),\n            newDate: new Date(),\n            totalHours: 0, \n\n        }\n        \n    }\n        componentDidMount(){\n            const{ year, month, date} = this.props.reportDate;\n            var dateObject = new Date(+parseInt(year), parseInt(month) - 1, +parseInt(date)); \n            //  newDate = newDate.getDate() + \"/\" + (newDate.getMonth()+1) + \"/\" + newDate.getFullYear()\n            this.setState({newDate:dateObject});\n        }\n        \n \n     \n    plusDate=()=>{\n      \n       const{changeDate} = this.props;\n       const{ year, month, date} = this.props.reportDate;\n       // let newDate = new Date();\n       // month is 0-based, that's why we need dataParts[1] - 1\n       var dateObject = new Date(+year, month - 1, +date); \n       let numberOfDaysToAdd = 1; // const of shiping dates from suppliers\n       dateObject.setDate(dateObject.getDate() + numberOfDaysToAdd); \n       //let showDate = newDate.getFullYear() + \"-\" + (newDate.getMonth()+1) + \"-\" + newDate.getDate()\n       this.setState({newDate: dateObject}); // make date object and set to state newDate \n       changeDate(dateObject)\n       return dateObject;\n    }\n  \n    minusDate=()=>{\n      \n        const{changeDate} = this.props;\n        const{ year, month, date} = this.props.reportDate;\n        var dateObject = new Date(+year, month - 1, +date); \n        let numberOfDaysToAdd = -1; // const of shiping dates from suppliers\n        dateObject.setDate(dateObject.getDate() + numberOfDaysToAdd); \n        //let showDate = newDate.getFullYear() + \"-\" + (newDate.getMonth()+1) + \"-\" + newDate.getDate()\n        this.setState({newDate: dateObject}); // make date object and set to state newDate \n        changeDate(dateObject)\n        return dateObject;\n     }\n  \n    render() {\n        \n        const {newDate} = this.state;\n        let {status, totalHours} = this.props;\n      \n        let date = newDate.getDate()\n        if(newDate.getDate()>0 && newDate.getDate()<10)\n            date = \"0\"+ newDate.getDate()\n        let month = (newDate.getMonth()+1)\n        if((newDate.getMonth()+1)>0 && (newDate.getMonth()+1)<10)\n            month = \"0\"+ (newDate.getMonth()+1)\n        let year = newDate.getFullYear() % 100;  \n       \n        let currentDay = new Date();\n        let currentYear = currentDay.getFullYear() % 100;  \n        let currentMonth = (currentDay.getMonth()+1)\n        let currentDate = currentDay.getDate()\n        let hour = currentDay.getHours();\n        let minute =  currentDay.getMinutes();\n        \n        let bgColor;\n        switch (status) {\n             case \"-1\": \n               bgColor =  \" bg-red \"  \n               status = \"נדחה\"\n               break;\n             case \"1\":    \n               bgColor = \" bg-green \" \n               status = \"אושר\"\n               break;\n             default:  \n               bgColor = \" bg-yellow \"   \n               status = \"ממתין\"\n        }\n        let style = \"px-0 showDateHeader \" + bgColor\n        return (\n            <Container className={style}>\n            <Row>\n                <Col>\n                <div className=\" mt-3 text-center\">\n                   <img className=\"mb-2\" src=\"images/ArrowRight/drawable-mdpi/arrow_down.png\" alt=\"\" onClick={this.minusDate }/>\n                   <span className=\"report-showDate font-weight-bold\">   {date + \"/\" + month + \"/\" + year }  </span>\n                <img className=\"mb-2\" src=\"images/ArrowLeft/drawable-mdpi/arrow_down.png\"  alt=\"\" onClick={this.plusDate}/>\n                </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col className=\" text-center hours-header-text \">\n                <span>סהייכ שעות:</span><span className=\"mr-3\">{totalHours}</span>\n                </Col>\n            </Row>\n            <Row className=\" hours-header-small-text  text-center \">\n                <Col >\n               <span className=\"mr-1\"> זמן שינוי סטטוס:</span><span className=\"mr-2\">{hour + \":\" + minute  + \" | \" + currentDate + \".\" + currentMonth + \".\" + currentYear  }</span>\n                </Col>\n                <Col >\n                <span className=\"mr-5\">  סטטוס: </span><span className=\"mr-3\">{status}</span>\n                </Col>\n            </Row>\n            \n            </Container>\n        );\n    }\n}\n\n\n\n// const mapStateToProps = state => ({\n//     activeUser: state.activeUser\n// });\n\n\n// export default connect(\n//     mapStateToProps\n// )(HoursApprovePage);\n","import React, { Component } from 'react';\nimport './hours.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom'\nimport { Container, Button , DropdownButton, Dropdown, Row, Col} from 'react-bootstrap';\nimport server from '../../shared/server';\nimport SelectDate from '../../components/hoursApprove/selectDate.js'\n\nclass InsertHoursReport extends Component {\n  \n    constructor(props) {\n        super(props);\n        this.state = {\n            GetReports: [],\n            GetCourses:[],\n            GetProjects:[],\n            projectsList:[],\n            subjectsList:[],\n            projectsArrayData: [],\n            coursesOfProject: [],\n            subjectsOfProject: [],\n            timesArray: [],\n\n            selectedProject: \"פרויקט\",\n            selectedCourse: \"מס/שם קורס\",\n            selectedSubject: \"נושא פעילות\",\n            selectedStartHour: \"שעת התחלה\",\n            selectedEndHour: \"שעת סיום\",\n          \n            visibleProjectList: false,\n            visibleCoursesList: false,\n            visibleSubjectsList:false,\n            visibleStartHourList: false,\n            visibleEndHourList: false,\n            visibleKmInput: false,\n            visibleNisInput: false,\n            visibleRemark: false,\n            isSavedReport:false,\n\n            errorProject:false,\n            errorSubject:false,\n            errorCourse:false, \n            errorStartHour:false,\n            errorEndHour:false,\n            errorKm:false ,\n            errorNis:false,\n            visibleErrorHoursRemark: false,\n\n            insertedKm: ' רכב פרטי (ק\"מ) ',\n            insertedNis:'  תחבורה ציבורית (ש\"ח) ',\n            insertedRemark: ' הערות ',\n            openProjectsListStyle: \"\",\n            year:new Date().getFullYear(),\n            month:new Date().getMonth()+1,\n            date: new Date().getDate(),\n           \n            day: new Date(),\n            status: \"0\", // waiting by default 0 - new report (for change 1 - success, -1 - decline)\n            totalHours: 0  // total hours for report - for new report defaut is 0\n        }\n        this.projectsStyle = React.createRef();\n        \n        this.getDate = this.getDate.bind(this);\n        this.openProjectsList = this.openProjectsList.bind(this);\n        \n        }\n    \n    componentDidMount(){\n        let data = {};\n        server(data, \"GetMyReportingPerimeter\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                alert(\"error to read data from server\");\n            } else {\n                data = res.data;\n                let projectsArrayData = Object.values(data)\n                console.log(projectsArrayData)\n                console.log(this.props.match.params.id)\n                console.log(this.state.selectedProject)\n                let timesArray = this.getTimes();\n                this.setState({projectsArrayData:projectsArrayData, timesArray: timesArray})\n                if (this.props.match.params.id!=\"null\"&&!isNaN(this.props.match.params.id)){ // if the new report \n                   this.insertReportDetails(projectsArrayData)\n                }   \n            }\n        }, err => {\n            console.error(err);\n        }) \n       \n     // this.getDataFromServer(this.state.month,this.state.year);\n        \n     }\n\n    getDataFromServer(month,year){\n        var data = {\n            month : month,\n            year : year\n        };\n        server(data, \"GetReports\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                alert(\"error to read data from server\");\n            } else {\n                data = res.data;\n                this.setState({GetReports:data})\n                \n            }\n        }, err => {\n            console.error(err);\n        })\n       \n    }\n    insertReportDetails(reports){\n       const{selectedReport} = this.props.location\n       let project = reports.find((item)=>{if(item.projectid==selectedReport.projectid) return item})\n       let coursename\n       if(selectedReport.courseid==null)\n          coursename  = 'כללי'\n       else\n          coursename = project.courses.find((item)=>{if(item.courseid==selectedReport.courseid) return item}).courseName\n       let subject = project.subjects.find((item)=>{if(item.reportsubjectid == selectedReport.actionid) return item})\n       let totalhours = this.diff(selectedReport.starthour, selectedReport.finishhour)\n       let date = selectedReport.date.split(\"/\")\n       console.log(date)\n       \n       this.setState({\n            selectedProject:  project.projectName,\n            selectedCourse: coursename,\n            selectedSubject: subject.subject,\n            selectedStartHour: selectedReport.starthour,\n            selectedEndHour: selectedReport.finishhour,\n            status: selectedReport.approval,\n            totalHours: totalhours,\n            date:date[0],\n            month:date[1],\n            year: date[2],\n        })\n        if(selectedReport.carkm!==null)\n            this.setState({insertedKm: selectedReport.carkm})\n        if(selectedReport.cost!==null)\n            this.setState({  insertedNis:selectedReport.cost,})   \n        if(selectedReport.comment!==\"\")\n            this.setState({ insertedRemark: selectedReport.comment,})\n    }\n    getDate(dayObject){   // get values from selectDate component . month and year for server call, date for new report \n        let month = dayObject.getMonth()+1\n        let date = dayObject.getDate()\n        let year = dayObject.getFullYear()\n        this.setState({month:month,year:year,date:date,day:dayObject})\n        this.getDataFromServer(dayObject.getMonth()+1,dayObject.getFullYear()); // if change month - get data from selected month \n        //console.log(month,year,day)\n        //console.log(day.getMonth(),day.getFullYear())\n    }\n    \n    diff(start, end) {\n        start = start.split(\":\");\n        end = end.split(\":\");\n        var startDate = new Date(0, 0, 0, start[0], start[1], 0);\n        var endDate = new Date(0, 0, 0, end[0], end[1], 0);\n        var diff = endDate.getTime() - startDate.getTime();\n        var hours = Math.floor(diff / 1000 / 60 / 60);\n        diff -= hours * 1000 * 60 * 60;\n        var minutes = Math.floor(diff / 1000 / 60);\n    \n        // If using time pickers with 24 hours format, add the below line get exact hours\n        if (hours < 0)\n           hours = hours + 24;\n        //console.log((hours <= 9 ? \"0\" : \"\") + hours + \":\" + (minutes <= 9 ? \"0\" : \"\") + minutes)\n        return (hours <= 9 ? \"0\" : \"\") + hours + \":\" + (minutes <= 9 ? \"0\" : \"\") + minutes;\n    }\n      \n    openProjectsList =  (e) => {\n        const{visibleProjectList} = this.state;\n        console.log(\"openProjectsList\")\n       // console.log(e.currentTarget)\n      \n        this.setState({\n            selectedCourse: \"מס/שם קורס\",\n            selectedSubject: \"נושא פעילות\",\n           // selectedStartHour: \"שעת התחלה\",  // do not change entered hours\n          //  selectedEndHour: \"שעת סיום\",\n          visibleCoursesList: false,\n          visibleSubjectsList:false,\n          visibleStartHour: false,\n          visibleStartHourList: false,\n          visibleEndHourList: false,\n          visibleNisInput: false,\n          visibleRemark: false,})\n        if(visibleProjectList)\n           this.setState({visibleProjectList:false})\n           else \n           this.setState({visibleProjectList:true})\n              \n    }\n\n    openCoursesList =  (e) => {\n        const{visibleCoursesList} = this.state;\n        console.log(\"openCoursesList\")\n        this.setState({\n            selectedSubject: \"נושא פעילות\",\n           // selectedStartHour: \"שעת התחלה\",  // do not change entered hours\n          //  selectedEndHour: \"שעת סיום\",\n          visibleProjectList: false,\n          visibleSubjectsList:false,\n          visibleStartHourList: false,\n          visibleEndHourList: false,\n          visibleKmInput: false,\n          visibleNisInput: false,\n          visibleRemark: false,})\n        if(visibleCoursesList)\n        this.setState({visibleCoursesList:false})\n        else \n        this.setState({visibleCoursesList:true})\n    }\n\n\n    openSubjectsList =  (e) => {\n        const{visibleSubjectsList} = this.state;\n        console.log(\"openSubjectsList\")\n        this.setState({\n           // selectedStartHour: \"שעת התחלה\",   // do not change entered hours\n          //  selectedEndHour: \"שעת סיום\",\n          visibleProjectList: false,\n          visibleCoursesList: false,\n          visibleStartHourList: false,\n          visibleEndHourList: false,\n          visibleKmInput: false,\n          visibleNisInput: false,\n          visibleRemark: false,})\n        if(visibleSubjectsList)\n           this.setState({visibleSubjectsList:false})\n        else \n           this.setState({visibleSubjectsList:true})\n      \n     }\n\n    getTimes(){    // build array with times each 15 minutes \n       var startTime = new Date();\n       startTime.setUTCHours(-2);\n       startTime.setUTCMinutes(0);\n       startTime.setTime(startTime.getTime());\n       let showStartTime = startTime.getHours() + \":\" + startTime.getMinutes()\n       let timesArray = []\n      \n       let hour, minute;\n       for(let i=0;i<96;i++){\n         hour = startTime.getHours()\n         if(hour<10)\n            hour = \"0\" + startTime.getHours()\n         minute = startTime.getMinutes()\n         if (minute<10)\n              minute = \"0\" + startTime.getMinutes()\n         showStartTime = hour + \":\" + minute\n         timesArray.push(showStartTime)\n         startTime.setTime(startTime.getTime()+ (15 * 60 * 1000))  \n       } \n       return timesArray;\n    }\n\n    openStartHour =(e)=>{\n       const{visibleStartHourList} = this.state\n    \n       console.log(\"openStartHour\")\n       this.setState({ \n            selectedEndHour: \"שעת סיום\",\n            visibleProjectList: false,\n            visibleCoursesList: false,\n            visibleSubjectsList:false,\n            visibleEndHourList: false,\n            visibleKmInput: false,\n            visibleNisInput: false,\n            visibleRemark: false,})\n       if(visibleStartHourList)\n           this.setState({visibleStartHourList:false})\n        else \n           this.setState({visibleStartHourList:true})\n       }\n\n    openEndHour =(e)=>{\n       const{visibleEndHourList} = this.state \n       console.log(\"openEndHour\")\n       this.setState({ \n                visibleProjectList: false,\n                visibleCoursesList: false,\n                visibleSubjectsList:false,\n                visibleStartHourList: false,\n                visibleKmInput: false,\n                visibleNisInput: false,\n                visibleRemark: false,})\n      if(visibleEndHourList)\n       this.setState({visibleEndHourList:false})\n      else \n       this.setState({visibleEndHourList:true})\n     \n    }\n\n   \n    changeView = (e) =>{\n        this.setState({visibleKmInput:false, visibleRemarkInput:false,visibleNisInput:false })\n    }\n\n   viewInput = (e) => { // change div with header to input field per id \n    //    console.log(e.currentTarget.id)\n        switch (e.currentTarget.id) {\n            case \"km\": \n                 this.setState({visibleKmInput:true, visibleRemarkInput:false,visibleNisInput:false })\n                 break;\n            case \"nis\" :\n                this.setState({visibleNisInput:true, visibleKmInput:false , visibleRemarkInput:false})\n                break;\n            case \"remark\" :\n                this.setState({visibleRemarkInput:true, visibleKmInput:false , visibleNisInput:false})\n                 break;  \n            default:        \n        } \n     }\n    \n   insertDataToInput = (e) => {  //set state with input value and change status error to false (not error)\n    //    console.log(e.target.id)\n    //    console.log(e.target.value)\n        switch (e.target.id) {\n            case \"kmInput\": \n                 this.setState({insertedKm:e.target.value, errorKm:false})\n                 break;\n            case \"nisInput\" :\n                this.setState({insertedNis:e.target.value, errorNis:false})\n                break;\n            case \"remarkInput\" :\n                this.setState({insertedRemark:e.target.value })\n                break;  \n            default:        \n        }\n    }\n\n   saveDataToServer = (e) =>{\n    //************************************************ */\n    \n    const{GetReports, projectsArrayData, selectedProject, selectedSubject,selectedCourse, \n          selectedStartHour, selectedEndHour,totalHours, insertedKm, insertedNis, insertedRemark,\n          errorProject, errorSubject,errorCourse, errorStartHour, errorEndHour, errorKm , errorNis,\n          day}  = this.state;\n    let dataToSend = {} // build object with to send new report to server \n    if(selectedProject == \"פרויקט\") {  //check if project selected\n        this.setState({errorProject: true})\n        return\n        }\n    else {\n        let project = projectsArrayData.find((proj)=>{if(proj.projectName===selectedProject) return proj} )   \n        dataToSend.projectid = project.projectid  // insert project id \n        dataToSend.isSetProject = true\n        if(selectedCourse == \"מס/שם קורס\") { // check if course selected \n              this.setState({errorCourse: true})\n              return\n             }\n                else {\n                       if (selectedCourse == \"כללי\"){\n                          dataToSend.coursename = null\n                          dataToSend.courseid = null\n                         } \n                        else{\n                            dataToSend.coursename = selectedCourse \n                            let course = project.courses.find((crs)=>{if(crs.courseName===selectedCourse) return crs})\n                            dataToSend.courseid = course.courseid\n                       }\n                       //   coursename: \"כללי\"\n                      }      \n        if(selectedSubject == \"נושא פעילות\") {  // check if subject selected - insert as action to data base\n            this.setState({errorSubject: true})\n            return\n        }\n        else{\n            let actionid = project.subjects.find((act)=>{if(act.subject===selectedSubject) return act})\n            // console.log(actionid)\n              dataToSend.actionid = actionid.reportsubjectid\n              dataToSend.isSetSubject = true\n            // actionid: \"52\"\n        }\n \n    }\n  \n    // projectid: \"7\"\n    dataToSend.automatic = 0\n   //     automatic: 0\n   let date = day.getDate()\n   if(day.getDate()>0 && day.getDate()<10)\n       date = \"0\"+ day.getDate()\n   let month = (day.getMonth()+1)\n   if((day.getMonth()+1)>0 && (day.getMonth()+1)<10)\n       month = \"0\"+ (day.getMonth()+1)\n    let reportDate = date + \"/\" + month + \"/\" + day.getFullYear()\n    dataToSend.date = reportDate\n     // date: \"15/11/2019\"\n    \n    if(selectedStartHour == \"שעת התחלה\") { // check if start hour selected \n        this.setState({errorStartHour: true})\n            return\n        }\n    else{\n        dataToSend.starthour = selectedStartHour\n        dataToSend.starthourvalid = true\n        // starthour: \"19:00\"\n        if( selectedEndHour == \"שעת סיום\") { // check if end  hour selected \n            this.setState({errorEndHour: true})\n            return\n        }\n         else{ \n            dataToSend.finishhour = selectedEndHour\n            // finishhour: \"20:00\"\n            dataToSend.finishhourvalid = true\n            dataToSend.hoursvalid = true\n            dataToSend.hours = totalHours\n         }\n         }\n    \n    dataToSend.copyreport={}\n       \n    if(errorProject|| errorSubject ||errorCourse|| errorStartHour || errorEndHour || errorKm || errorNis)\n          return \n    console.log(GetReports)  \n    // noInterstion: true -- check \n    let project = GetReports.find((proj)=>{if(proj.date==dataToSend.date)return proj}) // search for exists report in previus reports\n    if(project !== undefined) {   // if we find the same project\n       let projstart = (+project.starthour.split(\":\")[0]) * 60 * 60 + (+project.starthour.split(\":\")[1]) * 60 ; //get time in seconds \n       let projend =  (+project.finishhour.split(\":\")[0]) * 60 * 60 + (+project.finishhour.split(\":\")[1]) * 60 ; \n       let repstart = (+dataToSend.starthour.split(\":\")[0]) * 60 * 60 + (+dataToSend.starthour.split(\":\")[1]) * 60 ; \n       let repend = (+dataToSend.finishhour.split(\":\")[0]) * 60 * 60 + (+dataToSend.finishhour.split(\":\")[1]) * 60 ;\n       if(! ((repstart<projstart&&repend<projstart)||(repstart>projend&&repend>projend)) ){\n         this.setState({visibleErrorHoursRemark:true})\n         return\n       }\n       else{\n         this.setState({visibleErrorHoursRemark:false})\n        \n       }\n    }\n    dataToSend.noInterstion = true\n    dataToSend.reportid= \"-1\"\n    dataToSend.status= \"\"\n    dataToSend.copyreport = {   actionid: dataToSend.actionid,\n                                date: dataToSend.date,\n                                finishhour: dataToSend.finishhour,\n                                hours: dataToSend.hours,\n                                projectid: dataToSend.projectid,\n                                courseid: dataToSend.courseid,\n                                starthour: dataToSend.starthour}\n   \n    if( insertedKm!== ' רכב פרטי (ק\"מ) '){\n        if (isNaN(insertedKm)){\n            this.setState({errorKm:true})\n            return\n        }\n        else{\n            dataToSend.carkm = parseInt(insertedKm)\n            dataToSend.copyreport.carkm = parseInt(insertedKm)\n        }\n        }\n    if (insertedNis!=='  תחבורה ציבורית (ש\"ח) '){\n         if (isNaN(insertedNis)){\n             this.setState({errorNis:true})\n             return\n         }\n         else {\n              dataToSend.cost = parseInt(insertedNis)\n              dataToSend.copyreport.cost = parseInt(insertedNis)\n         }\n             }\n    if(insertedRemark!== ' הערות '){\n          dataToSend.comment=insertedRemark\n          dataToSend.copyreport.comment=insertedRemark\n    }\n    console.log(\"dataToSend\")\n    console.log(dataToSend)\n        //*********************************************** */\n    var data = {};\n    var reports = GetReports\n    reports = reports.concat(dataToSend)\n    data.reports = reports\n   \n    console.log(data)\n    // data.reports=$scope.reports;\n    // // console.log(\"hour reports:\");\n    // // console.log(data.reports);\n    // server.requestPhp(data, 'SaveReports').then(function (data) {\n    //     alert(\"saved\");\n    //     this.setState({isSavedReport:true})\n    // });\n   \n   // data.reports\n   \n   server(data, \"SaveReports\").then(res => {\n        console.log(res);\n        // if (res.data.error) {\n        //     alert(\"error to add data to server\");\n        // } \n        // else {\n          //  data = res.data;\n          //  this.setState({GetReports:data.reports})\n            this.setState({isSavedReport:true})\n       // }\n    }, err => {\n        console.error(err);\n    })\n\n   }\n\n    handleProjectClick =(e) =>{   // call to projects list and set states for project and lists of subjects and courses\n        const{projectsArrayData}=this.state\n        let project = e.target.innerHTML\n        let proj =  projectsArrayData.find((proj)=>{if(proj.projectName==project)return proj})\n        let courses =[]\n        let subjects = proj.subjects\n        if (proj.courses.length===0){\n           courses[0]={}\n           courses[0].courseName = 'כללי'  // if  current project does not have courses so insert clali \n          \n        }\n       else\n           courses = proj.courses\n       console.log(courses)\n       this.setState({selectedProject:e.target.innerHTML,coursesOfProject:courses, subjectsOfProject:subjects, errorProject:false})\n\n    }\n    handleCourseClick =(e)=>{  // insert course to state \n        this.setState({selectedCourse:e.target.innerHTML,errorCourse:false})\n    }\n    handleSubjectClick =(e) =>{  // insert subject to state \n         this.setState({selectedSubject:e.target.innerHTML, errorSubject:false})\n    }\n   \n    handleStartHourClick =(e) =>{  // when set start hour -> reset end hours \n        const{timesArray} = this.state\n        let hour = e.target.innerHTML\n        let endTimesArray = []    // build time array starts from selected start hour \n            for(let i=timesArray.indexOf(hour)+1;i<timesArray.length;i++){\n                 endTimesArray.push(timesArray[i])   \n                }\n        this.setState({selectedStartHour:e.target.innerHTML, timesArray:endTimesArray, errorStartHour:false})\n    }\n    handleEndHourClick =(e) =>{  // insert start time \n        const{selectedStartHour} = this.state\n        let diff = this.diff(selectedStartHour, e.target.innerHTML)\n        this.setState({totalHours:diff, selectedEndHour:e.target.innerHTML, errorEndHour:false})\n    }\n    goBack =()=>{ // button go back \n        this.setState({isSavedReport:true})\n    }\n \n    enableBack =()=>{  // havbar go back \n        this.setState({isSavedReport:true})\n    }\n \n    render() {\n\n        const {projectsArrayData,coursesOfProject, subjectsOfProject, visibleStartHourList, visibleEndHourList, \n            visibleKmInput,visibleNisInput,visibleRemarkInput, visibleProjectList, visibleCoursesList, \n            visibleSubjectsList, timesArray, selectedStartHour, selectedEndHour, status , isSavedReport, \n            totalHours, selectedSubject, selectedProject, selectedCourse, visibleErrorHoursRemark, date, month, year,\n            errorProject, errorSubject, errorCourse, errorStartHour, errorEndHour, errorKm , errorNis } = this.state;\n       \n        console.log(this.props.activeUser)\n       \n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n     \n        if (isSavedReport) {\n            return <Redirect to='/hours-report'/>\n        }\n        let reportDate = {date:date,month:month,year:year}\n        let styleMenuField = \"report-menu-field \"\n        let style = \"report-dropdown \"\n        let  projectsList = <div className={(visibleProjectList)? style + \"d-inline\": style + \"d-none\"} >\n                       { projectsArrayData.map((proj)=>\n                         <div className=\"report-dropdown-content\" onClick= {this.handleProjectClick}>\n                              {proj.projectName}\n                         </div>\n                             )}\n                      </div>\n        let coursesList=[]\n        if(selectedProject === \"פרויקט\")\n            coursesList = []\n        else{\n           \n                \n            coursesList = <div className={(visibleCoursesList)? style + \"d-inline\": style + \"d-none\"} >\n                             {coursesOfProject.map((crc)=>\n                               <div className=\"report-dropdown-content\" onClick={this.handleCourseClick}>\n                                  {crc.courseName}\n                                   {/* - {crc.courseid} */}\n                               </div>\n                               )}\n                          </div>\n           }\n        let subjectsList = []\n        if(selectedProject === \"פרויקט\" || selectedCourse === \"מס/שם קורס\")\n            subjectsList = []\n        else{     \n            subjectsList = <div className={(visibleSubjectsList)? style + \"d-inline\": style + \"d-none\"} >\n                                {subjectsOfProject.map((sbj)=>\n                             <div className=\"report-dropdown-content\" onClick={this.handleSubjectClick}>\n                                  {sbj.subject} \n                             </div>\n                                 )}\n                          </div>\n           }   \n      \n       let startHoursList = <div className={(visibleStartHourList)? style + \"show-times d-inline\": style + \"show-times d-none\"} >\n                     {timesArray.map((time)=>\n                       <div className=\"report-dropdown-content\" onClick={this.handleStartHourClick}>\n                       {time} \n                       </div>\n                     )}\n                  </div>\n      let endHoursList =[]\n      if( selectedStartHour === \"שעת התחלה\")\n         endHoursList =[]\n      else{\n           endHoursList = <div className={(visibleEndHourList)? style + \"show-times d-inline\": style + \"show-times d-none\"} >\n                   {timesArray.map((time)=>\n                     <div className=\"report-dropdown-content\" onClick={this.handleEndHourClick}>\n                     {time} \n                    </div>\n                   )}\n         </div>\n       }\n\n    return (\n        <div className=\" report-font-size \" >\n       <Container className=\"insert-container report-font-size \" >     \n           \n           <Row className=\"sticky-top bg-white px-0\">\n             <Col>\n             \n              <PortalNavbar header=\"דיווח שעות\" enableBack={this.enableBack}/>\n               {/* getDate(month,year,date) date - full date , status -1 - denied, 0 - await, 1 - success, totalHours - total hours of current report  */}\n              \n              <SelectDate reportDate={reportDate} changeDate={this.getDate} status={status} totalHours={totalHours}/> \n             \n             </Col>\n           </Row>\n          \n           <Row >\n                  <Col>\n              <Row>\n                  <Col>\n                  <div className= {(errorProject)? styleMenuField + \" bg-danger \": styleMenuField + \" \"} id=\"projectsList\"  onClick = {this.openProjectsList}>\n                 \n                  <div className=\"report-menu-text\">  <span className=\"pr-3\">{selectedProject}</span> <img src=\"images\\ArrowDown\\drawable-mdpi\\arrow_down.png\" alt=\"\"></img></div>\n                       {projectsList}\n                      \n                  </div>\n                                  \n                  <div className={(errorCourse)? styleMenuField + \" bg-danger \": styleMenuField + \" \"} id=\"coursesList\"  onClick={this.openCoursesList}>\n                        <div className=\"report-menu-text\" >  <span className=\"pr-3\">{selectedCourse} </span> <img src=\"images\\ArrowDown\\drawable-mdpi\\arrow_down.png\" alt=\"\"></img></div>\n                        {coursesList}\n                  </div>\n            \n            \n                  <div className={(errorSubject)? styleMenuField + \" bg-danger \": styleMenuField + \" \"} id=\"subjectsList\"  onClick={this.openSubjectsList}>\n                        <div className=\"report-menu-text\">  <span className=\"pr-3\">  {selectedSubject}   </span> <img src=\"images\\ArrowDown\\drawable-mdpi\\arrow_down.png\" alt=\"\"></img></div>\n                        {subjectsList}\n                  </div>\n                  </Col>\n              </Row>\n      \n      \n             <Row>\n                 <Col className=\"px-0\">\n                \n                 <div className={(errorStartHour)? styleMenuField + \"  ml-5 mr-3 bg-danger \": styleMenuField + \"  ml-5 mr-3 \"} id=\"startHour\"  onClick={this.openStartHour}>\n                        <div className=\"report-menu-text text-center \">   {selectedStartHour}  </div>\n                        {startHoursList}\n                </div>\n             </Col>\n             <Col className=\"px-0\">\n             <div className={(errorEndHour)? styleMenuField + \"  ml-5 mr-3 bg-danger \": styleMenuField + \"  ml-5 mr-3 \"} id=\"endHour\"  onClick={this.openEndHour}>\n                        <div className=\"report-menu-text text-center \">  {selectedEndHour}  </div>\n                        {endHoursList}\n                </div>\n             </Col>\n             </Row>\n           \n           \n           \n             <Row>\n                 <Col className=\"px-0\">\n                \n                 <div className={(errorKm)? styleMenuField + \"  ml-5 mr-3 bg-danger \": styleMenuField + \"  ml-5 mr-3 \"} id=\"km\"  onClick={this.viewInput} onBlur={()=>this.changeView()}>\n                        <div className=\" report-menu-text text-center \"> \n                         {/* <div>test</div> */}\n                         <span className={(!visibleKmInput)?\"d-block\":\"d-none\"} >{this.state.insertedKm}</span>\n                         <span className={(visibleKmInput)?\"d-block\":\"d-none\"} ><input id=\"kmInput\" placeholder=\"0\" onChange={this.insertDataToInput}></input></span>\n                         \n                          </div>\n                </div>\n             </Col>\n             <Col className=\"px-0\">\n             <div className={(errorNis)? styleMenuField + \"  ml-5 mr-3 bg-danger \": styleMenuField + \"  ml-5 mr-3 \"} id=\"nis\" onClick={this.viewInput} onBlur={()=>this.changeView()}>\n                    <div className=\" report-menu-text text-center \">\n                          <span className={(!visibleNisInput)?\"d-block\":\"d-none\"}> {this.state.insertedNis} </span> \n                          <span className={(visibleNisInput)?\"d-block\":\"d-none\"} ><input id=\"nisInput\" placeholder=\"0\" onChange={this.insertDataToInput}></input></span>\n                        </div>\n                </div>\n             </Col>\n             </Row>\n         \n            <Row>\n            <Col>\n             <div className=\"report-menu-field \" id=\"remark\" onClick={this.viewInput} onBlur={()=>this.changeView()}>\n                        <div className=\"report-menu-text border-1\"> \n                         <span className=\"pr-3\"> </span>\n                         <span className={(!visibleRemarkInput)?\"d-inline\":\"d-none\"}> {this.state.insertedRemark} </span>\n                          <span className={(visibleRemarkInput)?\"d-inline\":\"d-none\"} ><input id=\"remarkInput\" placeholder=\" \" onChange={this.insertDataToInput}></input></span>\n                          </div>\n                 </div>\n                 </Col>\n                 </Row>\n                 </Col>\n           </Row>        \n           <Row>\n              <Col className=\"space-bottom d-block\">\n              </Col>\n          </Row>\n                 <Row  className=\" fixed-bottom bg-white align-items-center justify-content-md-center px-3 \" >\n              <Col className=\" px-1 text-center \"> \n                  <img src=\"images\\CourseControls\\Save\\drawable-mdpi\\noun_save_2429243.png\" alt=\"save\"></img>\n                  </Col>\n                  <Col className=\" px-1 text-center \">\n                  <img src=\"images\\CourseControls\\Copy\\drawable-mdpi\\noun_copy_573715.png\" alt=\"copy\"></img>\n                  </Col>\n                 \n                  <Col className=\" plus text-center mx-auto \">\n                  <img className=\"link\" src=\"images\\CourseControls\\Plus\\plus.png\" alt=\"add\" onClick={this.saveDataToServer}></img>\n                  </Col>\n                  \n                  <Col className=\" px-1 text-center \">\n                  <img src=\"images\\CourseControls\\Delete\\drawable-mdpi\\noun_delete_1610851.png\" alt=\"delete\"></img>\n                  </Col>\n                  <Col className=\" px-1 text-center \">\n                   <img src=\"images\\CourseControls\\Back\\drawable-mdpi\\noun_back_arrow_2690272.png\" alt=\"back\" onClick={this.goBack}></img>\n                  </Col>\n              </Row>\n             <Row>\n                 <Col><span className={(visibleErrorHoursRemark)?\"d-inline report-hours-error\":\"d-none\"}>לא ניתן לדווח על מספר פעילויות בשעות חופפות</span>\n                 </Col>\n             </Row>\n          </Container></div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(InsertHoursReport);\n","import React from 'react';\nimport logo from './logo.svg';\nimport { Switch, Route } from 'react-router-dom'\nimport LoginPage from './pages/login/LoginPage'\nimport CoursesPage from './pages/courses/CoursesPage'\nimport CourseDetailsPage from './pages/courses/CourseDetailsPage'\nimport UsersPage from './pages/users/UsersPage'\nimport UserDetailsPage from './pages/users/UserDetailsPage'\nimport HoursReportPage from './pages/hours/HoursReportPage'\nimport HoursApprovePage from './pages/hours/HoursApprovePage'\nimport InsertHoursReport from './pages/hours/InsertHoursReport'\n\nimport { loginAction } from \"../src/store/reducers/ActiveUser/actions\";\nimport { connect } from \"react-redux\";\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n   if (localStorage.activeUser){\n     \n    this.props.loginAction(JSON.parse(localStorage.activeUser))\n   }\n    \n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\">\n          <LoginPage/>\n        </Route>\n        <Route exact path=\"/courses\">\n          <CoursesPage/>\n        </Route>\n        <Route path=\"/courses/:id\">\n          <CourseDetailsPage/>\n        </Route>\n        <Route exact path=\"/users\" render={() => (<UsersPage key={window.location.href}/>)}/>\n        <Route path=\"/users/:id\">\n          <UserDetailsPage/>\n        </Route>\n        <Route path=\"/hours-report/\">\n          <HoursReportPage/>\n        </Route>\n        <Route path=\"/add-hours-report/:id\" component={InsertHoursReport}>  \n          {/* <InsertHoursReport/> */}\n        </Route>\n        <Route path=\"/hours-approve\">\n          <HoursApprovePage/>\n        </Route>\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  activeUser: state.activeUser\n});\n\nconst mapDispatchToProps = {\n  loginAction\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HashRouter><Provider store={store}><App /></Provider></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}