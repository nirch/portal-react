{"version":3,"sources":["store/reducers/ActiveUser/actions.js","store/reducers/index.js","store/reducers/ActiveUser/reducer.js","store/index.js","shared/server.js","pages/login/LoginPage.js","components/navbar/PortalNavbar.js","components/ButtonSet.js","components/SearchBar.js","components/itemsTable/itemsTable.js","pages/courses/CoursesPage.js","components/inPageNavbar/inPageNavbar.js","pages/courses/CourseDetailsPage.js","pages/users/UsersPage.js","components/detailsHeader/detailsHeader.js","pages/users/UserDetailsPage.js","components/hoursApprove/selectMonth.js","pages/hours/HoursReportPage.js","pages/hours/HoursApprovePage.js","components/hoursApprove/selectDate.js","pages/hours/InsertHoursReport.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["LOGIN","LOGOUT","loginAction","activeUser","type","payload","combineReducers","state","action","newState","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","data","a","store","getState","token","undefined","v","request","method","url","phpDomain","JSON","stringify","headers","axios","response","server","LoginPage","props","email","pwd","handleInputChange","bind","login","ev","name","target","value","this","setState","pass","then","res","console","log","error","alert","localStorage","err","to","Container","Form","Group","controlId","Label","Control","placeholder","onChange","Button","variant","onClick","Component","mapDispatchToProps","connect","Hamburger","className","openSidebar","React","ArrowBack","returnToPreviousPage","PortalNavbar","redirectTo","isMenuOpen","isDropDown","currentUser","logout","closeSidebar","goToCoursesPage","goToStaffPage","goToStudentsPage","goToNewUsersPage","openDropDown","goToHoursApprovePage","goToHoursReportPage","logoutAction","removeItem","image","sidebarOpen","dropDown","arrow","height","header","hamburgerOrBack","enableBack","src","profileClick","firstname","lastname","style","transition","ButtonSet","handleClick","button","makeChoice","key","selectedKey","buttons","buttonsDisplay","map","i","title","SearchBar","handleChange","e","inputvalue","increment","currentPage","pages","newPage","updatePage","decrement","searchValue","onSubmit","handleSearch","searchLabel","alt","ItemsTable","items","tableTitles","titles","index","tableData","id","tableRow","item","push","CoursesPage","getFilteredData","coursestatus","val","search","page","courseDetails","showCourseDetails","desc","sorting","courses","searchPages","prevProp","prevState","courseDisplay","length","courseid","subname","project","teachers","InPageNavbar","tab","tabs","curses","tabsDisplay","data-toggle","role","component","class","CourseDetailsPage","UsersPage","userIsActive","userstatus","userDetails","showUserDetails","userSearch","userCurrentPage","users","numberOfPages","pagePath","location","href","split","userType","userRequest","prevProps","userDisplay","userid","DetailsHeader","classname","line1","line2","line3","line4","UserDetailsPage","user","userId","profile","tabsData","registerdate","SelectMonth","monthBack","changeMonthYear","month","year","curYear","Date","getFullYear","curMonth","getMonth","monthForward","backwardOpacity","forwardOpacity","monthText","opacity","HoursReportPage","calculateTotalHours","GetReports","totalMin","repstart","starthour","finishhour","total","minutes","hours","toString","totalHours","GetCourses","GetProjects","getMonthYear","getDataFromServer","getCourses","start","end","startDate","diff","getTime","Math","floor","rows","bgStyle","approval","hoursDiff","find","proj","projectid","Row","Col","date","projectname","xs","getDetails","field","reportersArray","index1","index2","reportingPerimeter","reports","projectName","courseName","actionid","actions","subjects","reportsubjectid","subject","HoursApprovePage","changeSearch","changePage","toggleCheck","reportId","checked","includes","splice","toggleChecked","mark","reportid","ChangeReport","reportids","status","allReporters","j","getReporters","isLoading","rowsPerPage","usefulReporters","reporters","sort","b","x","y","searchedReporters","filter","el","ceil","report","carkm","parseFloat","cost","automatic","status2","missingreportsubject","checkdate","copyreport","addTime","time2","time1","hours2","substring","hours1","min2","min1","parseInt","calculatTime","toggleImage","reportsLength","open","blockColor","checkAproved","checkDecline","checkWaiting","approvedTime","declineTime","waitingTime","totalTime","myColapse1","myColapse2","reporterReportsRows","accordionRows","timeLeg","Spinner","animation","srcLink","outline","secondIndex","isChecked","backgroundColor","Card","Header","border","color","marginRight","fontSize","fontWeight","Accordion","Toggle","as","eventKey","Collapse","Body","updateSearch","SelectDate","plusDate","newDate","changeDate","setDate","getDate","minusDate","bgColor","currentDay","currentYear","currentMonth","currentDate","hour","getHours","minute","getMinutes","InsertHoursReport","openProjectsList","visibleProjectList","selectedCourse","selectedSubject","visibleCoursesList","visibleSubjectsList","visibleStartHour","visibleStartHourList","visibleEndHourList","visibleNisInput","visibleRemark","openCoursesList","visibleKmInput","openSubjectsList","openStartHour","selectedEndHour","openEndHour","changeView","visibleRemarkInput","viewInput","currentTarget","insertDataToInput","insertedKm","errorKm","insertedNis","errorNis","insertedRemark","saveDataToServer","projectsArrayData","selectedProject","selectedStartHour","errorProject","errorSubject","errorCourse","errorStartHour","errorEndHour","day","dataToSend","isSetProject","coursename","course","crs","act","isSetSubject","starthourvalid","finishhourvalid","hoursvalid","isNaN","comment","projstart","projend","repend","visibleErrorHoursRemark","concat","isSavedReport","handleProjectClick","innerHTML","coursesOfProject","subjectsOfProject","handleCourseClick","handleSubjectClick","handleStartHourClick","timesArray","endTimesArray","indexOf","handleEndHourClick","projectsList","subjectsList","openProjectsListStyle","projectsStyle","createRef","Object","values","getTimes","startTime","setUTCHours","setUTCMinutes","setTime","showStartTime","styleMenuField","coursesList","crc","sbj","startHoursList","time","endHoursList","onBlur","App","parse","exact","path","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.94781325.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\n\nexport function loginAction(activeUser) {\n    return {\n        type: LOGIN,\n        payload: {\n            activeUser\n        }\n    }\n}\n\nexport function logoutAction() {\n    return {\n        type: LOGOUT\n    }\n}","import activeUserReducer from \"./ActiveUser/reducer\";\nimport { combineReducers } from \"redux\";\n\nexport default combineReducers({\n    activeUser: activeUserReducer,\n});","import { LOGIN, LOGOUT } from \"./actions\";\n\nexport default function activeUserReducer(state = null, action) {\n  let newState = state;\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOGIN:\n      newState = payload.activeUser;\n      break;\n    case LOGOUT:\n      newState = null;\n      break;\n  }\n\n  return newState;\n}\n","import { createStore } from \"redux\";\nimport reducers from \"./reducers\";\n\nexport default createStore(reducers, \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);","import axios from \"axios\";\nimport store from \"../store\";\n\nasync function server(data, type) {\n\n    const version = 2.3;\n    const phpDomain = 'https://pil1.appleseeds.org.il/dcnir/server/';\n    const imgsDomain = 'https://pil1.appleseeds.org.il/dcnir/';\n\n    // Adding the user's token to the payload\n    const { activeUser } = store.getState();\n    data.token = activeUser ? activeUser.token : undefined;\n\n    // Adding the version to the payload\n    data.v = version;\n\n    // creating the request\n    const request = {\n        method: \"post\",\n        url: phpDomain + \"datagate.php?type=\" + type,\n        data: JSON.stringify(data),\n        headers : { 'Content-Type': undefined},\n    }\n\n    const response = await axios(request);\n    return response;\n    // if (json && json.error == \"user not found\") {\n    //     loginStatus\t=false;\n    //     $rootScope.userToken = \"\";\n    //     $rootScope.isAdmin = false;\n    //     $state.transitionTo('login');\n    // }\n    // else if (json && json.error==\"access permission\")\n    // {\n    //     alert(json.error);\n    // }\n}\n\nexport default server;","import React, { Component } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap'\nimport './login.css'\nimport server from '../../shared/server'\nimport { Redirect } from 'react-router-dom'\nimport { loginAction } from \"../../store/reducers/ActiveUser/actions\";\nimport { connect } from \"react-redux\";\n\n\n\nclass LoginPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            pwd: \"\"\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.login = this.login.bind(this);\n    }\n\n    handleInputChange(ev) {\n        const name = ev.target.name;\n        const value = ev.target.value;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    login() {\n        const { email, pwd } = this.state;\n\n        if (!email || !pwd) {\n            alert(\"נא להזין פרטי משתמש\");\n            return;\n        }\n\n        const data = { email, pass: pwd };\n\n        server(data, \"login\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                alert(\"error in login\");\n            } else {\n                this.props.loginAction(res.data);\n                localStorage.activeUser = JSON.stringify(res.data);\n            }\n        }, err => {\n            console.error(err);\n        })\n    }\n\n    render() {\n        const { email, pwd } = this.state;\n        const { activeUser } = this.props;\n\n        if (activeUser) {\n            return <Redirect to='/courses' />\n        }\n\n\n        return (\n\n            <Container>\n                <h1>התחברות</h1>\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label></Form.Label>\n                        <Form.Control value={email} name=\"email\" type=\"email\" placeholder=\"אימייל\" onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label></Form.Label>\n                        <Form.Control value={pwd} name=\"pwd\" type=\"password\" placeholder=\"סיסמה\" onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"button\" onClick={this.login}>\n                        התחבר\n                    </Button>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\nconst mapDispatchToProps = {\n    loginAction\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginPage);","import React, { Component } from 'react';\nimport './navbar.css'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { logoutAction } from \"../../store/reducers/ActiveUser/actions\";\nimport server from '../../shared/server'\n\nclass Hamburger extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return <div>\n            <div className=\"hamburger-menu\" onClick={this.props.openSidebar}>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    }\n}\n\nclass ArrowBack extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return <div>\n            <div className=\"arrow-back\" onClick={this.props.returnToPreviousPage}>\n                <div className=\"arrow1\"></div>\n                <div className=\"arrow2\"></div>\n                <div className=\"arrow3\"></div>\n            </div>\n        </div>\n    }\n}\n\nclass PortalNavbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirectTo: \"\",\n            isMenuOpen: false,\n            isDropDown: false,\n            currentUser: {\n\n            }\n        }\n\n        this.logout = this.logout.bind(this);\n        this.closeSidebar = this.closeSidebar.bind(this);\n        this.openSidebar = this.openSidebar.bind(this);\n        this.goToCoursesPage = this.goToCoursesPage.bind(this);\n        this.goToStaffPage = this.goToStaffPage.bind(this);\n        this.goToStudentsPage = this.goToStudentsPage.bind(this);\n        this.goToNewUsersPage = this.goToNewUsersPage.bind(this);\n        this.openDropDown = this.openDropDown.bind(this);\n        this.goToHoursApprovePage = this.goToHoursApprovePage.bind(this);\n        this.goToHoursReportPage = this.goToHoursReportPage.bind(this);\n\n\n\n    }\n    logout() {\n        this.props.logoutAction();\n        localStorage.removeItem(\"activeUser\");\n    }\n\n    closeSidebar() {\n        let { isMenuOpen } = this.state;\n        isMenuOpen = false;\n        this.setState({ isMenuOpen });\n    }\n\n    openSidebar() {\n        let { isMenuOpen } = this.state;\n        isMenuOpen = true;\n        this.setState({ isMenuOpen });\n    }\n\n    goToCoursesPage() {\n        let { redirectTo } = this.state;\n        redirectTo = \"/courses\";\n        this.setState({ redirectTo })\n        this.closeSidebar();\n    }\n\n    openDropDown() {\n        let { isDropDown } = this.state;\n        if (isDropDown)\n            isDropDown = false;\n        else\n            isDropDown = true;\n        this.setState({ isDropDown })\n    }\n\n    goToStaffPage() {\n        let { redirectTo } = this.state;\n        redirectTo = \"/users?type=staff\";\n        this.setState({ redirectTo })\n        this.closeSidebar();\n    }\n\n    goToStudentsPage() {\n        let { redirectTo } = this.state;\n        redirectTo = \"/users?type=students\";\n        this.setState({ redirectTo })\n        this.closeSidebar();\n    }\n\n    goToNewUsersPage() {\n        let { redirectTo } = this.state;\n        redirectTo = \"/users?type=new\";\n        this.setState({ redirectTo })\n        this.closeSidebar();\n    }\n\n\n    goToHoursApprovePage() {\n        let { redirectTo } = this.state;\n        redirectTo = \"/hours-approve\";\n        this.setState({ redirectTo })\n        this.closeSidebar();\n    }\n\n    goToHoursReportPage() {\n        let { redirectTo } = this.state;\n        redirectTo = \"/hours-report\";\n        this.setState({ redirectTo })\n        this.closeSidebar();\n    }\n    componentDidUpdate() {\n        let { redirectTo } = this.state;\n        if (redirectTo != \"\") {\n            redirectTo = \"\";\n            this.setState({ redirectTo });\n        }\n\n    }\n\n    componentDidMount() {\n        let { currentUser } = this.state;\n        server({}, \"GetMyProfile\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                console.error(res.data.error);\n            } else {\n                currentUser = res.data;\n                currentUser.image= \"https://pil1.appleseeds.org.il/dcnir/\"+currentUser.image;\n                this.setState({ currentUser });\n            }\n        }, err => {\n            console.error(err);\n        })\n    }\n\n    render() {\n        let { header } = this.props;\n        let { redirectTo, isMenuOpen, isDropDown, currentUser } = this.state;\n        let sidebarOpen;\n        let dropDown, arrow, height;\n        let hamburgerOrBack = this.props.enableBack ? <ArrowBack returnToPreviousPage={this.props.enableBack} /> : <Hamburger openSidebar={this.openSidebar} />;\n        if (!currentUser.image || currentUser.image == \"\")\n            currentUser.image = \"images/profile-icon.png\";\n        if (isMenuOpen) {\n            sidebarOpen = \"sidebar-open\";\n        }\n        else {\n            sidebarOpen = \"\";\n        }\n\n        if (isDropDown) {\n            arrow = \"sidebar-icons push-left revert\";\n            dropDown = \"show-dropdown\";\n            height = {\n                height: 'initial'\n            };\n        }\n        else {\n            arrow = \"sidebar-icons push-left\";\n            dropDown = \"hide-dropdown\";\n            height = {\n                height: '6vh'\n            };\n        }\n\n        if (redirectTo) {\n            return <Redirect to={redirectTo} />;\n        }\n\n        return (\n            <div>\n                <header>\n                    {hamburgerOrBack}\n                    <div className=\"header-title\">\n                        {header}\n                    </div>\n                </header>\n                <div className={sidebarOpen}>\n                    <div className=\"sidebar-background\" onClick={this.closeSidebar}></div>\n                    <div className=\"sidebar-wrap\">\n                        <div className=\"sidebar\">\n                            <div className=\"sidebar-header\">\n                                <img className=\"appleseeds-logo\" src=\"images/appleseeds-logo.png\"></img>\n                                <div className=\"x\" onClick={this.closeSidebar}>&times;</div>\n                            </div>\n                            <div className=\"profile-preview\">\n                                <img className=\"profile-image\" onClick={this.profileClick} src={currentUser.image}></img>\n                                <div className=\"name-wrap\">\n                                    <span className=\"user-name\">\n                                        {currentUser.firstname + ' ' + currentUser.lastname}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"sidebar-options\">\n                                <div className=\"menu-information dropdown\" onClick={this.openDropDown} style={height}>\n                                    <span className=\"sidebar-icons\">\n                                        <img src=\"images/users.png\"></img>\n                                    </span>\n                                    משתמשים\n                                    <span className={arrow} style={{ transition: \"all 0.5s\" }}>\n                                        <img src=\"images/arrow_down.png\"></img>\n                                    </span>\n                                    <div className={dropDown}>\n                                        <div className=\"menu-information\" onClick={this.goToStaffPage}>\n                                            עובדים\n                                        </div>\n                                        <div className=\"menu-information\" onClick={this.goToStudentsPage}>\n                                            חניכים\n                                        </div>\n                                        <div className=\"menu-information\" onClick={this.goToNewUsersPage}>\n                                            משתמשים חדשים\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"menu-information\" onClick={this.goToCoursesPage}>\n                                    <span className=\"sidebar-icons\">\n                                        <img src=\"images/courses.png\"></img>\n                                    </span>\n                                    קורסים\n                                </div>\n                                <div className=\"menu-information\" onClick={this.goToHoursReportPage}>\n                                    <span className=\"sidebar-icons\">\n                                        <img src=\"images/hours-report.png\"></img>\n                                    </span>\n                                    דיווח שעות\n                                </div>\n                                <div className=\"menu-information\" onClick={this.goToHoursApprovePage}>\n                                    <span className=\"sidebar-icons\">\n                                        <img src=\"images/hours-approval.png\"></img>\n                                    </span>\n                                    אישור שעות\n                                </div>\n                                <div className=\"menu-information disconnect\" onClick={this.logout}>\n                                    <span className=\"sidebar-icons\">\n                                        <img src=\"images/disconnect-icon.png\"></img>\n                                    </span>\n                                    התנתקות\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n\n});\n\nconst mapDispatchToProps = {\n    logoutAction\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PortalNavbar);","import React, { Component } from 'react';\nimport { } from 'react-bootstrap';\nimport '../pages/courses/courses.css';\nimport server from '../shared/server'\nimport './ButtonSet.css'\n\nclass ButtonSet extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedKey: props.buttons[0].key\n        }\n       \n    }\n    handleClick = (button) => {\n        this.props.makeChoice(button.key);\n        this.setState({selectedKey: button.key})\n    }\n\n\n\n    render() {\n\n\n        const buttonsDisplay = this.props.buttons.map((button, i) => \n            <button key = {i} className = {this.state.selectedKey == button.key ? \"selected\" : \"\"} type=\"button\" onClick = {() => this.handleClick(button)}>\n            {button.title}\n            </button>\n        )\n\n        return (\n            <div className=\"btn-set\">\n               \n                {buttonsDisplay}\n            </div>\n        )\n    }\n}\n\nexport default ButtonSet;\n","import React from 'react';\n// import { Form, Button, FormControl} from 'react-bootstrap';\nimport '../pages/courses/courses.css';\nimport './SearchBar.css'\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputvalue: '',\n            \n        }\n    }\n    handleChange = (e) => {\n        this.setState({ inputvalue: e.target.value })\n    }\n    increment = () => {\n        if (this.props.currentPage < this.props.pages) {\n           let newPage =  this.props.currentPage +1;\n            this.props.updatePage(newPage);\n    }\n}\n    decrement = () => {\n        if (this.props.currentPage > 1) {\n            let newPage =  this.props.currentPage -1;\n           this.props.updatePage(newPage);\n    }\n    }\n    render() {\n        const searchValue = this.state.inputvalue\n        return (\n            <div className=\"search-bar\">\n\n                <form onSubmit={() => { this.props.handleSearch(searchValue) }}>\n                    <input type=\"text\" placeholder={this.props.searchLabel} value={searchValue} onChange={this.handleChange} />\n                </form>\n                <div className={this.props.pages < 1 ? \"invis\" : \"\"}>\n                    <span className={this.props.currentPage == 1 ? \"disactive\" : \"active\"} onClick={this.decrement}>\n                        <img src=\"images/arrow_down.svg\" alt=\"\" />\n                    </span>\n                    <span className=\"page-num\">{this.props.currentPage}</span>\n                    <span className={this.props.currentPage == this.props.pages ? \"disactive\" : \"active\"} onClick={this.increment}>\n                        <img src=\"images/arrow_down_left.svg\" alt=\"\" />\n                    </span>\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default SearchBar;","import React, { Component } from 'react';\nimport './itemsTable.css'\n\n\nclass ItemsTable extends Component {\n    render() {\n        const { items, titles } = this.props;\n\n        const tableTitles = titles.map((title,index) =>\n            <th key={index}>{title}</th>\n        );\n\n        const tableData = [];\n             \n        for (let id in items) {\n            const tableRow = items[id].map((item, index)=>\n                <td key={index} className=\"itemsTable-data\">\n                    {item}\n                </td>\n            );\n            \n            tableData.push(\n            <tr key={id} className=\"itemsTable-row\" onClick = {() => {this.props.handleClick(id)}}>\n               {tableRow}\n            </tr>)\n        }\n\n        return (           \n                <table  className=\"itemsTable-table\">\n                    <thead className=\"itemsTable-title\">\n                        <tr>\n                            {tableTitles}\n                        </tr>\n                    </thead>\n                    <tbody >                     \n                            {tableData}                   \n                    </tbody>\n                </table>\n            \n        );\n    }\n}\n\nexport default ItemsTable;","import React, { Component } from 'react';\nimport './courses.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport ButtonSet from '../../components/ButtonSet';\nimport server from '../../shared/server';\nimport { Container } from 'react-bootstrap'\nimport SearchBar from '../../components/SearchBar'\nimport itemsTable from '../../components/itemsTable/itemsTable'\nimport ItemsTable from '../../components/itemsTable/itemsTable';\nimport { rejects } from 'assert';\n\nclass CoursesPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            \n            coursestatus: 1,\n            desc: false,\n            page: 1,\n            search: \"\",\n            sorting: \"courseid\",\n            courses: [],\n            showCourseDetails: null\n        }\n        this.titles = [\"שם קורס מקוצר\", \"פרויקט\", \"מדריך\"];\n\n    }\n    componentDidMount() {\n        const { coursestatus, desc, page, search, sorting, searchPages } = this.state;\n        const data = { coursestatus, desc, page : page - 1, search, sorting, searchPages };\n        server(data, \"SearchCourses\").then(res => {\n            if (res.data.error) {\n                console.error(res.data.error)\n            } else {\n                console.log(res.data);\n                this.setState({\n                    courses: res.data.courses,\n                    searchPages: res.data.pages\n                })\n            }\n        }, err => {\n            console.error(err)\n        }\n        )\n    }\n    componentDidUpdate(prevProp, prevState) {\n        if (prevState.coursestatus !== this.state.coursestatus  || prevState.page !== this.state.page || prevState.search !== this.state.search) {\n            const { coursestatus, desc, page, search, sorting, searchPages } = this.state;\n            const data = { coursestatus, desc, page : page - 1, search, sorting, searchPages };\n            server(data, \"SearchCourses\").then(res => {\n                if (res.data.error) {\n                    console.error(res.data.error)\n                } else {\n                    this.setState({\n                        courses: res.data.courses,\n                        searchPages: res.data.pages\n                    })\n                }\n            }, err => {\n                console.error(err)\n            }\n            )\n        }\n    }\n    getFilteredData = (key) => {\n        this.setState({ coursestatus: key })\n    }\n    handleSearch = (val) => {\n        this.setState({ search: val })\n    }\n    updatePage = (page) => {\n        this.setState({ page: page})\n    }\n    courseDetails = (id) => {\n        this.setState({ showCourseDetails: \"id\" })\n    }\n    render() {\n        const { courses, showCourseDetails } = this.state;\n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n        if (this.state.showCourseDetails !== null) {\n            return <Redirect to={'/courses/' + showCourseDetails} />\n        }\n\n        const courseDisplay = {};\n        for (let i = 0; i < courses.length; i++) {\n            courseDisplay[courses[i].courseid] = [];\n            courseDisplay[courses[i].courseid].push(courses[i].subname);\n            courseDisplay[courses[i].courseid].push(courses[i].project);\n            courseDisplay[courses[i].courseid].push(courses[i].teachers);\n        }\n\n        const buttonsData = [\n            { key: 1, title: \"קורסים פעילים\" },\n            { key: 0, title: \"לא פעילים\" }\n        ]\n        \n\n        return (\n            <div>\n                <PortalNavbar header=\"קורסים\" />\n                <SearchBar searchLabel=\"חיפוש קורס\" handleSearch={this.handleSearch} updatePage={this.updatePage} pages={this.state.searchPages} currentPage={this.state.page } />\n                <ItemsTable titles={this.titles} items={courseDisplay} handleClick={this.courseDetails} />\n                <div className=\"courses-activeFilter\">\n                    <ButtonSet makeChoice={this.getFilteredData} buttons={buttonsData} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(CoursesPage);","import React, { Component } from 'react';\nimport './inPageNavbar.css'\n\n\nclass InPageNavbar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedKey: props.tabs[0].key\n        }\n\n    }\n\n    handleClick = (tab) => {\n        // console.log(tab.key)\n        this.setState({ selectedKey: tab.key })\n    }\n\n    render() {\n\n        const tabsDisplay = this.props.tabs.map(tab =>\n            <a\n                className={\"nav-item nav-link\" + (this.state.selectedKey == tab.key ? \" active\" : \"\")}\n                id=\"nav-curses-tab\"\n                data-toggle=\"tab\"\n                // href=\"#\" \n                role=\"tab\"\n                onClick={() => this.handleClick(tab)}\n            >\n                {tab.title}\n            </a>\n        )\n\n        var curses\n\n        if (this.state.selectedKey == 1) {\n            curses = this.props.tabs[0].component\n\n        } else if (this.state.selectedKey == 2) {\n            curses = this.props.tabs[1].component\n\n        } else if (this.state.selectedKey == 3) {\n            curses = this.props.tabs[2].component\n\n        } else if (this.state.selectedKey == 4) {\n            curses = this.props.tabs[3].component\n\n        }\n\n        return (\n            <div>\n                <div class=\"nav nav-tabs nav-fill\" id=\"nav-tab\" role=\"tablist\">\n                    {tabsDisplay}\n\n                </div>\n                <div>\n                    {curses}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default InPageNavbar;","import React, { Component } from 'react';\nimport './courses.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport inPageNavbar from '../../components/inPageNavbar/inPageNavbar';\n\n\nclass CourseDetailsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchPages: 1,\n            coursestatus: 1,\n            desc: false,\n            page: 1,\n            search: \"\",\n            sorting: \"courseid\",\n            courses: [],\n            showCourseDetails: null\n        }\n    }\n    render() {\n\n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n\n        return (\n            <div>\n                <PortalNavbar header=\"קורסים\" />\n                <inPageNavbar />\n                <h1>פרטי קורס</h1>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(CourseDetailsPage);\n","import React, { Component } from 'react';\nimport './users.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport ItemsTable from '../../components/itemsTable/itemsTable';\nimport ButtonSet from '../../components/ButtonSet';\nimport server from '../../shared/server';\nimport SearchBar from '../../components/SearchBar';\n\nclass UsersPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            desc: false,\n            page: 1,\n            search: \"\",\n            sorting: \"userid\",\n            userstatus: 1,\n\n            users: [],\n            numberOfPages: 1,\n\n            showUserDetails: null\n        }\n\n        this.titles = [\"שם\", \"שם משפחה\", \"אימייל\"];\n\n        let pagePath = window.location.href.split(\"type=\");\n        let userType = pagePath[pagePath.length - 1];\n        if (userType == \"staff\") {\n           this.userRequest = \"SearchStaffUnderMe\";                         \n        } else if(userType == \"students\") {\n            this.userRequest = \"SearchStudentsUnderMe\";\n        } else if (userType == \"new\"){\n             this.userRequest = \"SearchNewUsers\";\n        };\n            \n    }\n\n   \n    componentDidMount() {\n        const { desc, page, search, sorting, userstatus } = this.state;\n        const data = { desc,  page : page - 1, search, sorting, userstatus };    \n            server(data, this.userRequest).then(res => {\n                if (res.data.error) {\n                    console.error(res.data.error);\n                } else {\n                    this.setState({\n                        users: res.data.users,\n                        numberOfPages: res.data.pages\n                    });\n                }\n            }, err => {\n                console.error(err);\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.userstatus !== prevState.userstatus || this.state.page !== prevState.page ||\n            this.state.search !== prevState.search || this.props.key !== prevProps.key) {\n            const { desc, page, search, sorting, userstatus } = this.state;\n            const data = { desc,  page : page - 1, search, sorting, userstatus };\n            server(data, this.userRequest).then(res => {\n                if (res.data.error) {\n                    console.error(res.data.error);\n                } else {\n                    this.setState({\n                        users: res.data.users,\n                        numberOfPages: res.data.pages\n                    });\n                }\n            }, err => {\n                console.error(err);\n            })\n        }\n    }\n\n    userIsActive = (key) => {\n        this.setState({ userstatus: key, page: 1 });\n    }\n\n    userDetails = (id) => {\n        this.setState({ showUserDetails: id });\n    }\n\n    userSearch = (val) => {\n        this.setState({ search: val, page: 1 });\n    }\n\n    userCurrentPage = (page) => {\n        this.setState({ page });\n    }\n\n    render() {\n        const { users, numberOfPages, page } = this.state;\n\n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n\n        if (this.state.showUserDetails != null) {\n            return <Redirect to={'/users/' + this.state.showUserDetails} />\n        }\n\n        const userDisplay = {}\n        for (var i = 0; i < users.length; i++) {\n            userDisplay[users[i].userid] = [];\n            userDisplay[users[i].userid].push(users[i].firstname);\n            userDisplay[users[i].userid].push(users[i].lastname);\n            userDisplay[users[i].userid].push(users[i].email);\n        }\n\n        const buttonsData = [\n            { key: 1, title: \"עובדים פעילים\" },\n            { key: 0, title: \"לא פעילים\" }\n        ]\n\n        return (\n            <div>\n                <PortalNavbar className=\"users-Navbar\" header=\"עובדים\" />\n                <SearchBar searchLabel=\"חיפוש עובד\" handleSearch={this.userSearch} updatePage={this.userCurrentPage}\n                    pages={numberOfPages} currentPage={page} />\n                <div className=\"users-table\">\n                    <ItemsTable items={userDisplay} titles={this.titles} handleClick={this.userDetails} />\n                </div>\n                <div className=\"users-activeFilter\">\n                    <ButtonSet makeChoice={this.userIsActive} buttons={buttonsData} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(UsersPage);\n","import React, { Component } from 'react';\nimport './detailsHeader.css'\n\n\nclass DetailsHeader extends Component {\n    constructor(props) {\n        super(props);\n        \n    }\n\n\n    render() {\n\n\n        return (\n            <div classname=\"header-Row\">\n                <div className=\"header-Col\">\n                    <p> {this.props.line1}</p>\n                    <p> {this.props.line2}</p>\n                    <p> {this.props.line3}</p>\n                    <p>{this.props.line4}</p>\n                </div>\n                <div className=\"header-Col\">\n                    <div classname=\"header-icons-Row\">\n                        <div className=\"header-icons-Col header-icons-actions\">\n                            <div className=\"header-iconGroup\">                               \n                                <img src=\"images\\CourseControls\\Save\\drawable-mdpi\\noun_save_2429243.png\" alt=\"save\" />\n                                <img src=\"images\\CourseControls\\Copy\\drawable-mdpi\\noun_copy_573715.png\" alt=\"copy\" />\n                                <img src=\"images\\CourseControls\\Back\\drawable-mdpi\\noun_back_arrow_2690272.png\" alt=\"back\" />\n                            </div>\n                        </div>\n                        <div className=\"header-icons-Col header-icons-profile\">\n                            <img src=\"images\\profile_icon.svg\" alt=\"profile\" />\n                            <img src=\"images\\compose.svg\" alt=\"compose\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default DetailsHeader;","import React, { Component } from 'react';\nimport './users.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport server from '../../shared/server';\nimport DetailsHeader from '../../components/detailsHeader/detailsHeader';\nimport InPageNavbar from '../../components/inPageNavbar/inPageNavbar';\n\n\nclass UserDetailsPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {},\n        };\n    }\n\n    componentDidMount() {\n        const pagePath = window.location.href.split(\"/\");\n        const userId = pagePath[pagePath.length - 1];\n\n        const data = { userId };\n\n        server(data, \"GetUserProfileById\").then(res => {\n            if (res.data.error) {\n                console.error(res.data.error);\n            } else {\n                let user = res.data.profile;\n                this.setState({ user: user });\n            }\n        }, err => {\n            console.error(err);\n        })\n    }\n\n\n\n    render() {\n\n        const { user } = this.state;\n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n        const tabsData = [\n            { key: 1, title: \"פרופיל\", component: <div></div> },\n            { key: 2, title: \"קורסים\", component: <div></div> },\n            { key: 3, title: \"עובדים\", component: <div></div> },\n            { key: 4, title: \"דיווח\", component: <div></div> }\n        ]\n        const optionsData = [\n            { key: 1, value: \"פרופיל\" },\n            { key: 2, value: \"קורסים\" },\n            { key: 3, value: \"עובדים\" },\n            { key: 4, value: \"דיווח\" }\n        ]\n\n        if (!this.state.user) {\n            return false;\n        } else {\n            return (\n                <div>\n                    <PortalNavbar className=\"users-Navbar\" header=\"עובדים\" />\n\n                    <div>\n                        <DetailsHeader line1={user.firstname} line2={user.lastname}\n                            line3=\"שינוי סיסמה\" line4={`נרשם ב: ${user.registerdate}`} />\n                    </div>\n\n                    <InPageNavbar tabs={tabsData} />\n\n                </div>\n\n\n            );\n        }\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(UserDetailsPage);\n","import React, { Component } from 'react';\nimport '../../pages/hours/hoursApprove.css'\n// import { connect } from \"react-redux\";\n\n\n\n\nexport default class SelectMonth extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            year:new Date().getFullYear(),\n            month:new Date().getMonth()+1\n        }\n    }\n    monthBack=()=>{\n        const {changeMonthYear}=this.props;\n        let {month,year}=this.state;\n        const curYear=new Date().getFullYear();\n        const curMonth=new Date().getMonth()+1;\n        if (month===1) \n                    {month=12;year--;}\n        else \n                    {month--}\n        if ((year===curYear&& month<=curMonth) || (year<curYear && month>curMonth)) \n                                {\n                                    this.setState({month,year});\n                                    changeMonthYear(month,year)\n                                }\n    }\n    monthForward=()=>{\n        const {changeMonthYear}=this.props;\n        let {month,year}=this.state;\n        const curYear=new Date().getFullYear();\n        const curMonth=new Date().getMonth()+1;\n        if (month===12) \n                    {month=1;year++;}\n        else \n                    {month++}\n        if ((year===curYear&& month<=curMonth) || (year<curYear && month>curMonth)) \n                    {\n                        this.setState({month,year});\n                        changeMonthYear(month,year)\n                    }\n    }\n    render() {\n        \n        const {month,year} = this.state;\n        const curYear=new Date().getFullYear();\n        const curMonth=new Date().getMonth()+1;\n        let backwardOpacity,forwardOpacity;\n        if ((year===curYear&& month<curMonth) || (year<curYear)) {forwardOpacity=1} else {forwardOpacity=0.3};\n        if ((year===curYear&& curMonth-month<11) || (year<curYear && month-curMonth>1))  {backwardOpacity=1} else {backwardOpacity=0.3};\n        let monthText = \"\";\n        switch (month) {\n            case 1: monthText = \"ינואר\"\n                // code block\n                break;\n            case 2: monthText = \"פברואר\"\n                // code block\n                break;\n            case 3: monthText = \"מרץ\"\n                // code block\n                break;\n            case 4: monthText = \"אפריל\"\n                // code block\n                break;\n            case 5: monthText = \"מאי\"\n                // code block\n                break;\n            case 6: monthText = \"יוני\"\n                // code block\n                break;\n            case 7: monthText = \"יולי\"\n                // code block\n                break;\n            case 8: monthText = \"אוגוסט\"\n                // code block\n                break;\n            case 9: monthText = \"ספטמבר\"\n                // code block\n                break;\n            case 10: monthText = \"אוקטובר\"\n                // code block\n                break;\n            case 11: monthText = \"נובמבר\"\n                // code block\n                break;\n            case 12: monthText = \"דצמבר\"\n            // code block\n        }\n        return (\n            <div className=\"chooseMonth\">\n                <img style={{opacity:backwardOpacity}} className=\"arrowleftright\" src=\"/images/ArrowRight/drawable-xxhdpi/arrow_down.png\" onClick={this.monthBack}/>\n                <span className=\"monthTag\">   {monthText}  </span>\n                <img style={{opacity:forwardOpacity}}  className=\"arrowleftright\" src=\"/images/ArrowLeft/drawable-xxhdpi/arrow_down.png\"  onClick={this.monthForward}/>\n            </div>\n        );\n    }\n}\n\n\n\n// const mapStateToProps = state => ({\n//     activeUser: state.activeUser\n// });\n\n\n// export default connect(\n//     mapStateToProps\n// )(HoursApprovePage);\n","import React, { Component } from 'react';\nimport './hours.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport { connect } from \"react-redux\";\nimport { Redirect,Link } from 'react-router-dom'\nimport { Container, Button , Table, Row, Col} from 'react-bootstrap';\nimport server from '../../shared/server'\nimport  SelectMonth from '../../components/hoursApprove/selectMonth'\n\nclass HoursReportPage extends Component {\n  \n    constructor(props) {\n        super(props);\n        this.state = {\n            GetReports: [],\n            GetCourses:[],\n            GetProjects:[],\n            totalHours: \"\",\n            year:new Date().getFullYear(),\n            month:new Date().getMonth()+1\n        }\n        this.getMonthYear = this.getMonthYear.bind(this);\n        }\n    \n    componentDidMount(){\n        let data = {};\n        server(data, \"GetProjects\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                alert(\"error in login\");\n            } else {\n                data = res.data;\n                this.setState({GetProjects:data})\n                this.getDataFromServer(this.state.month,this.state.year);\n                this.getCourses();\n            }\n        }, err => {\n            console.error(err);\n        }) \n      \n        \n        \n    }\n    getDataFromServer(month,year){\n        var data = {\n            month : month,\n            year : year\n        };\n        server(data, \"GetReports\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                alert(\"error in login\");\n            } else {\n                data = res.data;\n                this.setState({GetReports:data})\n                this.calculateTotalHours(data)\n            }\n        }, err => {\n            console.error(err);\n        })\n    }\n    getMonthYear(month,year){\n        this.setState({month:month,year:year}) // set state with data from component \n        this.getDataFromServer(month,year); //call to server when change the month \n        console.log(month,year)\n    }\n    \n    diff(start, end) {\n        start = start.split(\":\");\n        end = end.split(\":\");\n        var startDate = new Date(0, 0, 0, start[0], start[1], 0);\n        var endDate = new Date(0, 0, 0, end[0], end[1], 0);\n        var diff = endDate.getTime() - startDate.getTime();\n        var hours = Math.floor(diff / 1000 / 60 / 60);\n        diff -= hours * 1000 * 60 * 60;\n        var minutes = Math.floor(diff / 1000 / 60);\n    \n        // If using time pickers with 24 hours format, add the below line get exact hours\n        if (hours < 0)\n           hours = hours + 24;\n        //console.log((hours <= 9 ? \"0\" : \"\") + hours + \":\" + (minutes <= 9 ? \"0\" : \"\") + minutes)\n        return (hours <= 9 ? \"0\" : \"\") + hours + \":\" + (minutes <= 9 ? \"0\" : \"\") + minutes;\n    }\n    \n    getCourses(){\n        var data = {\n            coursestatus: 1,\n            desc: false,\n            page: 0,\n            search: \"\",\n            sorting: \"courseid\"\n        };\n        server(data, \"SearchCourses\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                alert(\"error in login\");\n            } else {\n                data = res.data.courses;\n                this.setState({GetCourses:data})\n            }\n        }, err => {\n            console.error(err);\n        }) \n    }\n    calculateTotalHours = (data) => {\n        //const{GetReports} = this.state\n        let GetReports = data\n        var totalMin = 0\n        for(let i=0;i<GetReports.length;i++){\n            let repstart = (+GetReports[i].starthour.split(\":\")[0]) * 60  + (+GetReports[i].starthour.split(\":\")[1])  ; \n            let repend = (+GetReports[i].finishhour.split(\":\")[0]) * 60  + (+GetReports[i].finishhour.split(\":\")[1])  ; \n            totalMin+=repend-repstart\n        }\n      \n       let minutes = totalMin%60\n       let hours = (totalMin-minutes)/60\n       let total \n       if (minutes == 0)\n           total = hours.toString() \n           else \n              total = hours.toString() + \":\" + minutes.toString()\n       this.setState({totalHours:total})\n       //return result \n    }\n    render() {\n\n         const { GetReports, totalHours, GetProjects, GetCourses } = this.state;\n\n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n       \n        console.log(GetCourses)  \n        console.log(GetReports)  \n\n        let rows =  GetReports.map((item) => {  // generate table with customers\n                let bgStyle; \n                switch (item.approval) {\n                     case \"-1\": \n                        bgStyle =  \" bg-red \"  \n                        break;\n                        case \"1\":    \n                        bgStyle = \" bg-green \" \n                        break;\n                     default:  \n                         bgStyle = \" bg-yellow \"   \n                 }\n                 let style = \"report-row py-2 \" + bgStyle\n                 let hoursDiff = this.diff(item.starthour,item.finishhour)\n                 let project = GetProjects.find((proj) => {if(proj.projectid===item.projectid) return proj})\n                //  let course ={}\n                //  if (item.courseid == null)\n                //      course.name = \"\"\n                //  else\n                //      course = GetCourses.find((crs)=>{if (crs.courseid == item.courseid) return crs})\n                // console.log(course)\n                 return  <Row className={style}>\n                      <Col className=\"px-1 text-center\">\n                       {item.date}\n                      </Col >\n                      <Col className=\"px-1 text-center\">\n                      {project.projectname}\n                      </Col>\n                      <Col className=\"px-1 text-center\">\n                      {/* {course.name} */}\n                      </Col>\n                      <Col className=\"px-1 text-center\">\n                      {hoursDiff}\n                      </Col>\n                     \n                   </Row>\n         }\n        )\n     \n        return (\n            <Container  >\n           \n           <Row className=\"sticky-top bg-white shadow\">\n             <Col>\n             \n              <PortalNavbar header=\"דיווח שעות\" />\n                 <SelectMonth changeMonthYear={this.getMonthYear}/>\n                 <Row>\n               <Col className=\" text-center hours-header-text pb-2\">\n                <span>סהייכ שעות:</span><span className=\"mr-3 \">{totalHours}</span>\n                </Col>\n              </Row>  \n             </Col>\n             \n           </Row>\n          \n              <Row className=\"report-row justify-content-md-center report-font-bold pt-2 pb-1\"> \n              <Col xs  className=\" px-1 text-center \" >\n                    <span>תאריך</span>\n                  </Col>\n                  <Col xs  className=\" px-1 text-center \">\n                    <span>פרויקט</span>\n                  </Col>\n                   <Col xs className=\" px-1 text-center \">\n                    <span>נושא פעילות</span>\n                  </Col>\n                  <Col xs  className=\" px-1 text-center \" >\n                    <span>סהייכ שעות</span>\n                  </Col>\n                </Row>\n              <Row >\n                  <Col>\n                  {rows}\n                  </Col>\n              </Row>\n              <Row className=\"  fixed-bottom bg-white align-items-center justify-content-md-center px-3\" >\n              <Col className=\" px-1 text-center \"> \n                  <img src=\"images\\CourseControls\\Save\\drawable-mdpi\\noun_save_2429243.png\" alt=\"save\"></img>\n                  </Col>\n                  <Col className=\" px-1 text-center \">\n                  <img src=\"images\\CourseControls\\Copy\\drawable-mdpi\\noun_copy_573715.png\" alt=\"copy\"></img>\n                  </Col>\n                 \n                  <Col className=\" plus text-center mx-auto \">\n                   {/* <div className=\"plus-cyrcle\"><span >+</span></div> */}\n                  <Link to=\"/add-hours-report\"><img src=\"images\\CourseControls\\Plus\\plus.png\" alt=\"copy\" ></img></Link>\n                  </Col>\n                  \n                  <Col className=\" px-1 text-center \">\n                  <img src=\"images\\CourseControls\\Delete\\drawable-mdpi\\noun_delete_1610851.png\" alt=\"delete\"></img>\n                  </Col>\n                  <Col className=\" px-1 text-center \">\n                   <img src=\"images\\CourseControls\\Back\\drawable-mdpi\\noun_back_arrow_2690272.png\" alt=\"back\"></img>\n                  </Col>\n              </Row>\n          </Container>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(HoursReportPage);\n","import React, { Component } from 'react';\nimport '../hours/hoursApprove.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom'\nimport SelectMonth from '../../components/hoursApprove/selectMonth'\nimport { Accordion, Card, Button, Row, Col, Spinner } from 'react-bootstrap'\nimport server from '../../shared/server'\nimport SearchBar from '../../components/SearchBar'\n\nfunction getDetails(field, reportersArray, index1, index2) {\n    switch (field) {\n        case \"projectName\":\n            {\n                if (!reportersArray[index1].reportingPerimeter[reportersArray[index1].reports[index2].projectid])\n                    return \"\";\n                return reportersArray[index1].reportingPerimeter[reportersArray[index1].reports[index2].projectid].projectName;\n            }\n        case \"courseName\":\n            {\n                if (!reportersArray[index1].reportingPerimeter[reportersArray[index1].reports[index2].projectid])\n                    return \"\";\n                let courses = reportersArray[index1].reportingPerimeter[reportersArray[index1].reports[index2].projectid].courses;\n                for (var i = 0; i < courses.length; i++) {\n                    if (courses[i].courseid === reportersArray[index1].reports[index2].courseid) return courses[i].courseName;\n                }\n                return \"\";\n            }\n        case \"actionName\":\n            {\n                if (!reportersArray[index1].reports[index2].actionid)\n                    return \"\";\n                let actions = reportersArray[index1].reportingPerimeter[reportersArray[index1].reports[index2].projectid].subjects;\n                for (var i = 0; i < actions.length; i++) {\n                    if (actions[i].reportsubjectid === reportersArray[index1].reports[index2].actionid) return actions[i].subject;\n                }\n                return \"\";\n            }\n            return \"\"\n    }\n}\n\nclass HoursApprovePage extends Component {\n\n    constructor(props){\n\n        super(props);\n        this.state = {\n            year: new Date().getFullYear(),\n            month: new Date().getMonth() + 1,\n            isLoading: true,\n            allReporters: [],\n            search: \"\",\n            pages: 0,\n            page: 0,\n            rowsPerPage: 10,\n            checked: [],\n            mark: \"סמן הכל\",\n            open: null\n        }\n\n    }\n    componentDidMount() {\n        // const year=new Date().getFullYear();\n        // const month=new Date().getMonth()+1;\n        // this.setState({month,year});\n        this.getReporters();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        // only update chart if the data has changed\n        if (prevState.month !== this.state.month) {\n            this.getReporters();\n        };\n    }\n    changeSearch = (value) => {\n        let { search } = this.state;\n        search = value;\n        this.setState({ search });\n    }\n    changePage = (value) => {\n        let { page } = this.state;\n        page = value - 1;\n        this.setState({ page });\n    }\n    toggleCheck = (reportId) => {\n        let { checked } = this.state;\n        if (checked.includes(reportId)) {\n            for (var i = 0; i < checked.length; i++) {\n                if (checked[i] === reportId) {\n                    checked.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        else {\n            checked.push(reportId);\n        }\n        console.log(\"checked\");\n        console.log(checked);\n        this.setState({ checked });\n    }\n    toggleChecked = (reports) => {\n        let { mark, checked } = this.state;\n        if (mark === \"סמן הכל\") {\n            mark = \"מחק הכל\";\n            checked = [];\n            for (var i = 0; i < reports.length; i++) {\n                checked.push(reports[i].reportid)\n            }\n        }\n        else {\n            mark = \"סמן הכל\";\n            checked = [];\n        }\n        this.setState({ mark, checked });\n    }\n    ChangeReport = (reportids, status) => {\n        console.log(reportids);\n\n        let { allReporters } = this.state;\n        var data = { 'reportids': reportids, 'status': status, 'checkdate2': true };\n        console.log(data);\n        //var data = {'reportids' : reportids, 'status' : reportStatus};\n        server(data, 'SetReportApproval').then(() => {\n            //    this.getReporters();\n            for (var i = 0; i < allReporters.length; i++) {\n                for (var j = 0; j < allReporters[i].reports.length; j++) {\n                    if (reportids.includes(allReporters[i].reports[j].reportid)) {\n                        allReporters[i].reports[j].approval = status;\n                    }\n                }\n            }\n\n            this.setState({ allReporters });\n        })\n    }\n\n    getReporters = () => {\n        let { isLoading, month, year, allReporters, search, pages, rowsPerPage } = this.state;\n        this.setState({ isLoading: true });\n        let usefulReporters = [];\n        var data = { month, year };\n        server(data, 'GetAllReporters').then((res) => {\n            let reporters = res.data\n            for (var i = 0; i < reporters.length; i++) {\n                if (reporters[i].reports.length > 0 || reporters[i].status == 1) {\n                    usefulReporters.push(reporters[i]);\n                }\n            }\n\n            usefulReporters.sort(function (a, b) {\n                var x = a.firstname;\n                var y = b.firstname;\n                if (x < y) { return -1; }\n                if (x > y) { return 1; }\n                return 0;\n            });\n\n            var searchedReporters = usefulReporters;\n\n            //filter by the search\n            var searchedReporters = usefulReporters.filter(function (el) {\n                return el.firstname.includes(search) || el.lastname.includes(search)\n            });\n\n\n            //calculate number of pages\n            pages = Math.ceil((searchedReporters.length) / rowsPerPage);\n            allReporters = usefulReporters;\n            // for (var i=0; i<rowsPerPage; i++)\n            // {\n            //     if(searchedReporters[i])\n            //     {\n            //         allReporters.push(searchedReporters[i]);\n            //     }\n            // }\n\n            for (var i = 0; i < allReporters.length; i++) {\n                for (var j = 0; j < allReporters[i].reports.length; j++) {\n                    var report = allReporters[i].reports[j];\n                    report.carkm = parseFloat(report.carkm);\n                    report.cost = parseFloat(report.cost);\n                    report.automatic = parseFloat(report.automatic);\n                    report.approval = parseFloat(report.approval);\n                    report.status2 = true;\n                    report.missingreportsubject = parseFloat(report.missingreportsubject);\n                    if (!report.checkdate) {\n                        report.checkdate = \"לא התרחש שינוי עדיין\";\n                        // console.log(report.checkdate);\n                    }\n\n                    if (report.copyreport) {\n                        report.copyreport.carkm = parseFloat(report.copyreport.carkm);\n                        report.copyreport.cost = parseFloat(report.copyreport.cost);\n                    }\n                    // $scope.calculateHours($scope.allReporters[i].reports[j]);\n\n                }\n                // $scope.calculateHoursSummary($scope.allReporters[i]);\n            }\n            isLoading = false;\n            this.setState({ isLoading, allReporters, pages })\n        });\n    }\n    addTime = (time2, time1) => {\n\n        var hours2 = time2.substring(0, 2);\n        var hours1 = time1.substring(0, 2);\n\n        var min2 = time2.substring(3, 5);\n        var min1 = time1.substring(3, 5);\n\n\n        var hours = parseInt(hours2) + parseInt(hours1);\n        var minutes = parseInt(min2) + parseInt(min1);\n\n        if (minutes >= 60) { minutes -= 60; hours++; }\n\n        if (hours.toString().length === 1) { hours = \"0\" + hours };\n        if (minutes.toString().length === 1) { minutes = \"0\" + minutes };\n\n        return ({ hours, minutes })\n    }\n    calculatTime = (time2, time1) => {\n        if (!time1 || !time2) return ({ hours: \"00\", minutes: \"00\" });\n        var hours2 = time2.substring(0, 2);\n        var hours1 = time1.substring(0, 2);\n\n        var min2 = time2.substring(3, 5);\n        var min1 = time1.substring(3, 5);\n\n\n        var hours = parseInt(hours2) - parseInt(hours1);\n        var minutes = parseInt(min2) - parseInt(min1);\n\n        if (minutes < 0) { minutes += 60; hours--; }\n\n        if (hours.toString().length === 1) { hours = \"0\" + hours };\n        if (minutes.toString().length === 1) { minutes = \"0\" + minutes };\n\n        return ({ hours, minutes })\n    }\n    changeMonthYear = (month, year) => {\n        // console.log('changing month:');\n        // console.log(month+\" \"+year);\n        const isLoading = true;\n        this.setState({ month, year, isLoading });\n\n\n    }\n    toggleImage = (index, reportsLength) => {\n\n        if (reportsLength) {\n            if (this.state.open === index) { this.setState({ open: null }) }\n            else { this.setState({ open: index }) };\n        }\n    }\n\n    render() {\n\n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n        //extracting from state\n        const { year, month, search, allReporters, pages, rowsPerPage, isLoading } = this.state;\n        var reporterReportsRows = [];\n        var searchedReporters = allReporters.filter(function (el) {\n            return el.firstname.includes(search) ||\n                el.lastname.includes(search) ||\n                (el.firstname + \" \" + el.lastname).includes(search) ||\n                (el.lastname + \" \" + el.firstname).includes(search)\n        });\n        var accordionRows = [];\n        let { page } = this.state;\n        let blockColor;\n        let checkAproved, checkDecline, checkWaiting;\n        let timeLeg = 0;\n        let approvedTime, declineTime, waitingTime, totalTime;\n        let myColapse1, myColapse2;\n\n        console.log(\"searchedreporters\");\n        console.log(searchedReporters);\n        console.log(\"pages\");\n        console.log(pages);\n        console.log(\"page\");\n        console.log(page);\n        console.log(\"search\");\n        console.log(search);\n        console.log(\"rowsperpage\");\n        console.log(rowsPerPage);\n\n        if (page === \"\") page = \"0\";\n\n\n        if (isLoading) {\n\n            accordionRows.push(\n                <div>\n                    <div className=\"spinner\">טוען נתונים, אנא המתן  <Spinner animation=\"border\" variant=\"primary\" /></div>;\n\n            </div>)\n        }\n        else {\n            for (var index = page * rowsPerPage; (index < searchedReporters.length && index < (parseInt(page) + 1) * rowsPerPage); index++) {\n                let srcLink;\n                var reports = searchedReporters[index].reports;\n                if (this.state.open === index) { srcLink = \"/images/ArrowUp/drawable-xxhdpi/arrow_down.png\" } else { srcLink = \"/images/ArrowDown/drawable-xxhdpi/arrow_down.png\" }\n                if (searchedReporters[index].reports.length) {\n                    myColapse2 =\n                    <Row>\n                        <Col xs=\"4\">\n                            <button onClick={this.toggleChecked.bind(this, reports)} className=\"roundButton whiteButton\" style={{ outline: \"none\" }}></button>\n\n                            <p className=\"buttonTag\">{this.state.mark}</p>\n                        </Col>\n                        <Col xs=\"4\">\n                            <button onClick={() => { this.ChangeReport(this.state.checked, 1) }} className=\"roundButton greenButton\" style={{ outline: \"none\" }}></button>\n\n                            <p className=\"buttonTag\">אישור מסומנים</p>\n                        </Col>\n                        <Col xs=\"4\">\n                            <button onClick={() => { this.ChangeReport(this.state.checked, -1) }} className=\"roundButton redButton\" style={{ outline: \"none\" }}></button>\n\n                            <p className=\"buttonTag\">דחיית מסומנים</p>\n                        </Col>\n                    </Row>;\n                    myColapse1 = <img onClick={this.toggleImage.bind(this, index, searchedReporters[index].reports.length)} className=\"arrowleftright\" src={srcLink} />\n                }\n                else { myColapse1 = <img style={{opacity:\"0.2\"}} onClick={this.toggleImage.bind(this, index, searchedReporters[index].reports.length)} className=\"arrowleftright\" src={srcLink} />;myColapse2=\"\" }\n                reporterReportsRows = [];\n                approvedTime = \"00:00\"; declineTime = \"00:00\"; waitingTime = \"00:00\"; totalTime = \"00:00\"\n                for (var secondIndex = 0; secondIndex < searchedReporters[index].reports.length; secondIndex++) {\n                    timeLeg = this.calculatTime(searchedReporters[index].reports[secondIndex].finishhour, searchedReporters[index].reports[secondIndex].starthour)\n                    var reportid = searchedReporters[index].reports[secondIndex].reportid;\n\n\n                    var isChecked = false;\n                    if (this.state.checked.includes(reportid)) { isChecked = true } else { isChecked = false };\n                    console.log(reportid);\n                    checkAproved = <input onChange={this.ChangeReport.bind(this, [reportid], 1)} className=\"Radio\" type=\"radio\" name={index + \" \" + secondIndex} value=\"aproved\" checked={searchedReporters[index].reports[secondIndex].approval===1}/>;\n                    checkDecline = <input onChange={this.ChangeReport.bind(this, [reportid], -1)} className=\"Radio\" type=\"radio\" name={index + \" \" + secondIndex} value=\"decline\" checked={searchedReporters[index].reports[secondIndex].approval===-1} />;\n                    checkWaiting = <input onChange={this.ChangeReport.bind(this, [reportid], 0)} className=\"Radio\" type=\"radio\" name={index + \" \" + secondIndex} value=\"wait\" checked={searchedReporters[index].reports[secondIndex].approval===0} />;\n                    switch (searchedReporters[index].reports[secondIndex].approval) {\n\n                        case -1: blockColor = \"#ffa1a1\";\n                            declineTime = this.addTime(declineTime, timeLeg.hours + \":\" + timeLeg.minutes);\n                            declineTime = declineTime.hours + \":\" + declineTime.minutes;\n                            totalTime = this.addTime(totalTime, timeLeg.hours + \":\" + timeLeg.minutes);\n                            totalTime = totalTime.hours + \":\" + totalTime.minutes;\n\n                            // Decline\n                            break;\n                        case 1: blockColor = \"#a1d47f\";\n                            approvedTime = this.addTime(approvedTime, timeLeg.hours + \":\" + timeLeg.minutes);\n                            approvedTime = approvedTime.hours + \":\" + approvedTime.minutes;\n                            totalTime = this.addTime(totalTime, timeLeg.hours + \":\" + timeLeg.minutes);\n                            totalTime = totalTime.hours + \":\" + totalTime.minutes;\n                              // aproved\n                            break;\n                        default: blockColor = \"#ffd300\";\n                            waitingTime = this.addTime(waitingTime, timeLeg.hours + \":\" + timeLeg.minutes);\n                            waitingTime = waitingTime.hours + \":\" + waitingTime.minutes;\n                            totalTime = this.addTime(totalTime, timeLeg.hours + \":\" + timeLeg.minutes);\n                            totalTime = totalTime.hours + \":\" + totalTime.minutes;\n                         // waiting\n                    }\n\n                    reporterReportsRows.push(\n                        <div key={searchedReporters[index].reports[secondIndex].reportid} className=\"hoursLeg\">\n                            <Row>\n                                <Col xs=\"6\"></Col>\n                                <Col xs=\"2\">\n                                    <p className=\"radioTag redTag\">דחה</p>\n                                    <div className=\"radiocontainer\">\n                                        {checkDecline}\n\n                                    </div>\n                                </Col>\n                                <Col xs=\"2\">\n                                    <p className=\"radioTag yellowTag\">ממתין</p>\n                                    <div className=\"radiocontainer\">\n                                        {checkWaiting}\n\n                                    </div>\n                                </Col>\n                                <Col xs=\"2\">\n                                    <p className=\"radioTag greenTag\">אשר</p>\n                                    <div className=\"radiocontainer\">\n                                        {checkAproved}\n                                    </div>\n                                </Col>\n                            </Row>\n                            <div className=\"hoursContainer\" style={{ backgroundColor: blockColor }}>\n                                <div className=\"threeDots\">\n                                    <div className=\"smallBlackRound\"></div>\n                                    <div className=\"smallBlackRound\"></div>\n                                    <div className=\"smallBlackRound\"></div>\n                                </div>\n                                <div className=\"hoursNavBar\">\n\n                                </div>\n                                <Row>\n                                    <Col xs=\"2\">\n                                        <input onChange={this.toggleCheck.bind(this, reportid)} className=\"chekBoxHours\" type=\"checkbox\" name=\"hoursCheck\" checked={isChecked} />\n                                    </Col>\n                                    <Col xs=\"4\">\n                                        <p className=\"textInHoursLegBold\"> תאריך: {searchedReporters[index].reports[secondIndex].date}</p>\n                                    </Col>\n                                    <Col xs=\"4\">\n                                        <p className=\"textInHoursLegBold\"> סה\"כ שעות: {timeLeg.hours + \":\" + timeLeg.minutes}</p>\n                                    </Col>\n                                    <Col xs=\"2\">\n\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs=\"4\">\n                                        <p className=\"textInHoursHead\"> פרויקט</p>\n                                        <p className=\"textInHours\">{getDetails(\"projectName\", searchedReporters, index, secondIndex)}</p>\n                                    </Col>\n                                    <Col xs=\"4\">\n                                        <p className=\"textInHoursHead\"> מס/שם קורס</p>\n                                        <p className=\"textInHours\">{getDetails(\"courseName\", searchedReporters, index, secondIndex)}</p>\n                                    </Col>\n                                    <Col xs=\"4\">\n                                        <p className=\"textInHoursHead\"> נושא פעילות</p>\n                                        <p className=\"textInHours\">{getDetails(\"actionName\", searchedReporters, index, secondIndex)}</p>\n                                    </Col>\n                                </Row>\n                                <Row>\n\n                                </Row>\n                            </div>\n                        </div>)\n                }\n\n                accordionRows.push(\n                    <Card key={index}>\n                        <Card.Header style={{border:\"none\"}}>\n                            <Row>\n                                <Col xs=\"4\">\n                                    <h5>{searchedReporters[index].lastname} {searchedReporters[index].firstname}</h5>\n                                </Col>\n                                <Col xs=\"6\">\n                                    <p><span style={{ color: \"#f5cc0c\", marginRight: \"2px\", fontSize: \"12px\" }}>{waitingTime}  </span><span style={{ color: \"#338d12\", marginRight: \"2px\", fontSize: \"12px\" }}>{approvedTime}  </span><span style={{ color: \"#ff0000\", marginRight: \"2px\", fontSize: \"12px\" }}>{declineTime}  </span><span style={{ color: \"#5d5d5d\", marginRight: \"7px\", fontSize: \"14px\", fontWeight: \"bold\" }}>{totalTime}</span></p>\n                                </Col>\n                                <Col xs=\"2\">\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey={index}>\n                                    {myColapse1}\n                                    </Accordion.Toggle>\n                                </Col>\n                            </Row>\n\n                        </Card.Header>\n                        <Accordion.Collapse eventKey={index}>\n                            <Card.Body>\n                                {myColapse2}\n                                {reporterReportsRows}\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>)\n            }\n        }\n\n        return (\n            <div>\n                {/* enableBack */}\n                <PortalNavbar header=\"אישור שעות\" />\n                <SelectMonth changeMonthYear={this.changeMonthYear} />\n                <SearchBar handleSearch={this.changeSearch} updateSearch={this.changePage} currentPage={this.state.page+1} pages={this.state.pages} searchLabel=\"חיפוש עובד\" />\n                <Accordion>\n                    {accordionRows}\n                </Accordion>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(HoursApprovePage);\n","import React, { Component} from 'react';\nimport { Container, Row, Col} from 'react-bootstrap';\nimport '../../pages/hours/hoursApprove.css'\n// import { connect } from \"react-redux\";\n\n\n\n\nexport default class SelectDate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            year: new Date().getFullYear(),\n            month: new Date().getMonth()+1,\n            date: new Date().getDate(),\n            newDate: new Date(),\n            totalHours: 0, \n\n        }\n        \n    }\n        componentDidMount(){\n            let newDate = new Date();\n            //  newDate = newDate.getDate() + \"/\" + (newDate.getMonth()+1) + \"/\" + newDate.getFullYear()\n            this.setState({newDate});\n        }\n        \n \n     \n    plusDate=()=>{\n       const{newDate, year, month } = this.state;\n       const{changeDate} = this.props;\n       // let newDate = new Date();\n       let numberOfDaysToAdd = 1; // const of shiping dates from suppliers\n       newDate.setDate(newDate.getDate() + numberOfDaysToAdd); \n       //let showDate = newDate.getFullYear() + \"-\" + (newDate.getMonth()+1) + \"-\" + newDate.getDate()\n       this.setState({newDate});\n       changeDate(month, year,  newDate)\n       return newDate;\n    }\n  \n    minusDate=()=>{\n        const{newDate, year, month } = this.state;\n        const{changeDate} = this.props;\n       //let newDate = new Date();\n        let numberOfDaysToAdd = -1; // const of shiping dates from suppliers\n        newDate.setDate(newDate.getDate() + numberOfDaysToAdd); \n       // newDate = newDate.getFullYear() + \"-\" + (newDate.getMonth()+1) + \"-\" + newDate.getDate()\n        this.setState({newDate});\n        changeDate(month, year,  newDate)\n        return newDate;\n     }\n  \n    render() {\n        \n        const {newDate} = this.state;\n        let {status, totalHours} = this.props;\n        let date = newDate.getDate()\n        if(newDate.getDate()>0 && newDate.getDate()<10)\n            date = \"0\"+ newDate.getDate()\n        let month = (newDate.getMonth()+1)\n        if((newDate.getMonth()+1)>0 && (newDate.getMonth()+1)<10)\n            month = \"0\"+ (newDate.getMonth()+1)\n        let year = newDate.getFullYear() % 100;  \n        let currentDay = new Date();\n        let currentYear = currentDay.getFullYear() % 100;  \n        let currentMonth = (currentDay.getMonth()+1)\n        let currentDate = currentDay.getDate()\n        let hour = newDate.getHours();\n        let minute =  newDate.getMinutes();\n        \n        let bgColor;\n        switch (status) {\n             case \"-1\": \n               bgColor =  \" bg-red \"  \n               status = \"נדחה\"\n               break;\n             case \"1\":    \n               bgColor = \" bg-green \" \n               status = \"אושר\"\n               break;\n             default:  \n               bgColor = \" bg-yellow \"   \n               status = \"ממתין\"\n        }\n        let style = \"px-0 showDateHeader \" + bgColor\n        return (\n            <Container className={style}>\n            <Row>\n                <Col>\n                <div className=\" mt-3 text-center\">\n                   <img className=\"mb-2\" src=\"/images/ArrowRight/drawable-mdpi/arrow_down.png\" alt=\"\" onClick={this.minusDate }/>\n                   <span className=\"report-showDate font-weight-bold\">   {date + \"/\" + month + \"/\" + year }  </span>\n                <img className=\"mb-2\" src=\"/images/ArrowLeft/drawable-mdpi/arrow_down.png\"  alt=\"\" onClick={this.plusDate}/>\n                </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col className=\" text-center hours-header-text \">\n                <span>סהייכ שעות:</span><span className=\"mr-3\">{totalHours}</span>\n                </Col>\n            </Row>\n            <Row className=\" hours-header-small-text  text-center \">\n                <Col >\n               <span className=\"mr-1\"> זמן שינוי סטטוס:</span><span className=\"mr-2\">{hour + \":\" + minute  + \" | \" + currentDate + \".\" + currentMonth + \".\" + currentYear  }</span>\n                </Col>\n                <Col >\n                <span className=\"mr-5\">  סטטוס: </span><span className=\"mr-3\">{status}</span>\n                </Col>\n            </Row>\n            \n            </Container>\n        );\n    }\n}\n\n\n\n// const mapStateToProps = state => ({\n//     activeUser: state.activeUser\n// });\n\n\n// export default connect(\n//     mapStateToProps\n// )(HoursApprovePage);\n","import React, { Component } from 'react';\nimport './hours.css'\nimport PortalNavbar from '../../components/navbar/PortalNavbar';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom'\nimport { Container, Button , DropdownButton, Dropdown, Row, Col} from 'react-bootstrap';\nimport server from '../../shared/server';\nimport SelectDate from '../../components/hoursApprove/selectDate.js'\n\nclass InsertHoursReport extends Component {\n  \n    constructor(props) {\n        super(props);\n        this.state = {\n            GetReports: [],\n            GetCourses:[],\n            GetProjects:[],\n            projectsList:[],\n            subjectsList:[],\n            projectsArrayData: [],\n            coursesOfProject: [],\n            subjectsOfProject: [],\n            timesArray: [],\n\n            selectedProject: \"פרויקט\",\n            selectedCourse: \"מס/שם קורס\",\n            selectedSubject: \"נושא פעילות\",\n            selectedStartHour: \"שעת התחלה\",\n            selectedEndHour: \"שעת סיום\",\n          \n            visibleProjectList: false,\n            visibleCoursesList: false,\n            visibleSubjectsList:false,\n            visibleStartHourList: false,\n            visibleEndHourList: false,\n            visibleKmInput: false,\n            visibleNisInput: false,\n            visibleRemark: false,\n            isSavedReport:false,\n\n            errorProject:false,\n            errorSubject:false,\n            errorCourse:false, \n            errorStartHour:false,\n            errorEndHour:false,\n            errorKm:false ,\n            errorNis:false,\n            visibleErrorHoursRemark: false,\n\n            insertedKm: ' רכב פרטי (ק\"מ) ',\n            insertedNis:'  תחבורה ציבורית (ש\"ח) ',\n            insertedRemark: ' הערות ',\n            openProjectsListStyle: \"\",\n            year:new Date().getFullYear(),\n            month:new Date().getMonth()+1,\n            date: new Date().getDate(),\n            day: new Date(),\n            status: \"0\", // waiting by default 0 - new report (for change 1 - success, -1 - decline)\n            totalHours: 0  // total hours for report - for new report defaut is 0\n        }\n        this.projectsStyle = React.createRef();\n        \n        this.getDate = this.getDate.bind(this);\n        this.openProjectsList = this.openProjectsList.bind(this);\n        \n        }\n    \n    componentDidMount(){\n        let data = {};\n        server(data, \"GetMyReportingPerimeter\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                alert(\"error to read data from server\");\n            } else {\n                data = res.data;\n                let projectsArrayData = Object.values(data)\n                console.log(projectsArrayData)\n                let timesArray = this.getTimes();\n                this.setState({projectsArrayData:projectsArrayData, timesArray: timesArray})\n            }\n        }, err => {\n            console.error(err);\n        }) \n       \n       this.getDataFromServer(this.state.month,this.state.year);\n      \n     }\n    getDataFromServer(month,year){\n        var data = {\n            month : month,\n            year : year\n        };\n        server(data, \"GetReports\").then(res => {\n            console.log(res);\n            if (res.data.error) {\n                alert(\"error to read data from server\");\n            } else {\n                data = res.data;\n                this.setState({GetReports:data})\n            }\n        }, err => {\n            console.error(err);\n        })\n       \n    }\n    getDate(month,year,day){   // get values from selectDate component . month and year for server call, date for new report \n        this.setState({month:month,year:year,day:day})\n        this.getDataFromServer(day.getMonth()+1,day.getFullYear()); // if change month - get data from selected month \n        //console.log(month,year,day)\n        //console.log(day.getMonth(),day.getFullYear())\n    }\n    \n    diff(start, end) {\n        start = start.split(\":\");\n        end = end.split(\":\");\n        var startDate = new Date(0, 0, 0, start[0], start[1], 0);\n        var endDate = new Date(0, 0, 0, end[0], end[1], 0);\n        var diff = endDate.getTime() - startDate.getTime();\n        var hours = Math.floor(diff / 1000 / 60 / 60);\n        diff -= hours * 1000 * 60 * 60;\n        var minutes = Math.floor(diff / 1000 / 60);\n    \n        // If using time pickers with 24 hours format, add the below line get exact hours\n        if (hours < 0)\n           hours = hours + 24;\n        //console.log((hours <= 9 ? \"0\" : \"\") + hours + \":\" + (minutes <= 9 ? \"0\" : \"\") + minutes)\n        return (hours <= 9 ? \"0\" : \"\") + hours + \":\" + (minutes <= 9 ? \"0\" : \"\") + minutes;\n    }\n      \n    openProjectsList =  (e) => {\n        const{visibleProjectList} = this.state;\n        console.log(\"openProjectsList\")\n       // console.log(e.currentTarget)\n      \n        this.setState({\n            selectedCourse: \"מס/שם קורס\",\n            selectedSubject: \"נושא פעילות\",\n           // selectedStartHour: \"שעת התחלה\",\n          //  selectedEndHour: \"שעת סיום\",\n          visibleCoursesList: false,\n          visibleSubjectsList:false,\n          visibleStartHour: false,\n          visibleStartHourList: false,\n          visibleEndHourList: false,\n          visibleNisInput: false,\n          visibleRemark: false,})\n        if(visibleProjectList)\n           this.setState({visibleProjectList:false})\n           else \n           this.setState({visibleProjectList:true})\n              \n    }\n\n    openCoursesList =  (e) => {\n        const{visibleCoursesList} = this.state;\n        console.log(\"openCoursesList\")\n        this.setState({\n            selectedSubject: \"נושא פעילות\",\n           // selectedStartHour: \"שעת התחלה\",\n          //  selectedEndHour: \"שעת סיום\",\n          visibleProjectList: false,\n          visibleSubjectsList:false,\n          visibleStartHourList: false,\n          visibleEndHourList: false,\n          visibleKmInput: false,\n          visibleNisInput: false,\n          visibleRemark: false,})\n        if(visibleCoursesList)\n        this.setState({visibleCoursesList:false})\n        else \n        this.setState({visibleCoursesList:true})\n    }\n\n\n    openSubjectsList =  (e) => {\n        const{visibleSubjectsList} = this.state;\n        console.log(\"openSubjectsList\")\n        this.setState({\n           // selectedStartHour: \"שעת התחלה\",\n          //  selectedEndHour: \"שעת סיום\",\n          visibleProjectList: false,\n          visibleCoursesList: false,\n          visibleStartHourList: false,\n          visibleEndHourList: false,\n          visibleKmInput: false,\n          visibleNisInput: false,\n          visibleRemark: false,})\n        if(visibleSubjectsList)\n           this.setState({visibleSubjectsList:false})\n        else \n           this.setState({visibleSubjectsList:true})\n      \n     }\n\n    getTimes(){\n       var startTime = new Date();\n       startTime.setUTCHours(-2);\n       startTime.setUTCMinutes(0);\n       startTime.setTime(startTime.getTime());\n       let showStartTime = startTime.getHours() + \":\" + startTime.getMinutes()\n       let timesArray = []\n      \n       let hour, minute;\n       for(let i=0;i<96;i++){\n         hour = startTime.getHours()\n         if(hour<10)\n            hour = \"0\" + startTime.getHours()\n         minute = startTime.getMinutes()\n         if (minute<10)\n              minute = \"0\" + startTime.getMinutes()\n         showStartTime = hour + \":\" + minute\n         timesArray.push(showStartTime)\n         startTime.setTime(startTime.getTime()+ (15 * 60 * 1000))  \n       } \n       return timesArray;\n    }\n\n    openStartHour =(e)=>{\n       const{visibleStartHourList} = this.state\n    \n       console.log(\"openStartHour\")\n       this.setState({ \n            selectedEndHour: \"שעת סיום\",\n            visibleProjectList: false,\n            visibleCoursesList: false,\n            visibleSubjectsList:false,\n            visibleEndHourList: false,\n            visibleKmInput: false,\n            visibleNisInput: false,\n            visibleRemark: false,})\n       if(visibleStartHourList)\n           this.setState({visibleStartHourList:false})\n        else \n           this.setState({visibleStartHourList:true})\n       }\n\n    openEndHour =(e)=>{\n       const{visibleEndHourList} = this.state \n       console.log(\"openEndHour\")\n       this.setState({ \n                visibleProjectList: false,\n                visibleCoursesList: false,\n                visibleSubjectsList:false,\n                visibleStartHourList: false,\n                visibleKmInput: false,\n                visibleNisInput: false,\n                visibleRemark: false,})\n      if(visibleEndHourList)\n       this.setState({visibleEndHourList:false})\n      else \n       this.setState({visibleEndHourList:true})\n     \n    }\n\n   \n    changeView = (e) =>{\n        this.setState({visibleKmInput:false, visibleRemarkInput:false,visibleNisInput:false })\n    }\n\n   viewInput = (e) => {\n    //    console.log(e.currentTarget.id)\n        switch (e.currentTarget.id) {\n            case \"km\": \n                 this.setState({visibleKmInput:true, visibleRemarkInput:false,visibleNisInput:false })\n                 break;\n            case \"nis\" :\n                this.setState({visibleNisInput:true, visibleKmInput:false , visibleRemarkInput:false})\n                break;\n            case \"remark\" :\n                this.setState({visibleRemarkInput:true, visibleKmInput:false , visibleNisInput:false})\n                 break;  \n            default:        \n        } \n     }\n    \n   insertDataToInput = (e) => {\n    //    console.log(e.target.id)\n    //    console.log(e.target.value)\n        switch (e.target.id) {\n            case \"kmInput\": \n                 this.setState({insertedKm:e.target.value, errorKm:false})\n                 break;\n            case \"nisInput\" :\n                this.setState({insertedNis:e.target.value, errorNis:false})\n                break;\n            case \"remarkInput\" :\n                this.setState({insertedRemark:e.target.value })\n                break;  \n            default:        \n        }\n    }\n\n   saveDataToServer = (e) =>{\n    //************************************************ */\n    const{GetReports, projectsArrayData, selectedProject, selectedSubject,selectedCourse, \n          selectedStartHour, selectedEndHour,totalHours, insertedKm, insertedNis, insertedRemark,\n          errorProject, errorSubject,errorCourse, errorStartHour, errorEndHour, errorKm , errorNis,\n          day}  = this.state;\n    let dataToSend = {}\n    if(selectedProject == \"פרויקט\") {  //check if project selected\n        this.setState({errorProject: true})\n        return\n        }\n    else {\n        let project = projectsArrayData.find((proj)=>{if(proj.projectName===selectedProject) return proj} )   \n        dataToSend.projectid = project.projectid  // insert project id \n        dataToSend.isSetProject = true\n        if(selectedCourse == \"מס/שם קורס\")  // check if course selected \n              this.setState({errorCourse: true})\n                else {\n                       if (selectedCourse == \"כללי\"){\n                          dataToSend.coursename = null\n                          dataToSend.courseid = null\n                         } \n                        else{\n                            dataToSend.coursename = selectedCourse \n                            let course = project.courses.find((crs)=>{if(crs.courseName===selectedCourse) return crs})\n                            dataToSend.courseid = course.courseid\n                       }\n                       //   coursename: \"כללי\"\n                      }      \n        if(selectedSubject == \"נושא פעילות\")   // check if subject selected - insert as action to data base\n            this.setState({errorSubject: true})\n        else{\n            let actionid = project.subjects.find((act)=>{if(act.subject===selectedSubject) return act})\n            // console.log(actionid)\n              dataToSend.actionid = actionid.reportsubjectid\n              dataToSend.isSetSubject = true\n            // actionid: \"52\"\n        }\n \n    }\n  \n    // projectid: \"7\"\n    dataToSend.automatic = 0\n   //     automatic: 0\n    let currentDate = day.getDate() + \"/\" + (day.getMonth()+1) + \"/\" + day.getFullYear()\n    dataToSend.date = currentDate\n     // date: \"15/11/2019\"\n    \n    if(selectedStartHour == \"שעת התחלה\") { // check if start hour selected \n        this.setState({errorStartHour: true})\n            return\n        }\n    else{\n        dataToSend.starthour = selectedStartHour\n        dataToSend.starthourvalid = true\n        // starthour: \"19:00\"\n        if( selectedEndHour == \"שעת סיום\") { // check if end  hour selected \n            this.setState({errorEndHour: true})\n            return\n        }\n         else{ \n            dataToSend.finishhour = selectedEndHour\n            // finishhour: \"20:00\"\n            dataToSend.finishhourvalid = true\n            dataToSend.hoursvalid = true\n            dataToSend.hours = totalHours\n         }\n         }\n    \n  \n    if( insertedKm!== ' רכב פרטי (ק\"מ) '){\n        if (isNaN(insertedKm))\n            this.setState({errorKm:true})\n        else\n            dataToSend.carkm = insertedKm}\n    if (insertedNis!=='  תחבורה ציבורית (ש\"ח) '){\n         if (isNaN(insertedNis))\n             this.setState({errorNis:true})\n         else\n              dataToSend.cost = insertedNis }\n    if(insertedRemark!== ' הערות ')\n          dataToSend.comment=insertedRemark\n    \n    if(errorProject|| errorSubject ||errorCourse|| errorStartHour || errorEndHour || errorKm || errorNis)\n          return \n    console.log(GetReports)  \n    // noInterstion: true -- check \n    let project = GetReports.find((proj)=>{if(proj.date==dataToSend.date)return proj}) // search for exists report in previus reports\n    if(project !== undefined) {   // if we find the same project\n       let projstart = (+project.starthour.split(\":\")[0]) * 60 * 60 + (+project.starthour.split(\":\")[1]) * 60 ; //get tine in seconds \n       let projend =  (+project.finishhour.split(\":\")[0]) * 60 * 60 + (+project.finishhour.split(\":\")[1]) * 60 ; \n       let repstart = (+dataToSend.starthour.split(\":\")[0]) * 60 * 60 + (+dataToSend.starthour.split(\":\")[1]) * 60 ; \n       let repend = (+dataToSend.finishhour.split(\":\")[0]) * 60 * 60 + (+dataToSend.finishhour.split(\":\")[1]) * 60 ;\n       if(! ((repstart<projstart&&repend<projstart)||(repstart>projend&&repend>projend)) ){\n         this.setState({visibleErrorHoursRemark:true})\n         return\n       }\n       else\n         this.setState({visibleErrorHoursRemark:false})\n    }\n   \n    dataToSend.reportid= \"-1\"\n    dataToSend.status= \"\"\n    dataToSend.copyreport = {   actionid: dataToSend.actionid,\n                                date: dataToSend.date,\n                                finishhour: dataToSend.finishhour,\n                                hours: dataToSend.hours,\n                                projectid: dataToSend.projectid,\n                                starthour: dataToSend.starthour}\n   console.log(dataToSend)\n        //*********************************************** */\n    var data = {};\n    var reports = GetReports\n    reports = reports.concat(dataToSend)\n    data.reports = reports\n   // data.token = this.props.activeUser.token\n   // data.v = 2.3\n    console.log(data)\n    // data.reports=$scope.reports;\n    // // console.log(\"hour reports:\");\n    // // console.log(data.reports);\n    // server.requestPhp(data, 'SaveReports').then(function (data) {\n    //     alert(\"saved\");\n    //     this.setState({isSavedReport:true})\n    // });\n   \n   // data.reports\n    server(data, \"SaveReports\").then(res => {\n        console.log(res);\n        if (res.data.error) {\n            alert(\"error to add data to server\");\n        } \n        else {\n            data = res.data;\n            this.setState({GetReports:data.reports})\n            this.setState({isSavedReport:true})\n        }\n    }, err => {\n        console.error(err);\n    })\n\n   }\n\n    handleProjectClick =(e) =>{\n        const{projectsArrayData}=this.state\n        let project = e.target.innerHTML\n        let proj =  projectsArrayData.find((proj)=>{if(proj.projectName==project)return proj})\n        let courses =[]\n        let subjects = proj.subjects\n        if (proj.courses.length===0){\n           courses[0]={}\n           courses[0].courseName = 'כללי'\n          \n        }\n       else\n           courses = proj.courses\n       console.log(courses)\n       this.setState({selectedProject:e.target.innerHTML,coursesOfProject:courses, subjectsOfProject:subjects, errorProject:false})\n\n    }\n    handleCourseClick =(e)=>{\n        this.setState({selectedCourse:e.target.innerHTML,errorCourse:false})\n    }\n    handleSubjectClick =(e) =>{\n         this.setState({selectedSubject:e.target.innerHTML, errorSubject:false})\n    }\n   \n    handleStartHourClick =(e) =>{\n        const{timesArray} = this.state\n        let hour = e.target.innerHTML\n        let endTimesArray = []\n            for(let i=timesArray.indexOf(hour)+1;i<timesArray.length;i++){\n                 endTimesArray.push(timesArray[i])   \n                }\n        this.setState({selectedStartHour:e.target.innerHTML, timesArray:endTimesArray, errorStartHour:false})\n    }\n    handleEndHourClick =(e) =>{\n        const{selectedStartHour} = this.state\n        let diff = this.diff(selectedStartHour, e.target.innerHTML)\n        this.setState({totalHours:diff, selectedEndHour:e.target.innerHTML, errorEndHour:false})\n    }\n\n    render() {\n\n        const {projectsArrayData,coursesOfProject, subjectsOfProject, visibleStartHourList, visibleEndHourList, \n            visibleKmInput,visibleNisInput,visibleRemarkInput, visibleProjectList, visibleCoursesList, \n            visibleSubjectsList, timesArray, selectedStartHour, selectedEndHour, status , isSavedReport, \n            totalHours, selectedSubject, selectedProject, selectedCourse, visibleErrorHoursRemark,\n            errorProject, errorSubject, errorCourse, errorStartHour, errorEndHour, errorKm , errorNis } = this.state;\n       \n            console.log(this.props.activeUser)\n        if (!this.props.activeUser) {\n            return <Redirect to='/' />\n        }\n        if (isSavedReport) {\n            return <Redirect to='/hours-report' />\n        }\n        let styleMenuField = \"report-menu-field \"\n        let style = \"report-dropdown \"\n        let  projectsList = <div className={(visibleProjectList)? style + \"d-inline\": style + \"d-none\"} >\n                       { projectsArrayData.map((proj)=>\n                         <div className=\"report-dropdown-content\" onClick= {this.handleProjectClick}>\n                              {proj.projectName}\n                         </div>\n                             )}\n                      </div>\n        let coursesList=[]\n        if(selectedProject === \"פרויקט\")\n            coursesList = []\n        else{\n           \n                \n            coursesList = <div className={(visibleCoursesList)? style + \"d-inline\": style + \"d-none\"} >\n                             {coursesOfProject.map((crc)=>\n                               <div className=\"report-dropdown-content\" onClick={this.handleCourseClick}>\n                                  {crc.courseName}\n                                   {/* - {crc.courseid} */}\n                               </div>\n                               )}\n                          </div>\n           }\n        let subjectsList = []\n        if(selectedProject === \"פרויקט\" || selectedCourse === \"מס/שם קורס\")\n            subjectsList = []\n        else{     \n            subjectsList = <div className={(visibleSubjectsList)? style + \"d-inline\": style + \"d-none\"} >\n                                {subjectsOfProject.map((sbj)=>\n                             <div className=\"report-dropdown-content\" onClick={this.handleSubjectClick}>\n                                  {sbj.subject} \n                             </div>\n                                 )}\n                          </div>\n           }   \n      \n       let startHoursList = <div className={(visibleStartHourList)? style + \"show-times d-inline\": style + \"show-times d-none\"} >\n                     {timesArray.map((time)=>\n                       <div className=\"report-dropdown-content\" onClick={this.handleStartHourClick}>\n                       {time} \n                       </div>\n                     )}\n                  </div>\n      let endHoursList =[]\n      if( selectedStartHour === \"שעת התחלה\")\n         endHoursList =[]\n      else{\n           endHoursList = <div className={(visibleEndHourList)? style + \"show-times d-inline\": style + \"show-times d-none\"} >\n                   {timesArray.map((time)=>\n                     <div className=\"report-dropdown-content\" onClick={this.handleEndHourClick}>\n                     {time} \n                    </div>\n                   )}\n         </div>\n       }\n\n    return (\n        <div className=\" report-font-size \" >\n       <Container className=\"insert-container report-font-size \" >     \n           \n           <Row className=\"sticky-top bg-white\">\n             <Col>\n             \n              <PortalNavbar header=\"דיווח שעות\"/>\n{/* getDate(month,year,date) date - full date , status -1 - denied, 0 - await, 1 - success, totalHours - total hours of current report  */}\n              <SelectDate changeDate={this.getDate} status={status} totalHours={totalHours}/> \n             \n             </Col>\n           </Row>\n          \n              <Row>\n                  <Col>\n                  <div className= {(errorProject)? styleMenuField + \" bg-danger \": styleMenuField + \" \"} id=\"projectsList\"  onClick = {this.openProjectsList}>\n                 \n                  <div className=\"report-menu-text\">  <span className=\"pr-3\">{selectedProject}</span> <img src=\"images\\ArrowDown\\drawable-mdpi\\arrow_down.png\" alt=\"\"></img></div>\n                       {projectsList}\n                      \n                  </div>\n {/* <div className=\"report-menu-text\">  <span className=\"pr-3\">{selectedProject}</span> <img src=\"images\\ArrowDown\\drawable-mdpi\\arrow_down.png\" alt=\"\"></img></div>\n                       {result}\n                  </div> */}\n\n                                 \n                  <div className={(errorCourse)? styleMenuField + \" bg-danger \": styleMenuField + \" \"} id=\"coursesList\"  onClick={this.openCoursesList}>\n                        <div className=\"report-menu-text\" >  <span className=\"pr-3\">{selectedCourse} </span> <img src=\"images\\ArrowDown\\drawable-mdpi\\arrow_down.png\" alt=\"\"></img></div>\n                        {coursesList}\n                  </div>\n            \n            \n                  <div className={(errorSubject)? styleMenuField + \" bg-danger \": styleMenuField + \" \"} id=\"subjectsList\"  onClick={this.openSubjectsList}>\n                        <div className=\"report-menu-text\">  <span className=\"pr-3\">  {selectedSubject}   </span> <img src=\"images\\ArrowDown\\drawable-mdpi\\arrow_down.png\" alt=\"\"></img></div>\n                        {subjectsList}\n                  </div>\n                  </Col>\n              </Row>\n      \n      \n             <Row>\n                 <Col className=\"px-0\">\n                \n                 <div className={(errorStartHour)? styleMenuField + \"  ml-5 mr-3 bg-danger \": styleMenuField + \"  ml-5 mr-3 \"} id=\"startHour\"  onClick={this.openStartHour}>\n                        <div className=\"report-menu-text text-center \">   {selectedStartHour}  </div>\n                        {startHoursList}\n                </div>\n             </Col>\n             <Col className=\"px-0\">\n             <div className={(errorEndHour)? styleMenuField + \"  ml-5 mr-3 bg-danger \": styleMenuField + \"  ml-5 mr-3 \"} id=\"endHour\"  onClick={this.openEndHour}>\n                        <div className=\"report-menu-text text-center \">  {selectedEndHour}  </div>\n                        {endHoursList}\n                </div>\n             </Col>\n             </Row>\n           \n           \n           \n             <Row>\n                 <Col className=\"px-0\">\n                \n                 <div className={(errorKm)? styleMenuField + \"  ml-5 mr-3 bg-danger \": styleMenuField + \"  ml-5 mr-3 \"} id=\"km\"  onClick={this.viewInput} onBlur={()=>this.changeView()}>\n                        <div className=\" report-menu-text text-center \"> \n                         <span className={(!visibleKmInput)?\"d-block\":\"d-none\"} >{this.state.insertedKm}</span>\n                         <span className={(visibleKmInput)?\"d-block\":\"d-none\"} ><input id=\"kmInput\" placeholder=\"0\" onChange={this.insertDataToInput}></input></span>\n                         \n                          </div>\n                </div>\n             </Col>\n             <Col className=\"px-0\">\n             <div className={(errorNis)? styleMenuField + \"  ml-5 mr-3 bg-danger \": styleMenuField + \"  ml-5 mr-3 \"} id=\"nis\" onClick={this.viewInput} onBlur={()=>this.changeView()}>\n                    <div className=\" report-menu-text text-center \">\n                          <span className={(!visibleNisInput)?\"d-block\":\"d-none\"}> {this.state.insertedNis} </span> \n                          <span className={(visibleNisInput)?\"d-block\":\"d-none\"} ><input id=\"nisInput\" placeholder=\"0\" onChange={this.insertDataToInput}></input></span>\n                        </div>\n                </div>\n             </Col>\n             </Row>\n         \n            <Row>\n            <Col>\n             <div className=\"report-menu-field \" id=\"remark\" onClick={this.viewInput} onBlur={()=>this.changeView()}>\n                        <div className=\"report-menu-text border-1\"> \n                         <span className=\"pr-3\"> </span>\n                         <span className={(!visibleRemarkInput)?\"d-inline\":\"d-none\"}> {this.state.insertedRemark} </span>\n                          <span className={(visibleRemarkInput)?\"d-inline\":\"d-none\"} ><input id=\"remarkInput\" placeholder=\" \" onChange={this.insertDataToInput}></input></span>\n                          </div>\n                 </div>\n                 </Col>\n                 </Row>\n                 \n         \n                 <Row  className=\" fixed-bottom bg-white align-items-center justify-content-md-center px-3 \" >\n              <Col className=\" px-1 text-center \"> \n                  <img src=\"images\\CourseControls\\Save\\drawable-mdpi\\noun_save_2429243.png\" alt=\"save\"></img>\n                  </Col>\n                  <Col className=\" px-1 text-center \">\n                  <img src=\"images\\CourseControls\\Copy\\drawable-mdpi\\noun_copy_573715.png\" alt=\"copy\"></img>\n                  </Col>\n                 \n                  <Col className=\" plus text-center mx-auto \">\n                  <img className=\"link\" src=\"images\\CourseControls\\Plus\\plus.png\" alt=\"add\" onClick={this.saveDataToServer}></img>\n                  </Col>\n                  \n                  <Col className=\" px-1 text-center \">\n                  <img src=\"images\\CourseControls\\Delete\\drawable-mdpi\\noun_delete_1610851.png\" alt=\"delete\"></img>\n                  </Col>\n                  <Col className=\" px-1 text-center \">\n                   <img src=\"images\\CourseControls\\Back\\drawable-mdpi\\noun_back_arrow_2690272.png\" alt=\"back\"></img>\n                  </Col>\n              </Row>\n             <Row>\n                 <Col><span className={(visibleErrorHoursRemark)?\"d-inline report-hours-error\":\"d-none\"}>לא ניתן לדווח על מספר פעילויות בשעות חופפות</span>\n                 </Col>\n             </Row>\n          </Container></div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeUser: state.activeUser\n});\n\n\nexport default connect(\n    mapStateToProps\n)(InsertHoursReport);\n","import React from 'react';\nimport logo from './logo.svg';\nimport { Switch, Route } from 'react-router-dom'\nimport LoginPage from './pages/login/LoginPage'\nimport CoursesPage from './pages/courses/CoursesPage'\nimport CourseDetailsPage from './pages/courses/CourseDetailsPage'\nimport UsersPage from './pages/users/UsersPage'\nimport UserDetailsPage from './pages/users/UserDetailsPage'\nimport HoursReportPage from './pages/hours/HoursReportPage'\nimport HoursApprovePage from './pages/hours/HoursApprovePage'\nimport InsertHoursReport from './pages/hours/InsertHoursReport'\n\nimport { loginAction } from \"../src/store/reducers/ActiveUser/actions\";\nimport { connect } from \"react-redux\";\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n   if (localStorage.activeUser){\n     console.log(JSON.parse(localStorage.activeUser))\n    this.props.loginAction(JSON.parse(localStorage.activeUser))\n   }\n    \n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\">\n          <LoginPage/>\n        </Route>\n        <Route exact path=\"/courses\">\n          <CoursesPage/>\n        </Route>\n        <Route path=\"/courses/:id\">\n          <CourseDetailsPage/>\n        </Route>\n        <Route exact path=\"/users\" render={() => (<UsersPage key={window.location.href}/>)}/>\n        <Route path=\"/users/:id\">\n          <UserDetailsPage/>\n        </Route>\n        <Route path=\"/hours-report\">\n          <HoursReportPage/>\n        </Route>\n        <Route path=\"/add-hours-report\">\n          <InsertHoursReport/>\n        </Route>\n        <Route path=\"/hours-approve\">\n          <HoursApprovePage/>\n        </Route>\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  activeUser: state.activeUser\n});\n\nconst mapDispatchToProps = {\n  loginAction\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HashRouter><Provider store={store}><App /></Provider></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}